limits=c(lowerlimit,upperlimit)) +
theme(legend.position = c(1,0.2))
print(nyc)
dev.off()
for(i in 0:23){
mergedstationsfilter <- mergedstations %>%
filter(hour == i)
png(filename=paste("hour",i,".png",sep=""), width = 600)
nyc <- nyc2
nyc <- nyc +
geom_point(data = mergedstationsfilter,
aes(x = station.longitude, y = station.latitude, colour=flow), size = 4) +
scale_colour_gradientn(colours=c("blue","cyan","white", "yellow","red"),
values=rescale(c(lowerlimit,-1,0,1,upperlimit)),
limits=c(lowerlimit,upperlimit)) +
theme(legend.position = c(1,0.2))
print(nyc)
dev.off()
}
i = 0
mergedstationsfilter <- mergedstations %>%
filter(hour == i)
png(filename=paste("hour",i,".png",sep=""), width = 600)
nyc <- nyc2
nyc <- nyc +
geom_point(data = mergedstationsfilter,
aes(x = station.longitude, y = station.latitude, colour=flow), size = 4) +
scale_colour_gradientn(colours=c("blue","cyan","white", "yellow","red"),
values=rescale(c(lowerlimit,-1,0,1,upperlimit)),
limits=c(lowerlimit,upperlimit)) +
theme(legend.position = c(1,0.2)) +
annotate(paste(i,":00",sep=""),x=0.5,y=0.5)
print(nyc)
dev.off()
mergedstationsfilter <- mergedstations %>%
filter(hour == i)
png(filename=paste("hour",i,".png",sep=""), width = 600)
nyc <- nyc2
nyc <- nyc +
geom_point(data = mergedstationsfilter,
aes(x = station.longitude, y = station.latitude, colour=flow), size = 4) +
scale_colour_gradientn(colours=c("blue","cyan","white", "yellow","red"),
values=rescale(c(lowerlimit,-1,0,1,upperlimit)),
limits=c(lowerlimit,upperlimit)) +
theme(legend.position = c(1,0.2)) +
annotate(paste(i,":00",sep=""),x=0.5,y=0.5)
print(nyc)
dev.off()
for(i in 0:23){
mergedstationsfilter <- mergedstations %>%
filter(hour == i)
png(filename=paste("hour",i,".png",sep=""), width = 600)
nyc <- nyc2
nyc <- nyc +
geom_point(data = mergedstationsfilter,
aes(x = station.longitude, y = station.latitude, colour=flow), size = 4) +
scale_colour_gradientn(colours=c("blue","cyan","white", "yellow","red"),
values=rescale(c(lowerlimit,-1,0,1,upperlimit)),
limits=c(lowerlimit,upperlimit)) +
theme(legend.position = c(1,0.2)) +
annotate(paste("text",x=0.5,y=0.5,label=paste(i,":00",sep="")))
print(nyc)
dev.off()
}
dev.off()
for(i in 0:23){
mergedstationsfilter <- mergedstations %>%
filter(hour == i)
png(filename=paste("hour",i,".png",sep=""), width = 600)
nyc <- nyc2
nyc <- nyc +
geom_point(data = mergedstationsfilter,
aes(x = station.longitude, y = station.latitude, colour=flow), size = 4) +
scale_colour_gradientn(colours=c("blue","cyan","white", "yellow","red"),
values=rescale(c(lowerlimit,-1,0,1,upperlimit)),
limits=c(lowerlimit,upperlimit)) +
theme(legend.position = c(1,0.2)) +
annotate("text",x=0.5,y=0.5,label=paste(i,":00",sep="")))
print(nyc)
dev.off()
}
dev.off()
for(i in 0:23){
mergedstationsfilter <- mergedstations %>%
filter(hour == i)
png(filename=paste("hour",i,".png",sep=""), width = 600)
nyc <- nyc2
nyc <- nyc +
geom_point(data = mergedstationsfilter,
aes(x = station.longitude, y = station.latitude, colour=flow), size = 4) +
scale_colour_gradientn(colours=c("blue","cyan","white", "yellow","red"),
values=rescale(c(lowerlimit,-1,0,1,upperlimit)),
limits=c(lowerlimit,upperlimit)) +
theme(legend.position = c(1,0.2)) +
annotate("text",x=0.5,y=0.5,label=paste(i,":00",sep=""))
print(nyc)
dev.off()
}
for(i in 0:23){
mergedstationsfilter <- mergedstations %>%
filter(hour == i)
png(filename=paste("hour",i,".png",sep=""), width = 600)
nyc <- nyc2
nyc <- nyc +
geom_point(data = mergedstationsfilter,
aes(x = station.longitude, y = station.latitude, colour=flow), size = 4) +
scale_colour_gradientn(colours=c("blue","cyan","white", "yellow","red"),
values=rescale(c(lowerlimit,-1,0,1,upperlimit)),
limits=c(lowerlimit,upperlimit)) +
theme(legend.position = c(1,0.2)) +
annotate("text",x=1,y=1,label=paste(i,":00",sep=""))
print(nyc)
dev.off()
}
dev.off()
dev.off()
dev.off()
i = 0
mergedstationsfilter <- mergedstations %>%
filter(hour == i)
#png(filename=paste("hour",i,".png",sep=""), width = 600)
nyc <- nyc2
nyc <- nyc +
geom_point(data = mergedstationsfilter,
aes(x = station.longitude, y = station.latitude, colour=flow), size = 4) +
scale_colour_gradientn(colours=c("blue","cyan","white", "yellow","red"),
values=rescale(c(lowerlimit,-1,0,1,upperlimit)),
limits=c(lowerlimit,upperlimit)) +
theme(legend.position = c(1,0.2)) +
annotate("text", x=1, y=1,label=paste(i,":00",sep=""))
print(nyc)
paste(i,":00",sep="")
mergedstationsfilter <- mergedstations %>%
filter(hour == i)
#png(filename=paste("hour",i,".png",sep=""), width = 600)
nyc <- nyc2
nyc <- nyc +
geom_point(data = mergedstationsfilter,
aes(x = station.longitude, y = station.latitude, colour=flow), size = 4) +
scale_colour_gradientn(colours=c("blue","cyan","white", "yellow","red"),
values=rescale(c(lowerlimit,-1,0,1,upperlimit)),
limits=c(lowerlimit,upperlimit)) +
theme(legend.position = c(1,0.2))
print(nyc)
mergedstationsfilter <- mergedstations %>%
filter(hour == i)
#png(filename=paste("hour",i,".png",sep=""), width = 600)
nyc <- nyc2
nyc <- nyc +
geom_point(data = mergedstationsfilter,
aes(x = station.longitude, y = station.latitude, colour=flow), size = 4) +
scale_colour_gradientn(colours=c("blue","cyan","white", "yellow","red"),
values=rescale(c(lowerlimit,-1,0,1,upperlimit)),
limits=c(lowerlimit,upperlimit)) +
theme(legend.position = c(1,0.2)) +
annotate("text", x=-73.92, y=40.72,label=paste(i,":00",sep=""))
print(nyc)
for(i in 0:23){
mergedstationsfilter <- mergedstations %>%
filter(hour == i)
#png(filename=paste("hour",i,".png",sep=""), width = 600)
nyc <- nyc2
nyc <- nyc +
geom_point(data = mergedstationsfilter,
aes(x = station.longitude, y = station.latitude, colour=flow), size = 4) +
scale_colour_gradientn(colours=c("blue","cyan","white", "yellow","red"),
values=rescale(c(lowerlimit,-1,0,1,upperlimit)),
limits=c(lowerlimit,upperlimit)) +
theme(legend.position = c(1,0.2)) +
annotate("text", x=-73.92, y=40.72,label=paste(i,":00",sep=""))
print(nyc)
dev.off()
}
for(i in 0:23){
mergedstationsfilter <- mergedstations %>%
filter(hour == i)
png(filename=paste("hour",i,".png",sep=""), width = 600)
nyc <- nyc2
nyc <- nyc +
geom_point(data = mergedstationsfilter,
aes(x = station.longitude, y = station.latitude, colour=flow), size = 4) +
scale_colour_gradientn(colours=c("blue","cyan","white", "yellow","red"),
values=rescale(c(lowerlimit,-1,0,1,upperlimit)),
limits=c(lowerlimit,upperlimit)) +
theme(legend.position = c(1,0.2)) +
annotate("text", x=-73.92, y=40.72,label=paste(i,":00",sep=""))
print(nyc)
dev.off()
}
for(i in 0:23){
mergedstationsfilter <- mergedstations %>%
filter(hour == i)
png(filename=paste("hour",i,".png",sep=""), width = 600)
nyc <- nyc2
nyc <- nyc +
geom_point(data = mergedstationsfilter,
aes(x = station.longitude, y = station.latitude, colour=flow), size = 4) +
scale_colour_gradientn(colours=c("blue","cyan","white", "yellow","red"),
values=rescale(c(lowerlimit,-1,0,1,upperlimit)),
limits=c(lowerlimit,upperlimit)) +
theme(legend.position = c(1,0.2)) +
annotate("text", x=-73.92, y=40.72, label=paste(i,":00",sep=""), size=5)
print(nyc)
dev.off()
}
for(i in 0:23){
mergedstationsfilter <- mergedstations %>%
filter(hour == i)
png(filename=paste("hour",i,".png",sep=""), width = 600)
nyc <- nyc2
nyc <- nyc +
geom_point(data = mergedstationsfilter,
aes(x = station.longitude, y = station.latitude, colour=flow), size = 4) +
scale_colour_gradientn(colours=c("blue","cyan","white", "yellow","red"),
values=rescale(c(lowerlimit,-1,0,1,upperlimit)),
limits=c(lowerlimit,upperlimit)) +
theme(legend.position = c(1,0.2)) +
annotate("text", x=-73.92, y=40.72, label=paste(i,":00",sep=""), size=9)
print(nyc)
dev.off()
}
weekends <- dbReadTable(con, "weekends")
library(RPostgreSQL)
library(ggplot2)
library(dplyr)
library(GGally)
con <- dbConnect(RPostgreSQL::PostgreSQL(), user="postgres", password="sinaiA9xpsql",
dbname="bikeshare")
con
fulldata <- dbReadTable(con, "hourlyrideswithweather")
ggplot(fulldata, aes(x=ridescount, fill=conditions)) +
geom_histogram()
ggplot(fulldata, aes(x=ridescount, y=temp)) +
geom_point() +
geom_smooth(method="lm", color="red")
ggplot(fulldata, aes(x=ridescount, y=temp, colour = conditions)) +
geom_point() +
geom_smooth(method="lm", color="red")
ggplot(fulldata, aes(x=ridescount, y=temp, colour = conditions)) +
geom_point() +
geom_smooth(method="lm", color="red") +
facet_grid(. ~ hour)
ggplot(fulldata, aes(x=ridescount, y=temp, colour = conditions)) +
geom_point() +
geom_smooth(method="lm", color="red") +
facet_wrap(. ~ hour)
ggplot(fulldata, aes(x=ridescount, y=temp, colour = conditions)) +
geom_point() +
geom_smooth(method="lm", color="red") +
facet_grid(. ~ hour)
ggplot(fulldata, aes(x=ridescount, y=temp, colour = conditions)) +
geom_point() +
geom_smooth(method="lm", color="red") +
facet_grid(. ~ hour, nrow=3)
?facet_grid
?facet_wratp
?facet_wrap
ggplot(fulldata, aes(x=ridescount, y=temp, colour = conditions)) +
geom_point() +
geom_smooth(method="lm", color="red") +
facet_grid(. ~ hour, nrow=6, ncol=4)
ggplot(fulldata, aes(x=ridescount, y=temp, colour = conditions)) +
geom_point() +
geom_smooth(method="lm", color="red") +
facet_wrap(. ~ hour, nrow=6, ncol=4)
ggplot(fulldata, aes(x=ridescount, y=temp, colour = conditions)) +
geom_point() +
geom_smooth(method="lm", color="red") +
facet_wrap(. ~ hour, nrow=6, ncol=4)
ggplot(fulldata, aes(x=ridescount, y=temp, colour = conditions)) +
geom_point() +
geom_smooth(method="lm", color="red")
ggplot(fulldata, aes(x=ridescount, y=temp, colour = conditions)) +
geom_point() +
geom_smooth(method="lm", color="red") +
facet_wrap( ~ hour, nrow=6, ncol=4)
library(ggthemes)
ggplot(fulldata, aes(x=ridescount, y=temp, colour = conditions)) +
geom_point() +
geom_smooth(method="lm", color="red") +
facet_wrap( ~ hour, nrow=6, ncol=4) +
theme_economist()
ggplot(fulldata, aes(x=ridescount, y=temp, colour = conditions)) +
geom_point() +
geom_smooth(method="lm", color="red") +
facet_wrap( ~ hour, nrow=6, ncol=4) +
theme_tufte()
goodweather <- c("Clear", "Fog", "Haze", "Mostly Cloudy", "Overcase", "Partly Cloudy", "Scattered Clouds")
badweather <- c("Heavy Rain", "Heavy Snow", "Light Freezing Rain", "Light Rain", "Light Snow",
"Rain", "Snow", "Unknown")
fulldata$simplifiedconditions <- ifelse(fulldata$conditions %in% goodweather, "Good Weather", "Bad Weather")
ggplot(fulldata, aes(x=ridescount, y=temp, colour = simplifiedconditions)) +
geom_point() +
geom_smooth(method="lm", color="red") +
facet_wrap( ~ hour, nrow=6, ncol=4) +
theme_tufte()
ggplot(fulldata, aes(x=ridescount, y=humidity, colour = simplifiedconditions)) +
geom_point() +
geom_smooth(method="lm", color="red") +
facet_wrap( ~ hour, nrow=6, ncol=4) +
theme_tufte()
ggplot(fulldata, aes(x=ridescount, y=temp, colour = simplifiedconditions)) +
geom_point() +
geom_smooth(method="lm", color="red") +
facet_wrap( ~ hour, nrow=6, ncol=4) +
theme_tufte()
model <- lm(ridescount ~ temp+month+hour+humidity+conditions+weekend, data=fulldataraw)
model <- lm(ridescount ~ temp+month+hour+humidity+conditions+weekend, data=fulldata)
model
summary(model)
install.packages("coefplot")
library(coefplot)
coefplot(model)
summary(model)
fulldata$year <- as.factor(fulldata$year)
fulldata$month <- as.factor(fulldata$month)
fulldata$day <- as.factor(fulldata$day)
fulldata$hour <- as.factor(fulldata$hour)
fulldata$weekend <- as.factor(fulldata$weekend)
ggplot(fulldata, aes(x=ridescount, y=temp, colour = simplifiedconditions)) +
geom_point() +
geom_smooth(method="lm", color="red") +
facet_wrap( ~ hour, nrow=6, ncol=4) +
theme_tufte()
model <- lm(ridescount ~ temp+month+hour+humidity+conditions+weekend, data=fulldata)
summary(model)
coefplot(model)
coefplot(model) +
theme_tufte()
summary(model)
fulldata %>% filter(month == 1)
summary(model)
model <- lm(ridescount ~ temp+month+hour+humidity+conditions+weekend+pressure, data=fulldata)
summary(model)
model <- lm(ridescount ~ temp+month+hour+humidity+conditions+weekend, data=fulldata)
summary(model)
var = "temp"
ggplot(fulldata, aes(x=ridescount, y=temp, colour = simplifiedconditions)) +
geom_point() +
geom_smooth(method="lm", color="red") +
facet_wrap( ~ hour, nrow=6, ncol=4) +
theme_tufte() +
theme(plot.title = paste(var,"Colored by Condition, Facet by Hour", sep=" "))
paste(var,"Colored by Condition, Facet by Hour", sep=" ")
ggplot(fulldata, aes(x=ridescount, y=temp, colour = simplifiedconditions)) +
geom_point() +
geom_smooth(method="lm", color="red") +
facet_wrap( ~ hour, nrow=6, ncol=4) +
theme_tufte() +
ggtitle(paste(var,"Colored by Condition, Facet by Hour", sep=" "))
toupper('a')
nchar(var)
toupper(substr(var,1,1))
substr(var,2,char(var))
substr(var,2,nchar(var))
ggplot(fulldata, aes(x=ridescount, y=temp, colour = simplifiedconditions)) +
geom_point() +
geom_smooth(method="lm", color="red") +
facet_wrap( ~ hour, nrow=6, ncol=4) +
theme_tufte() +
ggtitle(paste(toupper(substr(var,1,1)),substr(var,2,nchar(var))," Colored by Condition, Facet by Hour", sep=""))
ggplot(fulldata, aes(x=ridescount, y=temp, colour = simplifiedconditions)) +
geom_point() +
geom_smooth(method="lm", color="red") +
facet_wrap( ~ hour, nrow=6, ncol=4) +
theme_tufte() +
ggtitle(paste(toupper(substr(var,1,1)),substr(var,2,nchar(var)),
" Colored by Weather Condition, Facet by Hour", sep=""))
for(var in c("temp", "humidity", "pressure", "visibility", "windspeed")){
png(filename=paste("analysis",var,".png",sep=""))
ggplot(fulldata, aes(x=ridescount, y=temp, colour = simplifiedconditions)) +
geom_point() +
geom_smooth(method="lm", color="red") +
facet_wrap( ~ hour, nrow=6, ncol=4) +
theme_tufte() +
ggtitle(paste(toupper(substr(var,1,1)),substr(var,2,nchar(var)),
" Colored by Weather Condition, Facet by Hour", sep=""))
dev.off()
}
for(var in c("temp", "humidity", "pressure", "visibility", "windspeed")){
png(filename=paste("analysis",var,".png",sep=""))
print(ggplot(fulldata, aes(x=ridescount, y=temp, colour = simplifiedconditions)) +
geom_point() +
geom_smooth(method="lm", color="red") +
facet_wrap( ~ hour, nrow=6, ncol=4) +
theme_tufte() +
ggtitle(paste(toupper(substr(var,1,1)),substr(var,2,nchar(var)),
" Colored by Weather Condition, Facet by Hour", sep="")))
dev.off()
}
for(var in c("temp", "humidity", "pressure", "visibility", "windspeed")){
png(filename=paste("analysis",var,".png",sep=""))
print(ggplot(fulldata, aes(x=ridescount, y=var, colour = simplifiedconditions)) +
geom_point() +
geom_smooth(method="lm", color="red") +
facet_wrap( ~ hour, nrow=6, ncol=4) +
theme_tufte() +
ggtitle(paste(toupper(substr(var,1,1)),substr(var,2,nchar(var)),
" Colored by Weather Condition, Facet by Hour", sep="")))
dev.off()
}
get("hello")
for(var in c("temp", "humidity", "pressure", "visibility", "windspeed")){
png(filename=paste("analysis",get(var),".png",sep=""))
print(ggplot(fulldata, aes(x=ridescount, y=var, colour = simplifiedconditions)) +
geom_point() +
geom_smooth(method="lm", color="red") +
facet_wrap( ~ hour, nrow=6, ncol=4) +
theme_tufte() +
ggtitle(paste(toupper(substr(var,1,1)),substr(var,2,nchar(var)),
" Colored by Weather Condition, Facet by Hour", sep="")))
dev.off()
}
eval(parse(text = var))
for(var in c("temp", "humidity", "pressure", "visibility", "windspeed")){
png(filename=paste("analysis",eval(parse(text = var)),".png",sep=""))
print(ggplot(fulldata, aes(x=ridescount, y=var, colour = simplifiedconditions)) +
geom_point() +
geom_smooth(method="lm", color="red") +
facet_wrap( ~ hour, nrow=6, ncol=4) +
theme_tufte() +
ggtitle(paste(toupper(substr(var,1,1)),substr(var,2,nchar(var)),
" Colored by Weather Condition, Facet by Hour", sep="")))
dev.off()
}
for(var in c("temp", "humidity", "pressure", "visibility", "windspeed")){
png(filename=paste("analysis",var,".png",sep=""))
print(ggplot(fulldata, aes(x=ridescount, y=get(var), colour = simplifiedconditions)) +
geom_point() +
geom_smooth(method="lm", color="red") +
facet_wrap( ~ hour, nrow=6, ncol=4) +
theme_tufte() +
ggtitle(paste(toupper(substr(var,1,1)),substr(var,2,nchar(var)),
" Colored by Weather Condition, Facet by Hour", sep="")))
dev.off()
}
for(var in c("temp", "humidity", "pressure", "visibility", "windspeed")){
png(filename=paste("analysis",var,".png",sep=""), width=600)
print(ggplot(fulldata, aes(x=ridescount, y=get(var), colour = simplifiedconditions)) +
geom_point() +
geom_smooth(method="lm", color="red") +
facet_wrap( ~ hour, nrow=6, ncol=4) +
theme_tufte() +
ggtitle(paste(toupper(substr(var,1,1)),substr(var,2,nchar(var)),
" Colored by Weather Condition, Facet by Hour", sep="")))
dev.off()
}
monthlyagg <- fulldata %>%
group_by(year, month) %>%
summarise(ridescount = sum(ridescount))
monthlyagg$date <- ISOdatetime(monthlyagg$year, monthlyagg$month, 1, 0, 0, 0)
View(monthlyagg)
monthlyagg <- fulldata %>%
group_by(year, month) %>%
summarise(ridescount = sum(ridescount))
dailyagg <- fulldata %>%
group_by(year, month, day) %>%
summarise(ridescount = sum(ridescount))
dailyagg <- fulldata %>%
group_by(year, month, day)
dailyagg <- fulldata %>%
group_by(year, month, day) %>%
summarise(ridescount = sum(ridescount))
?group_by
fulldata$year <- as.numeric(fulldata$year)
dailyagg <- fulldata %>%
group_by(year, month, day) %>%
summarise(ridescount = sum(ridescount))
fulldata$year <- as.numeric(fulldata$year)
fulldata$month <- as.numeric(fulldata$month)
fulldata$day <- as.numeric(fulldata$day)
dailyagg <- fulldata %>%
group_by(year, month, day) %>%
summarise(ridescount = sum(ridescount))
fulldata$hour <- as.numeric(fulldata$hour)
dailyagg <- fulldata %>%
group_by(year, month, day) %>%
summarise(ridescount = sum(ridescount))
fulldata$conditions <- as.numeric(fulldata$conditions)
con <- dbConnect(RPostgreSQL::PostgreSQL(), user="postgres", password="sinaiA9xpsql",
dbname="bikeshare")
con
fulldata <- dbReadTable(con, "hourlyrideswithweather")
dailyagg <- fulldata %>%
group_by(year, month, day) %>%
summarise(ridescount = sum(ridescount))
dailyagg <- fulldata %>%
group_by(year, month, day) %>%
summarise(year, month, day, ridescount = sum(ridescount))
monthlyagg <- fulldata %>%
group_by(year, month) %>%
summarise(ridescount = sum(ridescount))
conditionsagg <- fulldata %>%
group_by(conditions) %>%
summarise(ridescount = mean(ridescount))
library(dplyr)
dailyagg <- fulldata %>%
group_by(year, month, day) %>%
summarise(ridescount = sum(ridescount))
library(RPostgreSQL)
library(ggplot2)
library(dplyr)
library(GGally)
library(ggthemes)
library(coefplot)
con <- dbConnect(RPostgreSQL::PostgreSQL(), user="postgres", password="sinaiA9xpsql",
dbname="bikeshare")
con
fulldata <- dbReadTable(con, "hourlyrideswithweather")
monthlyagg <- fulldata %>%
group_by(year, month) %>%
summarise(ridescount = sum(ridescount))
