3*sd(mergedweekday$startcount)]
startmergedweekdaycap <- mean(mergedweekday$startcount) + 3*sd(mergedweekday$startcount)
startmergedweekdaycap <- mean(mergedweekday$startcount) + 3*sd(mergedweekday$startcount)
startmergedweekendcap <- mean(mergedweekend$startcount) + 3*sd(mergedweekend$startcount)
endmergedweekdaycap <- mean(mergedweekday$endcount) + 3*sd(mergedweekday$endcount)
endmergedweekendcap <- mean(mergedweekend$endcount) + 3*sd(mergedweekend$endcount)
mergedweekday$startcount[mergedweekday$startcount > startmergedweekdaycap]
mergedweekday$startcount
mergedweekday$startcount > 5
mergedweekday$startcount > startmergedweekdaycap
startmergedweekdaycap
mergedweekday$startcount > mean(mergedweekday$startcount)
mean(mergedweekday$startcount)
mergedweekday$startcount > average(mergedweekday$startcount)
?mean
is.na(mergedweekday$startcount)
library(RPostgreSQL)
library(ggmap)
library(ggplot2)
library(dplyr)
library(plyr)
library(scales)
library(animation)
con <- dbConnect(RPostgreSQL::PostgreSQL(), user="postgres", password="sinaiA9xpsql",
dbname="bikeshare")
con
start.station.pop <- dbReadTable(con, "startstationweekendhourly")
end.station.pop <- dbReadTable(con, "endstationweekendhourly")
colnames(start.station.pop)[2] <- "station.id"
colnames(end.station.pop)[2] <- "station.id"
end.station.pop$count[is.na(end.station.pop$count)]
addzerosweekend <- function(data)
{
comboaz <- filter(combo, weekend == 1)
vec <- unique(comboaz$station.id[!(comboaz$station.id %in% data$station.id)])
return(vec)
}
addzerosweekday <- function(data)
{
comboaz <- filter(combo, weekend == 0)
vec <- unique(comboaz$station.id[!(comboaz$station.id %in% data$station.id)])
return(vec)
}
makedf <- function(ec)
{
df <- data.frame(station.id = ec)
}
combo <- expand.grid(unique(start.station.pop$station.id),0:23,0:1)
colnames(combo) <- c("station.id", "hour", "weekend")
stationagg <- start.station.pop %>%
select(-count, -hour, -weekend)
stationagg <- unique(stationagg)
start.station.weekend <- filter(start.station.pop, weekend==1)
start.station.weekend <- select(start.station.weekend, -weekend)
emptycheckss <- dlply(start.station.weekend, .variables="hour", .fun=addzerosweekend)
missingss <- ldply(emptycheckss, .fun = makedf)
missingss <- merge(missingss, stationagg, by="station.id")
missingss$count <- 0
start.station.weekend <- rbind(start.station.weekend, missingss)
start.station.weekend$startcount
start.station.weekend$count
start.station.weekend$count[is.na(start.station.weekend$count)]
start.station.weekday <- filter(start.station.pop, weekend==0)
start.station.weekday <- select(start.station.weekday, -weekend)
emptycheckss <- dlply(start.station.weekday, .variables="hour", .fun=addzerosweekday)
missingss <- ldply(emptycheckss, .fun = makedf)
missingss <- merge(missingss, stationagg, by="station.id")
missingss$count <- 0
start.station.weekday <- rbind(start.station.weekday, missingss)
end.station.weekend <- filter(end.station.pop, weekend==1)
end.station.weekend <- select(end.station.weekend, -weekend)
emptycheckes <- dlply(end.station.weekend, .variables="hour", .fun=addzerosweekend)
missinges <- ldply(emptycheckes, .fun=makedf)
missinges <- merge(missinges, stationagg, by="station.id")
missinges$count <- 0
end.station.weekend <- rbind(end.station.weekend, missinges)
end.station.weekday <- filter(end.station.pop, weekend==0)
end.station.weekday <- select(end.station.weekday, -weekend)
emptycheckes <- dlply(end.station.weekday, .variables="hour", .fun=addzerosweekday)
missinges <- ldply(emptycheckes, .fun=makedf)
missinges <- merge(missinges, stationagg, by="station.id")
missinges$count <- 0
end.station.weekday <- rbind(end.station.weekday, missinges)
colnames(start.station.weekend)[6] <- "startcount"
colnames(end.station.weekend)[6] <- "endcount"
colnames(start.station.weekday)[6] <- "startcount"
colnames(end.station.weekday)[6] <- "endcount"
mergedweekend <- merge(start.station.weekend, end.station.weekend,
by=c("hour", "station.id", "station.name",
"station.latitude", "station.longitude"))
mergedweekend <- mergedweekend %>%
mutate(flow = endcount - startcount)
is.na(mergedweekend$startcount)
mergedweekday <- merge(start.station.weekday, end.station.weekday,
by=c("hour", "station.id", "station.name",
"station.latitude", "station.longitude"))
mergedweekday <- mergedweekday %>%
mutate(flow = endcount - startcount)
rm(combo, end.station.pop, missinges, missingss, start.station.pop, stationagg,
emptycheckes, emptycheckss, addzerosweekday, addzerosweekend, makedf,
end.station.weekday, end.station.weekend, start.station.weekday, start.station.weekend)
rm(combo, end.station.pop, missinges, missingss, start.station.pop, stationagg,
emptycheckes, emptycheckss, addzerosweekday, addzerosweekend, makedf,
end.station.weekday, end.station.weekend, start.station.weekday, start.station.weekend)
warnings()
mean(mergedweekday$startcount)
mergedweekday$startcount[mergedweekday$startcount > startmergedweekdaycap]
startmergedweekdaycap <- mean(mergedweekday$startcount) + 3*sd(mergedweekday$startcount)
mergedweekday$startcount[mergedweekday$startcount > startmergedweekdaycap]
startmergedweekdaycap <- mean(mergedweekday$startcount) + 3*sd(mergedweekday$startcount)
startmergedweekendcap <- mean(mergedweekend$startcount) + 3*sd(mergedweekend$startcount)
endmergedweekdaycap <- mean(mergedweekday$endcount) + 3*sd(mergedweekday$endcount)
endmergedweekendcap <- mean(mergedweekend$endcount) + 3*sd(mergedweekend$endcount)
mergedweekday$startcount[mergedweekday$startcount > startmergedweekdaycap] <-
startmergedweekdaycap
mergedweekend$startcount[mergedweekend$startcount > startmergedweekendcap] <-
startmergedweekendcap
mergedweekday$endcount[mergedweekday$endcount > endmergedweekdaycap] <-
endmergedweekdaycap
mergedweekend$endcount[mergedweekday$endcount > endmergedweekendcap] <-
endmergedweekendcap
library(RPostgreSQL)
library(ggplot2)
library(dplyr)
library(GGally)
library(ggthemes)
library(coefplot)
con <- dbConnect(RPostgreSQL::PostgreSQL(), user="postgres", password="insertpasswordhere",
dbname="bikeshare")
con
fulldata <- dbReadTable(con, "hourlyrideswithweather")
library(RPostgreSQL)
library(ggplot2)
library(dplyr)
library(GGally)
library(ggthemes)
library(coefplot)
con <- dbConnect(RPostgreSQL::PostgreSQL(), user="postgres", password="sinaiA9xpsql",
dbname="bikeshare")
con
fulldata <- dbReadTable(con, "hourlyrideswithweather")
goodweather <- c("Clear", "Fog", "Haze", "Mostly Cloudy", "Overcase", "Partly Cloudy", "Scattered Clouds")
badweather <- c("Heavy Rain", "Heavy Snow", "Light Freezing Rain", "Light Rain", "Light Snow",
"Rain", "Snow", "Unknown")
fulldata$simplifiedconditions <- ifelse(fulldata$conditions %in% goodweather, "Good Weather", "Bad Weather")
fulldata$year <- as.factor(fulldata$year)
fulldata$month <- as.factor(fulldata$month)
fulldata$day <- as.factor(fulldata$day)
fulldata$hour <- as.factor(fulldata$hour)
fulldata$weekend <- as.factor(fulldata$weekend)
ggplot(fulldata, aes(x=ridescount, fill=conditions)) +
geom_histogram()
ggplot(fulldata, aes(x=ridescount, y=temp, colour = conditions)) +
geom_point() +
geom_smooth(method="lm", color="red")
var = "temp"
print(ggplot(fulldata, aes(x=ridescount, y=get(var), colour = simplifiedconditions)) +
geom_point() +
geom_smooth(method="lm", color="red") +
facet_wrap( ~ hour, nrow=6, ncol=4) +
theme_tufte() +
ggtitle(paste(toupper(substr(var,1,1)),substr(var,2,nchar(var)),
" Colored by Weather Condition, Facet by Hour", sep="")))
model <- lm(ridescount ~ temp+month+hour+humidity+conditions+weekend, data=fulldata)
coefplot(model) +
theme_tufte()
summary(model)
library(RPostgreSQL)
library(ggmap)
library(ggplot2)
library(dplyr)
library(plyr)
library(scales)
library(animation)
con <- dbConnect(RPostgreSQL::PostgreSQL(), user="postgres", password="sinaiA9xpsql",
dbname="bikeshare")
con
start.station.pop <- dbReadTable(con, "startstationweekendhourly")
end.station.pop <- dbReadTable(con, "endstationweekendhourly")
colnames(start.station.pop)[2] <- "station.id"
colnames(end.station.pop)[2] <- "station.id"
addzerosweekend <- function(data)
{
comboaz <- filter(combo, weekend == 1)
vec <- unique(comboaz$station.id[!(comboaz$station.id %in% data$station.id)])
return(vec)
}
addzerosweekday <- function(data)
{
comboaz <- filter(combo, weekend == 0)
vec <- unique(comboaz$station.id[!(comboaz$station.id %in% data$station.id)])
return(vec)
}
makedf <- function(ec)
{
df <- data.frame(station.id = ec)
}
combo <- expand.grid(unique(start.station.pop$station.id),0:23,0:1)
colnames(combo) <- c("station.id", "hour", "weekend")
stationagg <- start.station.pop %>%
select(-count, -hour, -weekend)
stationagg <- unique(stationagg)
start.station.weekend <- filter(start.station.pop, weekend==1)
start.station.weekend <- select(start.station.weekend, -weekend)
emptycheckss <- dlply(start.station.weekend, .variables="hour", .fun=addzerosweekend)
missingss <- ldply(emptycheckss, .fun = makedf)
missingss <- merge(missingss, stationagg, by="station.id")
missingss$count <- 0
start.station.weekend <- rbind(start.station.weekend, missingss)
start.station.weekday <- filter(start.station.pop, weekend==0)
start.station.weekday <- select(start.station.weekday, -weekend)
emptycheckss <- dlply(start.station.weekday, .variables="hour", .fun=addzerosweekday)
missingss <- ldply(emptycheckss, .fun = makedf)
missingss <- merge(missingss, stationagg, by="station.id")
missingss$count <- 0
start.station.weekday <- rbind(start.station.weekday, missingss)
end.station.weekend <- filter(end.station.pop, weekend==1)
end.station.weekend <- select(end.station.weekend, -weekend)
emptycheckes <- dlply(end.station.weekend, .variables="hour", .fun=addzerosweekend)
missinges <- ldply(emptycheckes, .fun=makedf)
missinges <- merge(missinges, stationagg, by="station.id")
missinges$count <- 0
end.station.weekend <- rbind(end.station.weekend, missinges)
end.station.weekday <- filter(end.station.pop, weekend==0)
end.station.weekday <- select(end.station.weekday, -weekend)
emptycheckes <- dlply(end.station.weekday, .variables="hour", .fun=addzerosweekday)
missinges <- ldply(emptycheckes, .fun=makedf)
missinges <- merge(missinges, stationagg, by="station.id")
missinges$count <- 0
end.station.weekday <- rbind(end.station.weekday, missinges)
colnames(start.station.weekend)[6] <- "startcount"
colnames(end.station.weekend)[6] <- "endcount"
colnames(start.station.weekday)[6] <- "startcount"
colnames(end.station.weekday)[6] <- "endcount"
mergedweekend <- merge(start.station.weekend, end.station.weekend,
by=c("hour", "station.id", "station.name",
"station.latitude", "station.longitude"))
mergedweekend <- mergedweekend %>%
mutate(flow = endcount - startcount)
mergedweekday <- merge(start.station.weekday, end.station.weekday,
by=c("hour", "station.id", "station.name",
"station.latitude", "station.longitude"))
mergedweekday <- mergedweekday %>%
mutate(flow = endcount - startcount)
rm(combo, end.station.pop, missinges, missingss, start.station.pop, stationagg,
emptycheckes, emptycheckss, addzerosweekday, addzerosweekend, makedf,
end.station.weekday, end.station.weekend, start.station.weekday, start.station.weekend)
nyc <- get_map(location = c(lon=-73.968410, lat=40.725496), zoom = 12)
upperweekendlimit <- max(mergedweekend$flow)
lowerweekendlimit <- min(mergedweekend$flow)
upperweekdaylimit <- max(mergedweekday$flow)
lowerweekdaylimit <- min(mergedweekday$flow)
nyc2 <- ggmap(nyc)
i = 17
mergedstationsfilter <- mergedweekend %>%
filter(hour == i)
nyc <- nyc2
nyc <- nyc +
geom_point(data = mergedstationsfilter,
aes(x = station.longitude, y = station.latitude, colour=flow), size = 4) +
scale_colour_gradientn(colours=c("blue","cyan","white", "yellow","red"),
values=rescale(c(lowerweekendlimit,-1,0,1,upperweekendlimit)),
limits=c(lowerweekendlimit,upperweekendlimit)) +
theme(legend.position = c(1,0.2)) +
annotate("text", x=-73.92, y=40.72, label=paste(i,":00",sep=""), size=9)
print(nyc)
mergedweekend$flow
ggplot(mergedweekday, aes(x=flow)) + geom_histogram()
mean(mergedweekday$flow)
upperweekdaycap <- mean(mergedweekday$flow) + 3*sd(mergedweekday$flow)
upperweekdaycap <- mean(mergedweekday$flow) + 3*sd(mergedweekday$flow)
lowerweeekdaycap <- mean(mergedweekday$flow) - 3*sd(mergedweekday$flow)
upperweekendcap <- mean(mergedweekend$flow) + 3*sd(mergedweekend$flow)
lowerweekendcap <- mean(mergedweekend$flow) - 3*sd(mergedweekend$flow)
lowerweekdaycap <- mean(mergedweekday$flow) - 3*sd(mergedweekday$flow)
upperweekendcap <- mean(mergedweekend$flow) + 3*sd(mergedweekend$flow)
lowerweekendcap <- mean(mergedweekend$flow) - 3*sd(mergedweekend$flow)
mergedweekday$flow[mergedweekday$flow > upperweekdaycap] <- upperweekdaycap
mergedweekday$flow[mergedweekday$flow < lowerweekdaycap] <- lowerweekdaycap
mergedweekend$flow[mergedweekend$flow > upperweekendcap] <- upperweekendcap
mergedweekend$flow[mergedweekend$flow < lowerweekendcap] <- lowerweekendcap
ggplot(mergedweekday, aes(x=startcount)) + geom_histogram()
ggplot(mergedweekday, aes(x=flow)) + geom_histogram()
i = 17
mergedstationsfilter <- mergedweekend %>%
filter(hour == i)
nyc <- nyc2
nyc <- nyc +
geom_point(data = mergedstationsfilter,
aes(x = station.longitude, y = station.latitude, colour=flow), size = 4) +
scale_colour_gradientn(colours=c("blue","cyan","white", "yellow","red"),
values=rescale(c(lowerweekendlimit,-1,0,1,upperweekendlimit)),
limits=c(lowerweekendlimit,upperweekendlimit)) +
theme(legend.position = c(1,0.2)) +
annotate("text", x=-73.92, y=40.72, label=paste(i,":00",sep=""), size=9)
print(nyc)
upperweekendlimit <- max(mergedweekend$flow)
lowerweekendlimit <- min(mergedweekend$flow)
upperweekdaylimit <- max(mergedweekday$flow)
lowerweekdaylimit <- min(mergedweekday$flow)
nyc <- nyc2
nyc <- nyc +
geom_point(data = mergedstationsfilter,
aes(x = station.longitude, y = station.latitude, colour=flow), size = 4) +
values=rescale(c(lowerweekendlimit,-1,0,1,upperweekendlimit)),
scale_colour_gradientn(colours=c("blue","cyan","white", "yellow","red"),
limits=c(lowerweekendlimit,upperweekendlimit)) +
theme(legend.position = c(1,0.2)) +
annotate("text", x=-73.92, y=40.72, label=paste(i,":00",sep=""), size=9)
dev.off()
print(nyc)
}
nyc <- nyc2
nyc <- nyc +
geom_point(data = mergedstationsfilter,
aes(x = station.longitude, y = station.latitude, colour=flow), size = 4) +
scale_colour_gradientn(colours=c("blue","cyan","white", "yellow","red"),
values=rescale(c(lowerweekendlimit,-1,0,1,upperweekendlimit)),
limits=c(lowerweekendlimit,upperweekendlimit)) +
theme(legend.position = c(1,0.2)) +
annotate("text", x=-73.92, y=40.72, label=paste(i,":00",sep=""), size=9)
print(nyc)
for(i in 0:23){
mergedstationsfilter <- mergedweekday %>%
filter(hour == i)
png(filename=paste("weekdayhour",i,".png",sep=""), width = 600)
nyc <- nyc2
nyc <- nyc +
geom_point(data = mergedstationsfilter,
aes(x = station.longitude, y = station.latitude, colour=flow), size = 4) +
scale_colour_gradientn(colours=c("blue","cyan","white", "yellow","red"),
values=rescale(c(lowerweekdaylimit,-1,0,1,upperweekdaylimit)),
limits=c(lowerweekdaylimit,upperweekdaylimit)) +
theme(legend.position = c(1,0.2)) +
annotate("text", x=-73.92, y=40.72, label=paste(i,":00",sep=""), size=9)
print(nyc)
dev.off()
}
workingdirectory <- "C:/Users/Charley/Downloads/CUNY/IS 607 Data Acquisition and Management/Semester Project"
setwd(workingdirectory)
for(i in 0:23){
mergedstationsfilter <- mergedweekday %>%
filter(hour == i)
png(filename=paste("weekdayhour",i,".png",sep=""), width = 600)
nyc <- nyc2
nyc <- nyc +
geom_point(data = mergedstationsfilter,
aes(x = station.longitude, y = station.latitude, colour=flow), size = 4) +
scale_colour_gradientn(colours=c("blue","cyan","white", "yellow","red"),
values=rescale(c(lowerweekdaylimit,-1,0,1,upperweekdaylimit)),
limits=c(lowerweekdaylimit,upperweekdaylimit)) +
theme(legend.position = c(1,0.2)) +
annotate("text", x=-73.92, y=40.72, label=paste(i,":00",sep=""), size=9)
print(nyc)
dev.off()
}
library(RPostgreSQL)
library(ggplot2)
library(dplyr)
library(GGally)
library(ggthemes)
library(coefplot)
con <- dbConnect(RPostgreSQL::PostgreSQL(), user="postgres", password="sinaiA9xpsql",
dbname="bikeshare")
con
fulldata <- dbReadTable(con, "hourlyrideswithweather")
model <- lm(ridescount ~ temp+month+hour+humidity+conditions+weekend, data=fulldata)
summary(moel)
summary(model)
model <- lm(ridescount ~ temp+month+hour+humidity+conditions+weekend+visibility, data=fulldata)
summary(model)
fulldata$year <- as.factor(fulldata$year)
fulldata$month <- as.factor(fulldata$month)
fulldata$day <- as.factor(fulldata$day)
fulldata$hour <- as.factor(fulldata$hour)
fulldata$weekend <- as.factor(fulldata$weekend)
model <- lm(ridescount ~ temp+month+hour+humidity+conditions+weekend, data=fulldata)
summary(model)
modellog <- lm(log(ridescount) ~ temp+month+hour+humidity+conditions+weekend+visibility, data=fulldataraw)
model <- lm(ridescount ~ temp+month+hour+humidity+conditions+weekend+visibility, data=fulldata)
summary(model)
library(RPostgreSQL)
library(ggmap)
library(ggplot2)
library(dplyr)
library(plyr)
library(scales)
library(animation)
con <- dbConnect(RPostgreSQL::PostgreSQL(), user="postgres", password="is607",
dbname="bikeshare")
con
start.station.pop <- dbReadTable(con, "startstationweekendhourly")
end.station.pop <- dbReadTable(con, "endstationweekendhourly")
colnames(start.station.pop)[2] <- "station.id"
colnames(end.station.pop)[2] <- "station.id"
# There are a few hours when no one borrowed from a station,
# lets find those and add 0's
addzerosweekend <- function(data)
{
comboaz <- filter(combo, weekend == 1)
vec <- unique(comboaz$station.id[!(comboaz$station.id %in% data$station.id)])
return(vec)
}
addzerosweekday <- function(data)
{
comboaz <- filter(combo, weekend == 0)
vec <- unique(comboaz$station.id[!(comboaz$station.id %in% data$station.id)])
return(vec)
}
makedf <- function(ec)
{
df <- data.frame(station.id = ec)
}
combo <- expand.grid(unique(start.station.pop$station.id),0:23,0:1)
colnames(combo) <- c("station.id", "hour", "weekend")
stationagg <- start.station.pop %>%
select(-count, -hour, -weekend)
stationagg <- unique(stationagg)
start.station.weekend <- filter(start.station.pop, weekend==1)
start.station.weekend <- select(start.station.weekend, -weekend)
emptycheckss <- dlply(start.station.weekend, .variables="hour", .fun=addzerosweekend)
missingss <- ldply(emptycheckss, .fun = makedf)
missingss <- merge(missingss, stationagg, by="station.id")
missingss$count <- 0
start.station.weekend <- rbind(start.station.weekend, missingss)
start.station.weekday <- filter(start.station.pop, weekend==0)
start.station.weekday <- select(start.station.weekday, -weekend)
emptycheckss <- dlply(start.station.weekday, .variables="hour", .fun=addzerosweekday)
missingss <- ldply(emptycheckss, .fun = makedf)
missingss <- merge(missingss, stationagg, by="station.id")
missingss$count <- 0
start.station.weekday <- rbind(start.station.weekday, missingss)
end.station.weekend <- filter(end.station.pop, weekend==1)
end.station.weekend <- select(end.station.weekend, -weekend)
emptycheckes <- dlply(end.station.weekend, .variables="hour", .fun=addzerosweekend)
missinges <- ldply(emptycheckes, .fun=makedf)
missinges <- merge(missinges, stationagg, by="station.id")
missinges$count <- 0
end.station.weekend <- rbind(end.station.weekend, missinges)
end.station.weekday <- filter(end.station.pop, weekend==0)
end.station.weekday <- select(end.station.weekday, -weekend)
emptycheckes <- dlply(end.station.weekday, .variables="hour", .fun=addzerosweekday)
missinges <- ldply(emptycheckes, .fun=makedf)
missinges <- merge(missinges, stationagg, by="station.id")
missinges$count <- 0
end.station.weekday <- rbind(end.station.weekday, missinges)
colnames(start.station.weekend)[6] <- "startcount"
colnames(end.station.weekend)[6] <- "endcount"
colnames(start.station.weekday)[6] <- "startcount"
colnames(end.station.weekday)[6] <- "endcount"
mergedweekend <- merge(start.station.weekend, end.station.weekend,
by=c("hour", "station.id", "station.name",
"station.latitude", "station.longitude"))
mergedweekend <- mergedweekend %>%
mutate(flow = endcount - startcount)
mergedweekday <- merge(start.station.weekday, end.station.weekday,
by=c("hour", "station.id", "station.name",
"station.latitude", "station.longitude"))
mergedweekday <- mergedweekday %>%
mutate(flow = endcount - startcount)
rm(combo, end.station.pop, missinges, missingss, start.station.pop, stationagg,
emptycheckes, emptycheckss, addzerosweekday, addzerosweekend, makedf,
end.station.weekday, end.station.weekend, start.station.weekday, start.station.weekend)
###################################################
upperweekdaycap <- mean(mergedweekday$flow) + 3*sd(mergedweekday$flow)
lowerweekdaycap <- mean(mergedweekday$flow) - 3*sd(mergedweekday$flow)
upperweekendcap <- mean(mergedweekend$flow) + 3*sd(mergedweekend$flow)
lowerweekendcap <- mean(mergedweekend$flow) - 3*sd(mergedweekend$flow)
mergedweekday$flow[mergedweekday$flow > upperweekdaycap] <- upperweekdaycap
mergedweekday$flow[mergedweekday$flow < lowerweekdaycap] <- lowerweekdaycap
mergedweekend$flow[mergedweekend$flow > upperweekendcap] <- upperweekendcap
mergedweekend$flow[mergedweekend$flow < lowerweekendcap] <- lowerweekendcap
upperweekendlimit <- max(mergedweekend$flow)
lowerweekendlimit <- min(mergedweekend$flow)
upperweekdaylimit <- max(mergedweekday$flow)
lowerweekdaylimit <- min(mergedweekday$flow)
for(i in 0:23){
mergedstationsfilter <- mergedweekend %>%
filter(hour == i)
png(filename=paste("weekendhour",i,".png",sep=""), width = 600)
nyc <- nyc2
nyc <- nyc +
geom_point(data = mergedstationsfilter,
aes(x = station.longitude, y = station.latitude, colour=flow), size = 4) +
scale_colour_gradientn(colours=c("blue","cyan","white", "yellow","red"),
values=rescale(c(lowerweekendlimit,-1,0,1,upperweekendlimit)),
limits=c(lowerweekendlimit,upperweekendlimit)) +
theme(legend.position = c(1,0.2)) +
annotate("text", x=-73.92, y=40.72, label=paste(i,":00",sep=""), size=9)
print(nyc)
dev.off()
}
nyc <- get_map(location = c(lon=-73.968410, lat=40.725496), zoom = 12)
nyc2 <- ggmap(nyc)
for(i in 0:23){
mergedstationsfilter <- mergedweekend %>%
filter(hour == i)
png(filename=paste("weekendhour",i,".png",sep=""), width = 600)
nyc <- nyc2
nyc <- nyc +
geom_point(data = mergedstationsfilter,
aes(x = station.longitude, y = station.latitude, colour=flow), size = 4) +
scale_colour_gradientn(colours=c("blue","cyan","white", "yellow","red"),
values=rescale(c(lowerweekendlimit,-1,0,1,upperweekendlimit)),
limits=c(lowerweekendlimit,upperweekendlimit)) +
theme(legend.position = c(1,0.2)) +
annotate("text", x=-73.92, y=40.72, label=paste(i,":00",sep=""), size=9)
print(nyc)
dev.off()
}
dev.off()
dev.off()
