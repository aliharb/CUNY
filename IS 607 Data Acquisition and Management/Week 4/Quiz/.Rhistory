gcd <- n
break
}
}
}
return(gcdval)
}
gcd <- function(x,y){
gcdval <- 1
if(x < y){
for n in y:1{
if(y%%n == 0 & x%%n == 0){
gcd <- n
break
}
}
}else{
for n in x:1{
if(y%%n == 0 & x%%n == 0){
gcd <- n
break
}
}
}
return(gcdval)
}
gcd <- function(x,y){
gcdval <- 1
if(x < y){
for n in y:1{
gcd <- function(x,y){
gcdval <- 1
if(x < y){
for(n in y:1){
if(y%%n == 0 & x%%n == 0){
gcd <- n
break
}
}
}else{
for n in x:1{
if(y%%n == 0 & x%%n == 0){
gcd <- n
break
}
}
}
return(gcdval)
}
gcd <- function(x,y){
gcdval <- 1
if(x < y){
for(n in y:1){
if(y%%n == 0 & x%%n == 0){
gcd <- n
break
}
}
}else{
for(n in x:1){
if(y%%n == 0 & x%%n == 0){
gcd <- n
break
}
}
}
return(gcdval)
}
gcd(20, 30)
x <- 40
x <- 40
for(n in x:1){
if(n == 26){
break
}
}
y <- 30
x <- 40
y <- 30
for(n in x:1){
if(y%%n == 0 & x%%n == 0){
break
}
}
x <- 20
y <- 30
x < y
gcd <- function(x,y){
gcdval <- 1
if(x < y){
for(n in y:1){
if(y%%n == 0 & x%%n == 0){
gcdval <- n
break
}
}
}else{
for(n in x:1){
if(y%%n == 0 & x%%n == 0){
gcdval <- n
break
}
}
}
return(gcdval)
}
gcd(20, 30)
47%%100
100%%47
gcd(20, 20)
gcd <- function(x,y){
if(x == y){
gcdval <- x
}else if(x > y){
gcd(x-y, y)
}else{
gcd(y-x, x)
}
}
gcd <- function(x,y){
if(x == y){
gcdval <- x
}else if(x > y){
gcd(x-y, y)
}else{
gcd(y-x, x)
}
return(gcdval)
}
gcd(252, 105)
gcd <- function(x,y){
if(x == y){
gcdval <- x
}else if(x > y){
gcd(x-y, y)
}else{
gcd(y-x, x)
}
return(gcdval)
}
gcd <- function(x,y){
if(x == y){
gcdval <- x
}else if(x > y){
gcd(x-y, y)
}else{
gcd(y-x, x)
}
return(gcdval)
}
gcd(252, 105)
print("Hello")
gcd <- function(x,y){
if(x == y){
print(x, y)
gcdval <- x
}else if(x > y){
print(x, y)
gcd(x-y, y)
}else{
print(x, y)
gcd(y-x, x)
}
return(gcdval)
}
gcd(252, 105)
x <- 252
y<-105
print(x, y)
print(x & y)
print(x)
print(c(x, y))
gcd <- function(x,y){
if(x == y){
print(c(x,y))
gcdval <- x
}else if(x > y){
print(c(x,y))
gcd(x-y, y)
}else{
print(c(x,y))
gcd(y-x, x)
}
return(gcdval)
}
gcd(252, 105)
x <- 21
y<-21
if(x==y){
gcdval <- x
}
gcd <- function(x,y){
if(x == y){
print(c(x,y))
gcdval <- x
}else if(x > y){
print(c(x,y))
gcd(x-y, y)
}else{
print(c(x,y))
gcd(y-x, x)
}
return(gcdval)
}
gcd(252, 105)
gcd <- function(x,y){
if(x == y){
gcdval <- x
}else if(x > y){
gcd(x-y, y)
}else{
gcd(y-x, x)
}
return(gcdval)
}
gcd(252, 105)
x <- 2
y <- 3
x^2*y
formulacalc <- function(x,y){
return(x^2*y + 2*x*y - x*y^2)
}
formulacalc(23,45)
x <- 23^2
x <- x*45
y <- 2*23*45
z <- 45^2
z <- z*23
x+y-z
TestDatabankListMyInsight <- function(dblist, sourcefile, pricecolumnname, title){
sourcedf = read.csv(sourcefile, header = TRUE)
dbdf = read.csv(dblist, header = TRUE)
#list <- data.frame()
list <- data.frame(Service = factor(0,levels=unique(sourcedf$Service)), Title = factor(0, levels=unique(sourcedf$Title)))
#Why is this for loop working but newTestDatabankList isn't?
#for(service in unique(sourcedf$Service)){
#  for(bnk in unique(sourcedf[sourcedf$Service == service,title])){
#    if(!(bnk == "")){
#      if(!(bnk %in% dbdf$Title)){
#        list <- rbind(list, c(service,bnk))
#      }else{
#        if(is.na(dbdf[dbdf$Title == bnk, pricecolumnname])){
#          list <- rbind(list, c(service,bnk))
#        }
#      }
#    }
#  }
#}
for(service in unique(sourcedf$Service)){
if(!(service == "")){
for(bnk in unique(sourcedf[sourcedf$Service == service,title])){
if(!(bnk == "")){
if(!(bnk %in% dbdf[dbdf$Service == service,title])){
list <- rbind(list, c(service,bnk))
}else{
if(dbdf[(dbdf$Title == bnk & dbdf$Service == service), pricecolumnname] == ""){
list <- rbind(list, c(service,bnk))
}
}
}
}
}
}
return(list)
}
TestDatabankListConnect <- function(dblist, sourcefile, pricecolumnname, title){
sourcedf = read.csv(sourcefile, header = TRUE)
dbdf = read.csv(dblist, header = TRUE)
list <- data.frame(Title = factor(0, levels=unique(sourcedf[,title])))
for(bnk in unique(sourcedf[,title])){
if(!(bnk == "")){
if(!(bnk %in% dbdf[,title])){
list <- rbind(list, bnk)
}else{
if(dbdf[dbdf[,title] == bnk, pricecolumnname] == ""){
list<- rbind(list, bnk)
}
}
}
}
return(list)
}
applyPrices <- function(df, pricecolumn, monthlyFlatFee){
Total.Cost <- df$Downloads*df[,pricecolumn]
RetailSum <- sum(Total.Cost)
Discount.Factor <- monthlyFlatFee / RetailSum
Discounted.Value <- df$Downloads*df[,pricecolumn]*Discount.Factor
df <- cbind(df, Total.Cost, Discounted.Value)
return(df)
}
library(ggplot2)
library(ggthemes)
workingDirectory <- "C:/Users/Charley/Downloads/Courses/CUNY/SPS/git/IS 607 Data Acquisition and Management/Week 4/quiz"
setwd(workingDirectory)
m <- read.table("movies.tab", sep="\t", header=TRUE, quote="", comment="")
##### Question 1 #####
decade <- numeric()
for(year in m$year){
year <- year - as.numeric(substr(as.character(year),4,4))
decade <- c(decade, year)
}
m$decade <- decade
ggplot(m, aes(x=decade)) +
geom_bar(stat="bin") +
scale_x_continuous(breaks=seq(from=1890, to=2000, by=10)) +
theme_economist()
options(stringsAsFactors=FALSE)
genreAverages <- data.frame(genre = character(), average.rating = numeric())
rating <- numeric()
for(genre in c("Action", "Animation", "Comedy", "Drama", "Documentary",
"Romance", "Short")){
rating <- numeric()
for(i in 1:nrow(m)){
if(m[i,genre] == 1){
rating <- c(rating,m[i,"rating"])
}
}
genreAverages[nrow(genreAverages)+1,] <- c(genre, mean(rating))
}
ggplot(genreAverages, aes(x=genre, y=average.rating)) +
geom_bar(stat="identity") +
theme_economist()
options(stringsAsFactors=FALSE)
genreAverages <- data.frame(genre = character(), average.rating = numeric())
rating <- numeric()
genre <- "Action"
rating <- mean(m[m[,genre] == genre,rating])
m[m[,genre] == genre,rating]
m[m[,genre] == 1,rating]
genre <- "Action"
m[m[,genre] == 1,]
m[m[,genre] == 1,rating]
head(m[m[,genre] == 1,])
head(m[m[,genre] == 1,rating])
head(m[m[,genre] == 1,"rating"])
mean(m[m[,genre] == 1,"rating"])
genreAverages <- data.frame(genre = character(), average.rating = numeric())
for(genre in c("Action", "Animation", "Comedy", "Drama", "Documentary",
"Romance", "Short")){
rating <- mean(m[m[,genre] == genre,"rating"])
genreAverages[nrow(genreAverages)+1,] <- c(genre, mean(rating))
}
for(genre in c("Action", "Animation", "Comedy", "Drama", "Documentary",
"Romance", "Short")){
genreAverages[nrow(genreAverages)+1,] <- c(genre, mean(m[m[,genre] == genre,"rating"]))
}
genreAverages <- data.frame(genre = character(), average.rating = numeric())
for(genre in c("Action", "Animation", "Comedy", "Drama", "Documentary",
"Romance", "Short")){
genreAverages[nrow(genreAverages)+1,] <- c(genre, mean(m[m[,genre] == genre,"rating"]))
}
View(genreAverages)
genre <- "Action"
rating <- mean(m[m[,genre] == genre,"rating"])
rating2 <- mean(m[m[,genre] == genre,"rating"])
m[m[,genre] == genre,"rating"]
genreAverages <- data.frame(genre = character(), average.rating = numeric())
for(genre in c("Action", "Animation", "Comedy", "Drama", "Documentary",
"Romance", "Short")){
genreAverages[nrow(genreAverages)+1,] <- c(genre, mean(m[m[,genre] == 1,"rating"]))
}
View(genreAverages)
options(stringsAsFactors=FALSE)
genreAverages <- data.frame(genre = character(), average.rating = numeric())
rating <- numeric()
for(genre in c("Action", "Animation", "Comedy", "Drama", "Documentary",
"Romance", "Short")){
rating <- numeric()
for(i in 1:nrow(m)){
if(m[i,genre] == 1){
rating <- c(rating,m[i,"rating"])
}
}
genreAverages[nrow(genreAverages)+1,] <- c(genre, mean(rating))
}
View(genreAverages)
ggplot(genreAverages, aes(x=genre, y=average.rating)) +
geom_bar(stat="identity") +
theme_economist()
options(stringsAsFactors=FALSE)
genreAverages <- data.frame(genre = character(), average.rating = numeric())
for(genre in c("Action", "Animation", "Comedy", "Drama", "Documentary",
"Romance", "Short")){
genreAverages[nrow(genreAverages)+1,] <- c(genre, mean(m[m[,genre] == 1,"rating"]))
}
ggplot(genreAverages, aes(x=genre, y=average.rating)) +
geom_bar(stat="identity") +
theme_economist()
PDFPath <- "genre graphs.pdf"
pdf(file=PDFPath)
for(genre in c("Action", "Animation", "Comedy", "Drama", "Documentary",
"Romance", "Short")){
genreDF <- m[m[,genre] == 1,]
print(ggplot(genreDF, aes(x=year, y=rating)) +
#geom_point() +
stat_bin2d() +
scale_fill_gradient(low="orange", high="yellow") +
stat_smooth(method=lm) +
theme_tufte())
}
dev.off()
PDFPath <- "genre graphs.pdf"
pdf(file=PDFPath)
for(genre in c("Action", "Animation", "Comedy", "Drama", "Documentary",
"Romance", "Short")){
genreDF <- m[m[,genre] == 1,]
print(ggplot(genreDF, aes(x=year, y=rating)) +
#geom_point() +
stat_bin2d() +
scale_fill_gradient(low="orange", high="yellow") +
stat_smooth(method=lm) +
ggtitle(genre)
theme_tufte())
}
dev.off()
PDFPath <- "genre graphs.pdf"
pdf(file=PDFPath)
for(genre in c("Action", "Animation", "Comedy", "Drama", "Documentary",
"Romance", "Short")){
genreDF <- m[m[,genre] == 1,]
print(ggplot(genreDF, aes(x=year, y=rating)) +
#geom_point() +
stat_bin2d() +
scale_fill_gradient(low="orange", high="yellow") +
stat_smooth(method=lm) +
ggtitle(genre) +
theme_tufte())
}
dev.off()
corlist <- list()
PDFPath <- "genre graphs.pdf"
pdf(file=PDFPath)
for(genre in c("Action", "Animation", "Comedy", "Drama", "Documentary",
"Romance", "Short")){
genreDF <- m[m[,genre] == 1,]
print(ggplot(genreDF, aes(x=year, y=rating)) +
#geom_point() +
stat_bin2d() +
scale_fill_gradient(low="orange", high="yellow") +
stat_smooth(method=lm) +
ggtitle(genre) +
theme_tufte())
corlist <- c(corlist, cor.test(genreDF$year, genreDF$rating))
}
dev.off()
corlist
cor.test(m$year, m$rating)
t <- cor.test(m$year, m$rating)
corlist <- list()
length(corlist)
<
corlist <- list()
corlist <- list()
length(corlist)
PDFPath <- "genre graphs.pdf"
pdf(file=PDFPath)
for(genre in c("Action", "Animation", "Comedy", "Drama", "Documentary",
"Romance", "Short")){
genreDF <- m[m[,genre] == 1,]
print(ggplot(genreDF, aes(x=year, y=rating)) +
#geom_point() +
stat_bin2d() +
scale_fill_gradient(low="orange", high="yellow") +
stat_smooth(method=lm) +
ggtitle(genre) +
theme_tufte())
corlist[length(corlist)+1] <- cor.test(genreDF$year, genreDF$rating)
}
dev.off()
corlist <- list()
length(corlist)
PDFPath <- "genre graphs.pdf"
pdf(file=PDFPath)
for(genre in c("Action", "Animation", "Comedy", "Drama", "Documentary",
"Romance", "Short")){
genreDF <- m[m[,genre] == 1,]
print(ggplot(genreDF, aes(x=year, y=rating)) +
#geom_point() +
stat_bin2d() +
scale_fill_gradient(low="orange", high="yellow") +
stat_smooth(method=lm) +
ggtitle(genre) +
theme_tufte())
corlist[[length(corlist)+1]] <- cor.test(genreDF$year, genreDF$rating)
}
dev.off()
names(corlist)
corlist <- list()
length(corlist)
PDFPath <- "genre graphs.pdf"
pdf(file=PDFPath)
for(genre in c("Action", "Animation", "Comedy", "Drama", "Documentary",
"Romance", "Short")){
genreDF <- m[m[,genre] == 1,]
print(ggplot(genreDF, aes(x=year, y=rating)) +
#geom_point() +
stat_bin2d() +
scale_fill_gradient(low="orange", high="yellow") +
stat_smooth(method=lm) +
ggtitle(genre) +
theme_tufte())
corlist[[length(corlist)+1]] <- cor.test(genreDF$year, genreDF$rating)
names(corlist)[length(corlist)] <- genre
}
dev.off()
corlist
workingDirectory <- "C:/Users/Charley/Downloads/Courses/CUNY/SPS/git/
IS 607 Data Acquisition and Management/Week 4/quiz"
workingdirectory
workingDirectory
summary(lm(length ~ Action + Comedy + Drama + Documentary + Romance +
Short, data=m))
