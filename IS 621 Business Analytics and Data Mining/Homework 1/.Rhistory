),
height = 500,
hidesources = FALSE,
hovermode = "x",
legend = list(
x = 1.02,
y = 1,
bgcolor = "#fff",
bordercolor = "#444",
borderwidth = 0,
font = list(
color = "",
family = "",
size = 0
),
traceorder = "normal",
xanchor = "left",
yanchor = "top"
),
margin = list(
r = 80,
t = 100,
autoexpand = TRUE,
b = 80,
l = 80,
pad = 0
),
paper_bgcolor = "#fff",
plot_bgcolor = "#fff",
separators = ".,",
showlegend = TRUE,
smith = FALSE,
title = "OK HS Physics Teachers",
titlefont = list(
color = "",
family = "",
size = 0
),
width = 800,
xaxis = list(
anchor = "y",
autorange = TRUE,
autotick = TRUE,
domain = c(0, 1),
dtick = 10,
exponentformat = "B",
gridcolor = "#eee",
gridwidth = 1,
linecolor = "#444",
linewidth = 1,
mirror = FALSE,
nticks = 0,
overlaying = FALSE,
position = 0,
range = c(0.5, 77.5),
rangemode = "normal",
showexponent = "all",
showgrid = FALSE,
showline = FALSE,
showticklabels = TRUE,
tick0 = 0,
tickangle = "auto",
tickcolor = "#444",
tickfont = list(
color = "",
family = "",
size = 0
),
ticklen = 5,
ticks = "",
tickwidth = 1,
title = "County Number",
titlefont = list(
color = "",
family = "",
size = 0
),
type = "linear",
zeroline = FALSE,
zerolinecolor = "#444",
zerolinewidth = 1
),
xaxis2 = list(
anchor = "y2",
autorange = FALSE,
autotick = TRUE,
domain = c(0, 1),
dtick = 10,
exponentformat = "B",
gridcolor = "#eee",
gridwidth = 1,
linecolor = "#444",
linewidth = 1,
mirror = FALSE,
nticks = 0,
overlaying = FALSE,
position = 0,
range = c(0.698980123539, 77.6989801235),
rangemode = "normal",
showexponent = "all",
showgrid = TRUE,
showline = FALSE,
showticklabels = TRUE,
tick0 = 0,
tickangle = "auto",
tickcolor = "#444",
tickfont = list(
color = "",
family = "",
size = 0
),
ticklen = 5,
ticks = "",
tickwidth = 1,
title = "Click to enter X2 axis title",
titlefont = list(
color = "",
family = "",
size = 0
),
type = "linear",
zeroline = TRUE,
zerolinecolor = "#444",
zerolinewidth = 1
),
xaxis3 = list(
anchor = "y3",
autorange = TRUE,
autotick = TRUE,
domain = c(0, 1),
dtick = 10,
exponentformat = "B",
gridcolor = "#eee",
gridwidth = 1,
linecolor = "#444",
linewidth = 1,
mirror = FALSE,
nticks = 0,
overlaying = FALSE,
position = 0,
range = c(0.5, 77.5),
rangemode = "normal",
showexponent = "all",
showgrid = TRUE,
showline = FALSE,
showticklabels = TRUE,
tick0 = 0,
tickangle = "auto",
tickcolor = "#444",
tickfont = list(
color = "",
family = "",
size = 0
),
ticklen = 5,
ticks = "",
tickwidth = 1,
title = "Click to enter X3 axis title",
titlefont = list(
color = "",
family = "",
size = 0
),
type = "linear",
zeroline = TRUE,
zerolinecolor = "#444",
zerolinewidth = 1
),
yaxis = list(
anchor = "x",
autorange = TRUE,
autotick = TRUE,
domain = c(0, 0.2025),
dtick = 200000,
exponentformat = "B",
gridcolor = "#eee",
gridwidth = 1,
linecolor = "#444",
linewidth = 1,
mirror = FALSE,
nticks = 0,
overlaying = FALSE,
position = 0,
range = c(0, 743807.368421),
rangemode = "normal",
showexponent = "all",
showgrid = TRUE,
showline = FALSE,
showticklabels = TRUE,
tick0 = 0,
tickangle = "auto",
tickcolor = "#444",
tickfont = list(
color = "",
family = "",
size = 0
),
ticklen = 5,
ticks = "",
tickwidth = 1,
title = "Click to enter Y axis title",
titlefont = list(
color = "",
family = "",
size = 0
),
type = "linear",
zeroline = TRUE,
zerolinecolor = "#444",
zerolinewidth = 1
),
yaxis2 = list(
anchor = "x2",
autorange = TRUE,
autotick = TRUE,
domain = c(0.55, 1),
dtick = 10,
exponentformat = "B",
gridcolor = "#eee",
gridwidth = 1,
linecolor = "#444",
linewidth = 1,
mirror = FALSE,
nticks = 0,
overlaying = FALSE,
position = 0,
range = c(0, 30.5263157895),
rangemode = "normal",
showexponent = "all",
showgrid = TRUE,
showline = FALSE,
showticklabels = TRUE,
tick0 = 0,
tickangle = "auto",
tickcolor = "#444",
tickfont = list(
color = "",
family = "",
size = 0
),
ticklen = 5,
ticks = "",
tickwidth = 1,
title = "Click to enter Y2 axis title",
titlefont = list(
color = "",
family = "",
size = 0
),
type = "linear",
zeroline = TRUE,
zerolinecolor = "#444",
zerolinewidth = 1
),
yaxis3 = list(
anchor = "x3",
autorange = TRUE,
autotick = TRUE,
domain = c(0.2475, 0.45),
dtick = 5,
exponentformat = "B",
gridcolor = "#eee",
gridwidth = 1,
linecolor = "#444",
linewidth = 1,
mirror = FALSE,
nticks = 0,
overlaying = FALSE,
position = 0,
range = c(0, 20.4210227493),
rangemode = "normal",
showexponent = "all",
showgrid = TRUE,
showline = FALSE,
showticklabels = TRUE,
tick0 = 0,
tickangle = "auto",
tickcolor = "#444",
tickfont = list(
color = "",
family = "",
size = 0
),
ticklen = 5,
ticks = "",
tickwidth = 1,
title = "Click to enter Y3 axis title",
titlefont = list(
color = "",
family = "",
size = 0
),
type = "linear",
zeroline = TRUE,
zerolinecolor = "#444",
zerolinewidth = 1
)
)
response <- py$plotly(data, kwargs=list(layout=layout))
py$plotly(data, kwargs=list(layout=layout))
py
py <- plotly(username='charleyferrari', key='oksysax3g0')
install.packages("plot_ly")
library(Rtools)
install.packages("devtools")
install.packages("Rtools")
install.packages("bigvis")
devtools::install_github("hadley/bigvis")
library(bigvis)
install.packages("Rcpp")
install.packages("Rcpp")
library(bigvis)
devtools::find_rtools()
iris
iris <- iris
py <- plotly(username='charleyferrari', key='oksysax3g0')
install.packages("plotly")
library(plotly)
py <- plotly(username='charleyferrari', key='oksysax3g0')
dsamp <- diamonds[sample(nrow(diamonds), 1000), ]
qplot(carat, price, data=dsamp, colour=clarity)
ggplotly()
qplot(carat, price, data=dsamp, colour=clarity)
ggplotly()
q <- qplot(carat, price, data=dsamp, colour=clarity)
q <- ggplotly(q)
plot_ly(q)
py <- plot_ly(username='charleyferrari', key='oksysax3g0')
?plot_ly
plot_ly(q)
?plot_ly
plotly_POST(q)
View(q)
q <- qplot(carat, price, data=dsamp, colour=clarity)
q
q <- ggplotly(q)
plot_ly(q)
ggplotly(q)
q <- qplot(carat, price, data=dsamp, colour=clarity)
ggplotly(q)
install.packages("faraway")
library(faraway)
pima
summary(pima)
sort(pima$diastolic)
pima$diastolic[pima$diastolic == 0] <- NA
pima$test <- factor(pima$test)
levels(pima$test)
levels(pima$test) <- c('negative', 'positive')
hist(pima$diastolic)
plot(density(pima$diastolic, na.rm = TRUE))
library(ggplot2)
library(MASS)
library(knitr)
library(dplyr)
library(faraway)
setwd("/Users/Charley/Downloads/cuny/IS 621 Business Analytics and Data Mining/Homework 1")
cigarettes <- read.csv("cigarette-training-data.csv")
northeast <- c("ME", "NH", "VT", "MA", "RI", "CT", "NY", "PA", "NJ")
midwest <- c("ND", "SD", "NE", "KS", "MN", "IA", "MO", "IL", "WI", "MI",
"IN", "OH", "IO", "KA", "NB")
south <- c("DE", "MD", "DC", "WV", "VA", "KY", "NC", "TN", "SC", "GA",
"AL","MS","AR","LA","OK","TX", "FL")
west <- c("WA", "OR", "ID", "MT", "WY", "CA", "NV", "UT", "CO", "AZ", "NM", "AK", "HI")
regionlookup <- rbind(data.frame(Region = "Northeast", State = northeast),
data.frame(Region = "Midwest", State = midwest),
data.frame(Region = "South", State = south),
data.frame(Region = "West", State = west))
cigarettesregion <- merge(cigarettes,regionlookup, by="State")
filteredcigarettes <- filter(cigarettes, Sales < 135 & Sales > 83)
filteredcigarettesregion <- merge(filteredcigarettes,regionlookup, by="State")
rm(midwest, northeast, south, west, regionlookup)
View(filteredcigarettesregion)
filteredcigarettesregion$Mormon <- ifelse(filteredcigarettesregion$State == "UT", 1,0)
View(filteredcigarettes)
View(filteredcigarettesregion)
rm(filteredcigarettesregion)
library(ggplot2)
library(MASS)
library(knitr)
library(dplyr)
library(faraway)
setwd("/Users/Charley/Downloads/cuny/IS 621 Business Analytics and Data Mining/Homework 1")
cigarettes <- read.csv("cigarette-training-data.csv")
northeast <- c("ME", "NH", "VT", "MA", "RI", "CT", "NY", "PA", "NJ")
midwest <- c("ND", "SD", "NE", "KS", "MN", "IA", "MO", "IL", "WI", "MI",
"IN", "OH", "IO", "KA", "NB")
south <- c("DE", "MD", "DC", "WV", "VA", "KY", "NC", "TN", "SC", "GA",
"AL","MS","AR","LA","OK","TX", "FL")
west <- c("WA", "OR", "ID", "MT", "WY", "CA", "NV", "UT", "CO", "AZ", "NM", "AK", "HI")
regionlookup <- rbind(data.frame(Region = "Northeast", State = northeast),
data.frame(Region = "Midwest", State = midwest),
data.frame(Region = "South", State = south),
data.frame(Region = "West", State = west))
cigarettesregion <- merge(cigarettes,regionlookup, by="State")
filteredcigarettes <- filter(cigarettes, Sales < 135 & Sales > 83)
filteredcigarettesregion <- merge(filteredcigarettes,regionlookup, by="State")
rm(midwest, northeast, south, west, regionlookup)
cigarettesregion$Mormon <- ifelse(cigarettesregion$State == "UT", 1,0)
library(ggplot2)
library(MASS)
library(knitr)
library(dplyr)
library(faraway)
setwd("/Users/Charley/Downloads/cuny/IS 621 Business Analytics and Data Mining/Homework 1")
cigarettes <- read.csv("cigarette-training-data.csv")
northeast <- c("ME", "NH", "VT", "MA", "RI", "CT", "NY", "PA", "NJ")
midwest <- c("ND", "SD", "NE", "KS", "MN", "IA", "MO", "IL", "WI", "MI",
"IN", "OH", "IO", "KA", "NB")
south <- c("DE", "MD", "DC", "WV", "VA", "KY", "NC", "TN", "SC", "GA",
"AL","MS","AR","LA","OK","TX", "FL")
west <- c("WA", "OR", "ID", "MT", "WY", "CA", "NV", "UT", "CO", "AZ", "NM", "AK", "HI")
regionlookup <- rbind(data.frame(Region = "Northeast", State = northeast),
data.frame(Region = "Midwest", State = midwest),
data.frame(Region = "South", State = south),
data.frame(Region = "West", State = west))
cigarettesregion <- merge(cigarettes,regionlookup, by="State")
filteredcigarettes <- filter(cigarettes, Sales < 135 & Sales > 83)
filteredcigarettesregion <- merge(filteredcigarettes,regionlookup, by="State")
rm(midwest, northeast, south, west, regionlookup)
filteredcigarettesregion$Mormon <- ifelse(filteredcigarettesregion$State == "UT", 1,0)
northeast <- c("ME", "NH", "VT", "MA", "RI", "CT", "NY", "PA", "NJ")
midwest <- c("ND", "SD", "NE", "KS", "MN", "IA", "MO", "IL", "WI", "MI",
"IN", "OH", "IO", "KA", "NB")
south <- c("DE", "MD", "DC", "WV", "VA", "KY", "NC", "TN", "SC", "GA",
"AL","MS","AR","LA","OK","TX", "FL")
west <- c("WA", "OR", "ID", "MT", "WY", "CA", "NV", "UT", "CO", "AZ", "NM", "AK", "HI")
regionlookup <- rbind(data.frame(Region = "Northeast", State = northeast),
data.frame(Region = "Midwest", State = midwest),
data.frame(Region = "South", State = south),
data.frame(Region = "West", State = west))
cigarettesregion <- merge(cigarettes,regionlookup, by="State")
filteredcigarettes <- filter(cigarettes, Sales < 135 & Sales > 83)
filteredcigarettesregion <- merge(filteredcigarettes,regionlookup, by="State")
rm(midwest, northeast, south, west, regionlookup)
# filteredcigarettesregion$Mormon <- ifelse(filteredcigarettesregion$State == "UT", 1,0)
cigarettesregion$Mormon <- ifelse(cigarettesregion$State == "UT", 1,0)
cigarettesregion$SinState <- ifelse(cigarettesregion$State == "NV", 1,0)
cigarettesregion$CrossBorder <- ifelse(cigarettesregion$State %in% c("KY","NH", "OR"),
1,0)
View(cigarettesregion)
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
d1 <- ggplot(cigarettes, aes(x=1, y=Sales)) + geom_boxplot()
d2 <- ggplot(cigarettes, aes(x=1, y=Age)) + geom_boxplot()
d3 <- ggplot(cigarettes, aes(x=1, y=Income)) + geom_boxplot()
d4 <- ggplot(cigarettes, aes(x=1, y=Price)) + geom_boxplot()
multiplot(d1, d2, d3, d4, cols=2)
rm(d1, d2, d3, d4)
mean(cigarettes$Price)
cigarettesregion$LowPrice <- ifelse(cigarettesregion$Price < 35,1,0)
View(cigarettesregion)
filter(cigarettesregion, Price < 35)
model <- lm(Sales ~ Age + poly(Income,2) + Price + Region + Mormon + SinState + LowPrice,
data = cigarettesregion)
summary(model)
model <- lm(Sales ~ Age + poly(Income,2) + Price + Region + Mormon + SinState,
data = cigarettesregion)
summary(model)
model <- lm(Sales ~ Age + Income + Price + Region + Mormon + SinState,
data = cigarettesregion)
summary(model)
model <- lm(Sales ~ Income + Price + Region + Mormon + SinState,
data = cigarettesregion)
summary(model)
model <- lm(Sales ~ Income + Price + Region + SinState,
data = cigarettesregion)
summary(model)
plot(model)
cigarettesregion$resid <- as.numeric(model$residuals)
View(cigarettesregion)
cigarettesregion <- filter(cigarettesregion,State != "NH")
model <- lm(Sales ~ Income + Price + Region + SinState,
data = cigarettesregion)
summary(model)
plot(model,which=1)
plot(model)
model <- lm(Sales ~ poly(Income,2) + Price + Region + SinState,
data = cigarettesregion)
summary(model)
plot(model)
model <- lm(Sales ~ poly(Income,1) + Price + Age)
model <- lm(Sales ~ poly(Income,1) + Price + Age, data=cigarettes)
summary(model)
model <- lm(Sales ~ poly(Income,2) + Price + Age, data=cigarettes)
summary(model)
