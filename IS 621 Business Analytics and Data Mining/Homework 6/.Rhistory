ggplot(winetest1, aes(x=bin_predict)) + geom_hist(bins=100)
ggplot(winetest1, aes(x=bin_predict)) + geom_histogram(bins=100)
winetest1 <- na.omit(wine)
testmod <- glm(TARGET ~ VolatileAcidity + Chlorides + TotalSulfurDioxide + Alcohol +
LabelAppeal + AcidIndex + STARS, data=winetest1, family=poisson)
winetest1$pois_predict <- predict(testmod)
testpred <- select(winetest1, pois_predict, TARGET)
View(testpred)
ggplot(testpred, aes(x=pois_predict, y=TARGET))
ggplot(testpred, aes(x=pois_predict, y=TARGET)) + geom_point()
summary(testmod)
wine$STARS
testmod2 <- glm(TARGET ~ AcidIndex + LabelAppeal + STARS, data=wine, family=poisson)
summary(testmod2)
testmod2 <- glm(TARGET ~ as.numeric(AcidIndex) + LabelAppeal + STARS, data=wine, family=poisson)
winetest1$pois_predict <- predict(testmod)
summary(testmod2)
levels(wine$LabelAppeal)
wine$LabelAppeal <- factor(wine$LabelAppeal, levels(wine$LabelAppeal)[c(5,1:4)])
wine$STARS <- factor(wine$STARS, levels(wine$STARS)[c(5,1:4)])
testmod2 <- glm(TARGET ~ as.numeric(AcidIndex) + LabelAppeal + STARS, data=wine, family=poisson)
summary(testmod2)
plot(predict(testmod),residuals(testmod),xlab="Fitted",ylab="Residuals")
?wald.test
setwd('/Users/Charley/Downloads/Plotly/Dash/Siemens')
fileName <- 'TCI Guadalupe L01 R20160215.txt'
con <- file(fileName, open='r')
line <- readLines(con)
turbineNumList <- c()
for(i in 1:length(line)){
if(grepl('#TURBINE T', line[i])){
turbineNumList <- c(turbineNumList, i)
}
}
turbineList <- c()
latList <- c()
lonList <- c()
turbineType <- c()
towerName <- c()
towerHubHeight <- c()
VGBTower <- c()
PCRevision <- c()
turbineDesignLifetime <- c()
towerDesignLifetime <- c()
siteDesignLifetime <- c()
# 187: m=1
# 213: m=3.5
# 239: m=5
# 265: m=8
# 291: m=10
# 317: m=10.25
# 343: m=12.4
# 369: m=14.95
# 395: m=15
#
for(i in turbineNumList){
turbineList <- c(turbineList, substr(line[i], 2, nchar(line[i])))
coord <- strsplit(line[i+1], '\t')[[1]][3]
latList <- c(latList, as.numeric(strsplit(coord, ', ')[[1]][1]))
lonList <- c(lonList, as.numeric(strsplit(coord, ', ')[[1]][2]))
turbineType <- c(turbineType, strsplit(line[i+2], '			:	')[[1]][2])
towerName <- c(towerName, strsplit(line[i+3], '			:	')[[1]][2])
towerHubHeight <- c(towerHubHeight, as.numeric(strsplit(line[i+4], '			:	')[[1]][2]))
VGBTower <- c(VGBTower, strsplit(line[i+5], '			:	')[[1]][2])
PCRevision <- c(PCRevision, as.numeric(strsplit(line[i+6], '			:	')[[1]][2]))
turbineDesignLifetime <-
c(turbineDesignLifetime, as.numeric(strsplit(line[i+7], '		:	')[[1]][2]))
towerDesignLifetime <-
c(towerDesignLifetime, as.numeric(strsplit(line[i+8], '		:	')[[1]][2]))
siteDesignLifetime <-
c(siteDesignLifetime, as.numeric(strsplit(line[i+9], '		:	')[[1]][2]))
}
turbines <- data.frame(name = turbineList, lat = latList, lon = lonList,
lineNum = turbineNumList)
ggplot(turbines, aes(x=lon, y=lat)) + geom_point()
valueCol <- c()
levelCol <- c()
sectorCol <- c()
mCol <- c()
turbineCol <- c()
for(i in turbineNumList){
turbine <- substr(line[i], 2, nchar(line[i]))
m <- as.numeric(strsplit(strsplit(line[i+148],'=')[[1]][2], ')'))
sectors <- strsplit(strsplit(line[i+149], '			:	')[[1]][2], '\t')[[1]]
for(j in 150:172){
valueCol <-
c(valueCol,
as.numeric(strsplit(strsplit(line[i+j], '				:	')[[1]][2], '\t')[[1]]))
sectorCol <- c(sectorCol, sectors)
levelCol <-
c(levelCol, rep(as.numeric(strsplit(line[i+j], '				:	')[[1]][1]),
length(sectors)))
mCol <- c(mCol, rep(m, length(sectors)))
turbineCol <- c(turbineCol, rep(turbine, length(sectors)))
}
}
mdata <- data.frame(turbine=turbineCol, m=mCol, sector=sectorCol,
level=levelCol, value=valueCol)
View(mdata)
lengthnum <- length(strsplit(strsplit(line[39+52],'\t\t\t:\t')[[1]][2],'\t')[[1]])
windroseSectorCol <- c()
windroseFrequencyCol <- c()
windroseTurbineCol <- c()
for(i in turbineNumList){
windroseSectorCol <- c(windroseSectorCol,
strsplit(strsplit(line[i+52],'\t\t\t:\t')[[1]][2],'\t')[[1]])
windroseFrequencyCol <- c(windroseFrequencyCol,
as.numeric(strsplit(strsplit(line[i+53],'\t\t\t:\t')[[1]][2],'\t')[[1]]))
windroseTurbineCol <- c(windroseTurbineCol,
rep(as.character(turbines[turbines$lineNum==i,'name']),lengthnum))
}
windroseData <- data.frame(turbine = windroseTurbineCol, frequency = windroseFrequencyCol,
sector = windroseSectorCol)
View(windroseData)
View(turbines)
setwd("/Users/Charley/Downloads/cuny/IS 621 Business Analytics and Data Mining/Homework 6")
wine <- read.csv("wine-training-data.csv")
winetest <- select(wine, -INDEX)
natable <- data.frame(variable = colnames(winetest), NAs =
c(0,0,0,0,616,638,647,682,0,395,1210,653,0,0,3359))
kable(natable)
missmap(wine, main = "Missing values vs observed")
missmap(wine, main = "Missing values vs observed")
winemissing <- wine
winemissing$ResidualSugar_missing <- factor(ifelse(is.na(wine$ResidualSugar),0,1))
winemissing$Chlorides_missing <- factor(ifelse(is.na(wine$Chlorides), 0, 1))
winemissing$FreeSulfurDioxide_missing <-
factor(ifelse(is.na(wine$FreeSulfurDioxide), 0, 1))
winemissing$TotalSulfurDioxide_missing <-
factor(ifelse(is.na(wine$TotalSulfurDioxide), 0, 1))
winemissing$pH_missing <- factor(ifelse(is.na(wine$pH), 0, 1))
winemissing$Sulphates_missing <- factor(ifelse(is.na(wine$Sulphates), 0, 1))
winemissing$Alcohol_missing <- factor(ifelse(is.na(wine$Alcohol), 0, 1))
winemissing$STARS_missing <- factor(ifelse(is.na(wine$STARS),0,1))
winemelt <- melt(winemissing, id.vars=colnames(winemissing)[1:16],
variable.name = 'Measure')
winemelt$value <- factor(winemelt$value)
ggplot(winemelt, aes(x=value, y=TARGET)) + geom_violin() +
facet_wrap( ~ Measure, scales = 'free') + theme_tufte()
ggplot(wine, aes(x=factor(STARS), y=TARGET)) + geom_violin() + theme_tufte()
ggplot(wine, aes(x=TARGET)) + geom_histogram() + theme_tufte()
winecatmelt <- melt(wine, id.vars=colnames(wine)[1:13])
ggplot(winecatmelt, aes(x=value)) + geom_histogram() +
facet_wrap( ~ variable, scales='free') + theme_tufte()
winecatmelt <- melt(wine, id.vars=colnames(wine)[c(1,2,14:16)])
ggplot(winecatmelt, aes(x=value)) + geom_histogram(bins=100) +
facet_wrap( ~ variable, scales='free') + theme_tufte()
wine$STARS <- as.character(wine$STARS)
wine[is.na(wine$STARS),'STARS'] <- 0
wine$STARS <- factor(wine$STARS)
testmod <- glm(TARGET ~ VolatileAcidity + Chlorides + TotalSulfurDioxide + Alcohol +
LabelAppeal + AcidIndex + STARS, data=winetest1, family=poisson)
plot(testmod)
winetest1 <- na.omit(wine)
G
G
testmod <- glm(TARGET ~ VolatileAcidity + Chlorides + TotalSulfurDioxide + Alcohol +
LabelAppeal + AcidIndex + STARS, data=winetest1, family=poisson)
plot(testmod)
winetest1$pois_predict <- predict(testmod)
colnames(winetest1)
winepredmelt <- melt(winetest1, id.vars=colnames(winetest1)[c(1,3:16)])
View(winepredmelt)
ggplot(winepredmelt, aes(x=value)) + geom_histogram + facet_wrap( ~ variable)
winepredmelt <- melt(winetest1, id.vars=colnames(winetest1)[c(1,3:16)])
ggplot(winepredmelt, aes(x=value)) + geom_histogram() + facet_wrap( ~ variable)
ggplot(winepredmelt, aes(x=value)) + geom_histogram(bins=100) + facet_wrap( ~ variable)
winetest1 <- select(wine, -INDEX)
fullmod <- glm(TARGET ~ ., data=winetest1, family=poisson)
backmod <- step(fullmod, trace=0)
View(winetest1)
winetest1 <- na.omit(winetest1)
fullmod <- glm(TARGET ~ ., data=winetest1, family=poisson)
backmod <- step(fullmod, trace=0)
summary(backmod)
winetest1$pois_predict <- predict(backmod)
ggplot(winetest1, aes(x=TARGET, y=pois_predict)) + geom_point()
winetest1$pois_predict <- exp(predict(backmod))
ggplot(winetest1, aes(x=TARGET, y=pois_predict)) + geom_point()
winepredmelt <- melt(winetest1, id.vars=colnames(winetest1)[c(1,3:16)])
ggplot(winepredmelt, aes(x=value)) + geom_histogram(bins=100) + facet_wrap( ~ variable)
colnames(winetest1)
winepredmelt <- melt(winetest1, id.vars=colnames(winetest1)[c(2:16)])
ggplot(winepredmelt, aes(x=value)) + geom_histogram(bins=100) + facet_wrap( ~ variable)
winepredmelt <- melt(winetest1, id.vars=colnames(winetest1)[c(2:15)])
ggplot(winepredmelt, aes(x=value)) + geom_histogram(bins=100) + facet_wrap( ~ variable)
ggplot(winepredmelt, aes(x=value)) + geom_histogram(bins=100) +
facet_wrap( ~ variable, scales='free')
winetest1$pois_predict <- predict(backmod, type='poisson')
winetest1$pois_predict <- predict(backmod, type='response')
winetest1$pois_predict <- exp(predict(backmod))
winetest1$pois_predict == predict(backmod, type='response')
round(3.4)
round(2.7)
winetest1$pois_predict <- round(exp(predict(backmod)))
winepredmelt <- melt(winetest1, id.vars=colnames(winetest1)[c(2:15)])
ggplot(winepredmelt, aes(x=value)) + geom_histogram(bins=100) +
facet_wrap( ~ variable, scales='free')
with(backmod, cbind(res.deviance = deviance, df = df.residual,
p = pchisq(deviance, df.residual, lower.tail=FALSE)))
backmod$deviance
cor(wine)
cor.mat(wine)
cor(wine)
winenum <- select(wine, FixedAcidity, VolatileAcidity, CitricAcid, ResidualSugar,)
winenum <- select(wine, FixedAcidity, VolatileAcidity, CitricAcid, ResidualSugar, Chlorides, FreeSulfurDioxide, TotalSulfurDioxide, Density, pH, Sulphates, Alcohol)
cor(winenum)
cor(na.omit(winenum))
ggpairs(winenum)
library(ggpairs)
pairs(winenum)
pairs(winenum)
cor(winenum) > 0.5
cor(na.omit(winenum)) > 0.5
cormat <- cor(na.omit(winenum))
View(cormat)
cormat <- (cormat > 0.5 || cormat < -0.5)
cormat
cormat <- ifelse(cor(na.omit(winenum))>0.5 || cor(na.omit(winenum))<(-0.5), 1, 0)
cormat
?pchisq
with(backmod, cbind(res.deviance = deviance, df = df.residual,
p = pchisq(deviance, df.residual, lower.tail=FALSE)))
forwardmod <- step(nothingmod,
scopt = list(lower=formula(nothingmod),upper=formula(fullmod)),
direction = 'forward', trace=0)
nothingmod <- glm(TARGET ~ 1, family=poisson, data=winetest1)
forwardmod <- step(nothingmod,
scopt = list(lower=formula(nothingmod),upper=formula(fullmod)),
direction = 'forward', trace=0)
summary(forwardmod)
fullmod <- glm(TARGET ~ ., data=winetest1, family=poisson)
forwardmod <- step(nothingmod,
scopt = list(lower=formula(nothingmod),upper=formula(fullmod)),
direction = 'forward', trace=0)
wineAICat <- na.omit(wine) %>% select(-INDEX)
wineAINum <- na.omit(wine) %>% select(-INDEX)
wineAICat <- na.omit(wine) %>% select(-INDEX)
wineAICat$AcidIndex <- factor(wineAICat$AcidIndex)
wineAINum <- na.omit(wine) %>% select(-INDEX)
wineAICat <- na.omit(wine) %>% select(-INDEX)
wineAICat$AcidIndex <- factor(wineAICat$AcidIndex)
fullpoismod1 <- glm(TARGET ~ ., data=wineAINum, family=poisson)
backpoismod1 <- step(fullpoismod1, trace=0)
fullpoismod2 <- glm(TARGET ~ ., data=wineAICat, family=poisson)
backpoismod2 <- step(fullpoismod2, trace=0)
summary(backpoismod1)
summary(backpoismod2)
library(leaps)
?regsubsets
?stepBIC
backpoismod1
backpoismod1$aic
backpoismod2$aic
summary(backpoismod1)
with(backpoismod1, cbind(res.deviance = deviance, df = df.residual,
p = pchisq(deviance, df.residual, lower.tail=FALSE)))
with(backpoismod2, cbind(res.deviance = deviance, df = df.residual,
p = pchisq(deviance, df.residual, lower.tail=FALSE)))
with(fullpoismod1, cbind(res.deviance = deviance, df = df.residual,
p = pchisq(deviance, df.residual, lower.tail=FALSE)))
with(fullpoismod2, cbind(res.deviance = deviance, df = df.residual,
p = pchisq(deviance, df.residual, lower.tail=FALSE)))
dfr <- data.frame(
name        = factor(rev(tasks), levels = rev(tasks)),
start.date  = rev(c(1,10,16,1,10,19)),
end.date    = rev(c(10,16,36,10,19,36)),
WP = as.factor(rev(c("WP1", "WP1", "WP1", "WP2", "WP2", "WP2")))
)
tasks <- c(
"M1.1: Text here",
"M1.2: Text here",
"M1.3: Text here",
"M2.1: Text here",
"M2.2: Text here",
"M2.3: Text here"
)
dfr <- data.frame(
name        = factor(rev(tasks), levels = rev(tasks)),
start.date  = rev(c(1,10,16,1,10,19)),
end.date    = rev(c(10,16,36,10,19,36)),
WP = as.factor(rev(c("WP1", "WP1", "WP1", "WP2", "WP2", "WP2")))
)
mdfr <- melt(dfr, measure.vars = c("start.date", "end.date"))
ggplot(mdfr, aes(value, name, colour = WP)) +
geom_line(size = 6) +
ylab(NULL) +
xlab("Months") +
scale_x_discrete() +
theme_bw()
p <- ggplot(mdfr, aes(value, name, colour = WP)) +
geom_line(size = 6) +
ylab(NULL) +
xlab("Months") +
scale_x_discrete() +
theme_bw()
ggplotly(p)
plotly_POST(p)
library(plotly)
plotly_POST(p)
View(mdfr)
p <- ggplot(mdfr, aes(x=value, y=name, colour = WP)) +
geom_line(size = 6) +
ylab(NULL) +
xlab("Months") +
scale_x_discrete() +
theme_bw()
ggplotly(p)
plotly_POST(p)
ggplot(winecatmelt, aes(x=value)) + geom_histogram(bins=100) +
facet_wrap( ~ variable, scales='free') + theme_tufte()
f
asd
df
sadfasdf
asdf
asdf
asd
fas
facet_wrap( ~ variable, scales='free') + theme_tufte())
plotly_POST(ggplot(winecatmelt, aes(x=value)) + geom_histogram(bins=100) +
facet_wrap( ~ variable, scales='free') + theme_tufte())
p <- ggplot(mdfr, aes(x=value, y=name, colour = WP)) +
geom_line(size = 6) +
ylab(NULL) +
xlab("Months") +
scale_x_discrete() +
theme_bw()
ggplotly(p)
with(fullpoismod2, cbind(res.deviance = deviance, df = df.residual,
p = pchisq(deviance, df.residual, lower.tail=FALSE)))
with(fullpoismod2, cbind(res.deviance = deviance, df = df.residual,
p = 1 - pchisq(deviance, df.residual)))
library(MASS)
summary(backpoismod1)
formula(backpoismod1)
backNBmod1 <- glm.nb(formula(backpoismod1), data=wineAINum)
summary(backNBmod1)
with(backNBmod1, cbind(res.deviance = deviance, df = df.residual,
p = pchisq(deviance, df.residual, lower.tail=FALSE)))
backNBmod2 <- glm.nb(formula(backpoismod2), data=wineAICat)
summary(backNBmod2)
summary(backNBmod2)
summary(fullpoismod2)$coefficients
summary(backNBmod1)$coefficients
backlinmod1 <- lm(formula(backpoismod1), data=wineAINum)
backlinmod2 <- lm(formula(backpoismod2), data=wineAICat)
summary(backlinmod1)
plot(backlinmod1)
par(mfrow=c(2,2))
plot(backlinmod1)
plot(backlinmod2)
plot(backpoismod1)
plot(backpoismod2)
summary(backNBmod1)$coefficients
summary(backNBmod1)$coefficients[,'Estimate']
test <- summary(backNBmod1)$coefficients[,'Estimate']
rm(test)
as.numeric(summary(backNBmod1)$coefficients[,'Estimate'])
factor(0)
get(hello)
modelList <- c('Poisson Model 1', 'Poisson Model 2', 'Negative Binomial Model 1',
'Negative Binomial Model 2', 'Linear Model 1', 'Linear Model 2')
modelObjects <- c(backpoismod1, backpoismod2, backNBmod1, backNBmod2,
backlinmod1, backlinmod2)
diagnostics <- data.frame(variable <- factor(0), model <- factor(0))
data.frame(summary(fullpoismod1)$coefficients)
coefdiag <- data.frame(summary(fullpoismod1)$coefficients)
modelObjects <- c(backpoismod2, backNBmod1, backNBmod2,
backlinmod1, backlinmod2)
coefdiag$model <- modelList[1]
View(coefdiag)
i <- 1
View(coefdiag)
for(m in modelObjects){
i <- i+1
dfmod <- data.frame(summary(i)$coefficients)
dfmod$model <- modelList[i]
coefdiag <- rbind(coefdiag, dfmod)
}
modelObjects
modelObjects[[1]]
modelObjects <- list(backpoismod2, backNBmod1, backNBmod2,
backlinmod1, backlinmod2)
coefdiag <- data.frame(summary(fullpoismod1)$coefficients)
coefdiag$model <- modelList[1]
i <- 1
for(m in modelObjects){
i <- i+1
dfmod <- data.frame(summary(i)$coefficients)
dfmod$model <- modelList[i]
coefdiag <- rbind(coefdiag, dfmod)
}
coefdiag
coefdiag <- rbind(data.frame(summary(backpoismod1)$coefficients),
data.frame(summary(backNBmod1)$coefficients),
data.frame(summary(backlinmod1)$coefficients))
data.frame(summary(fullpoismod1)$coefficients)
get('hello')
hello <- 'foo'
get('hello')
data.frame(summary(fullpoismod1)$coefficients, row.names=NULL)
modelList <- c('backpoismod1', 'backpoismod2', 'backNBmod1', 'backNBmod2',
'backlinmod1', 'backlinmod2')
for(mod in modelList){
moddf <- data.frame(summary(get(mod))$coefficients)
}
rm(moddf)
for(mod in modelList){
moddf <- data.frame(summary(get(mod))$coefficients)
moddf <- data.frame(row.names(moddf), moddf, row.names=NULL)
}
moddf
coefdiag <- data.frame(Variable = character(0), Estimate = numeric(0),
StdError = numeric(0), t.value = numeric(0),
Pr.t = numeric(0), Model = character(0))
for(mod in modelList){
}
for(mod in modelList){
moddf <- data.frame(summary(get(mod))$coefficients)
moddf <- data.frame(row.names(moddf), moddf, row.names=NULL)
moddf$model <- mod
colnames(moddf) <- c('Variable', 'Estimate', 'StdError', 't.value', 'Pr.t', 'Model')
coefdiag <- rbind(coefdiag, moddf)
}
View(coefdiag)
modelList <- c('backpoismod1', 'backpoismod2', 'backNBmod1', 'backNBmod2',
'backlinmod1', 'backlinmod2')
coefdiag <- data.frame(Variable = character(0), Estimate = numeric(0),
StdError = numeric(0), t.value = numeric(0),
Pr.t = numeric(0), Model = character(0))
for(mod in modelList){
moddf <- data.frame(summary(get(mod))$coefficients)
moddf <- data.frame(row.names(moddf), moddf, row.names=NULL)
moddf$model <- mod
colnames(moddf) <- c('Variable', 'Estimate', 'StdError', 't.value', 'Pr.t', 'Model')
coefdiag <- rbind(coefdiag, moddf)
}
?melt
coefdiag <- melt(coefdiag, id.vars = c('Variable', 'Model'))
coefdiag <- data.frame(Variable = character(0), Estimate = numeric(0),
StdError = numeric(0), t.value = numeric(0),
Pr.t = numeric(0), Model = character(0))
for(mod in modelList){
moddf <- data.frame(summary(get(mod))$coefficients)
moddf <- data.frame(row.names(moddf), moddf, row.names=NULL)
moddf$model <- mod
colnames(moddf) <- c('Variable', 'Estimate', 'StdError', 't.value', 'Pr.t', 'Model')
coefdiag <- rbind(coefdiag, moddf)
}
coefdiag <- melt(coefdiag, id.vars = c('Variable', 'Model'),
variable.name = 'Measure', value.name = 'Value')
View(coefdiag)
coefdiag$Model <- factor(coefdiag$Model)
levels(coefdiag$Variable)
filter(coefdiag,variable=='Alcohol', Measure='Estimate')
filter(coefdiag,variable=='Alcohol', Measure=='Estimate')
filter(coefdiag,Variable=='Alcohol', Measure=='Estimate')
levels(coefdiag$Model)
modelList
modelDic <- data.frame(Model = modelList,
ModelName = c('Poisson Model 1','Poisson Model 2',
'Negative Binomial Model 1',
'Negative Binomial Model 1',
'Linear Model 1', 'Linear Model 2'))
coefdiag <- merge(coefdiag, modelDic, by='Model')
fulllinmod1a <- lm(formula(fullpoismod1), data=wineAINum)
fulllinmod2a <- lm(formula(fullpoismod2), data=wineAICat)
backlinmod1a <- step(fulllinmod1a, trace=0)
backlinmod2a <- step(fulllinmod2a, trace=0)
summary(backlinmod1a)
summary(backlinmod1)
formula(backlinmod1)
formula(backlinmod1a)
formula(backlinmod2)
formula(backlinmod2a)
summary(backlinmod1a)
summary(backlinmod1)
winetest <- wineAINum
wine$lin1resid <- backlinmod1$residuals
length(backlinmod1$residuals)
backlinmod1$residuals
wine$lin1resid <- as.numeric(backlinmod1$residuals)
winetest$lin1resid <- as.numeric(backlinmod1$residuals)
ggplot(winetest, aes(x=lin1resid, y=TARGET))
ggplot(winetest, aes(x=lin1resid, y=TARGET)) + geom_point() +
theme_tufte()
winetest$lin1pred <- predict(backlinmod1)
ggplot(winetest, aes(x=lin1resid, y=lin1pred)) + geom_point() +
theme_tufte()
rm(winetest)
wineAINum$pois1resid <- backpoismod1$residuals
wineAINum$pois1resid <- backpoismod1$residuals
wineAINum$NB1resid <- backNBmod1$residuals
wineAINum$lin1resid <- backlinmod1$residuals
wineAINum$pois1pred <- predict(backpoismod1)
wineAINum$NB1pred <- predict(backNBmod1)
wineAINum$lin1pred <- predict(backlinmod1)
wineAICat$pois2resid <- backpoismod2$residuals
wineAICat$NB2resid <- backNBmod2$residuals
wineAICat$lin2resid <- backlinmod2$residuals
wineAICat$pois2pred <- predict(backpoismod2)
wineAICat$NB2pred <- predict(backNBmod2)
wineAICat$lin2pred <- predict(backlinmod2)
ggplot(wineAINum, aes(x=pois1resid, y=pois1pred)) + geom_point() +
theme_tufte()
wineAINum$pois1pred <- exp(predict(backpoismod1))
ggplot(wineAINum, aes(x=pois1resid, y=pois1pred)) + geom_point() +
theme_tufte()
select(wine, INDEX)
library(dplyr)
select(wine, -c(INDEX, STARS, AcidIndex, LabelAppeal))
