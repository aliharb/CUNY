768/3
(-4)^3
256/4
256/3
x <- 4
4*(1/(1-2*x+2*sqrt(-x+x^2))^(1/3)+(1-2*x+2*sqrt(-x+x^2))^(1/3))
x <- 3.9
4*(1/(1-2*x+2*sqrt(-x+x^2))^(1/3)+(1-2*x+2*sqrt(-x+x^2))^(1/3))
x <- 0
-3*(x-4)*(x+4)/256
cofx(0,1)
0.15/0.4
0.15/0.1
10/1.5
n <- 1000
k <- 0
j <- 0
y <- numeric(n)
while(k < n){
u <- runif(1)
j <- j+1
x <- runif(1,min=-5,max=5)
if((x-5)*(x+5)/25 > u){
k <- k+1
y[k] <- x
}
}
((0-5)*(0+5)/25)
n <- 1000
k <- 0
j <- 0
y <- numeric(n)
while(k < n){
u <- runif(1)
j <- j+1
x <- runif(1,min=-5,max=5)
if(-(x-5)*(x+5)/25 > u){
k <- k+1
y[k] <- x
}
}
hist(y)
hist(y,breaks=50)
rcharleyparabola <- function(n){
n <- 1000
k <- 0
j <- 0
y <- numeric(n)
while(k < n){
u <- runif(1)
j <- j+1
x <- runif(1,min=-5,max=5)
if(-(x-5)*(x+5)/25 > u){
k <- k+1
y[k] <- x
}
}
return(y)
}
atfunction(1000,1)
n <- 1000
D <- 1
isfunction <- function(n,D){
m <- n*D
x <- matrix(rcharleyparabola(m),nrow=n)
fg <- apply(x,1,cofx,D=D) / (-3*(x-5)*(x+5)/500)
return(fg)
}
isfunction(1000,2)
mean (isfunction(1000,2))
mean (isfunction(1000,1))
iscreate <- function(D){
n <- seq(1000,10000,by=1000)
means <- c()
sds <- c()
coefvars <- c()
for(i in n){
thetasample <- replicate(100,atfunction(i,D))
means <- c(means, mean(thetasample))
sds <- c(sds, sd(thetasample))
coefvars <- c(coefvars, mean(thetasample)/sd(thetasample))
}
table <- data.frame(n=n, means=means, sds=sds, coefvars=coefvars, D=D,
method="importancesampling")
return(table)
}
iscreate(1)
library(ggplot2)
library(abind)
library(dplyr)
library(bootstrap)
library(boot)
cofx <- function(x,D){
theta.hat <- (1/((2*pi)^(D/2)))*exp((-1/2)*(t(x) %*% x))
return(theta.hat)
}
crudefunction <- function(n,D){
m <- D*n
x <- matrix(runif(m, min=-5, max=5),nrow=n)
return(mean(apply(x,1,cofx,D=D)))
}
crudecreate <- function(D){
n <- seq(1000,10000,by=1000)
means <- c()
sds <- c()
coefvars <- c()
for(i in n){
thetasample <- replicate(100,crudefunction(i,D))
means <- c(means, mean(thetasample))
sds <- c(sds, sd(thetasample))
coefvars <- c(coefvars, mean(thetasample)/sd(thetasample))
}
table <- data.frame(n=n, means=means, sds=sds, coefvars=coefvars, D=D,
method="crude")
return(table)
}
binvec <- function(n){
return(rev(as.numeric(intToBits(n))[1:(floor(log(n)/log(2))+1)]))
}
mcalc <- function(k,r){
polys <- c(1,3,7,11,13,19,25,37,59,47,61,55,41,67,97,91,109,103,
115,131,193,137,145,143,241,157,185,167,229,171,213,191,
253,203,211,239,247,285,369,299,425,301,361,333,357,351,
501,355,397,391,451,463,487)
ivals <- t(matrix(c(1,1,1,1,1,1,1,1,
1,3,5,15,17,51,85,255,
1,1,7,11,13,61,67,79,
1,3,7,5,7,43,49,147,
1,1,5,3,15,51,125,141,
1,3,1,1,9,59,25,89,
1,1,3,7,31,47,109,173,
1,3,3,9,9,57,43,43,
1,3,7,13,3,35,89,9,
1,1,5,11,27,53,69,25,
1,3,5,1,15,19,113,115,
1,1,7,3,29,51,47,97,
1,3,7,7,21,61,55,19,
1,1,1,9,23,39,97,97,
1,3,3,5,19,33,3,197,
1,1,3,13,11,7,37,101,
1,1,7,13,25,5,83,255,
1,3,5,11,7,11,103,29,
1,1,1,3,13,39,27,203,
1,3,1,15,17,63,13,65),nrow=8))
m <- ivals[k,]
ppn <- polys[k]
c <- tail(binvec(ppn),-1)
deg <- length(c)
for(i in 8:r){
s <- 0
for(j in 1:deg){
s <- bitwXor(s,(2^j)*c[j]*m[i-j])
}
m <- c(m,bitwXor(s,m[i-deg]))
}
return(m[1:r])
}
vcalc <- function(k,r){
V <- diag(r)
if(k>=2){
for(i in 2:k){
m <- mcalc(i,r)
vk <- c()
for(j in 1:r){
h <- binvec(m[j])
h <- c(rep(0,j-length(h)), h, rep(0,r-j))
vk <- cbind(vk,as.matrix(h,nrow=r))
}
V <- abind(V,vk,along=3)
}
}
return(array(V,dim=c(r,r,k)))
}
scramblevcalc <- function(r){
scrambleapply <- function(rownum,r){
samp <- sample(c(1,0),rownum-1,replace=TRUE)
return(c(samp,1,rep(0,r-rownum)))
}
t(sapply(1:r,scrambleapply, r=r))
}
sobol <- function(d,n,scramble=FALSE){
b <- 2
N <- 0:(n-1)
r <- floor(log(n-1)/log(b))+1
bb <- 1/b^(1:r)
bitcreate <- function(N,r){
return(as.numeric(intToBits(N))[1:r])
}
a <- t(apply(as.matrix(N,ncol=1),1,bitcreate, r=r))
p <- matrix(nrow=n,ncol=d)
V <- vcalc(d, r)
for(i in 1:d){
Vtemp <- V[,,i]
atv <- (a%*%t(Vtemp))%%b
if(scramble){
scramblevec <- scramblevcalc(r)
atv <- (atv%*%t(scramblevec))%%b
}
p[,i] <- bb %*% t(atv)
}
return(p)
}
sobolfunction <- function(n,D){
x <- sobol(D,n,scramble=TRUE)
x <- (x-0.5)*10
return(mean(apply(x,1,cofx,D=D)))
}
sobolcreate <- function(D){
n <- seq(1000,10000,by=1000)
means <- c()
sds <- c()
coefvars <- c()
for(i in n){
thetasample <- replicate(100,sobolfunction(i,D))
means <- c(means, mean(thetasample))
sds <- c(sds, sd(thetasample))
coefvars <- c(coefvars, mean(thetasample)/sd(thetasample))
}
table <- data.frame(n=n, means=means, sds=sds, coefvars=coefvars, D=D,
method="sobol")
return(table)
}
atfunction <- function(n,D){
m <- D*n
xhalf1 <- matrix(runif(m/2),nrow=n/2)
xhalf2 <- 1-xhalf1
xhalf1 <- (xhalf1-0.5)*10
xhalf2 <- (xhalf2-0.5)*10
fx1 <- apply(xhalf1,1,cofx,D=D)
fx2 <- apply(xhalf2,1,cofx,D=D)
fx <- (fx1+fx2)/2
return(fx)
}
atcreate <- function(D){
n <- seq(1000,10000,by=1000)
means <- c()
sds <- c()
coefvars <- c()
for(i in n){
thetasample <- replicate(100,atfunction(i,D))
means <- c(means, mean(thetasample))
sds <- c(sds, sd(thetasample))
coefvars <- c(coefvars, mean(thetasample)/sd(thetasample))
}
table <- data.frame(n=n, means=means, sds=sds, coefvars=coefvars, D=D,
method="antithetic")
return(table)
}
lhfunction <- function(n,D,k){
m <- D*n/k
return(mean(replicate(k,{
x  <- matrix(runif(m),nrow=n/k)
p <- replicate(D,sample(1:(n/k)))
V <- (p+1-x)/(n/k)
V <- (V-0.5)*10
Y <- mean(apply(V,1,cofx,D=D))
})))
}
lhcreate <- function(D,k){
n <- seq(1000,10000,by=1000)
means <- c()
sds <- c()
coefvars <- c()
for(i in n){
thetasample <- replicate(100,lhfunction(i,D,k))
means <- c(means, mean(thetasample))
sds <- c(sds, sd(thetasample))
coefvars <- c(coefvars, mean(thetasample)/sd(thetasample))
}
table <- data.frame(n=n, means=means, sds=sds, coefvars=coefvars, D=D,
method="latin hypercube")
return(table)
}
rcharleyparabola <- function(n){
n <- 1000
k <- 0
j <- 0
y <- numeric(n)
while(k < n){
u <- runif(1)
j <- j+1
x <- runif(1,min=-5,max=5)
if(-(x-5)*(x+5)/25 > u){
k <- k+1
y[k] <- x
}
}
return(y)
}
isfunction <- function(n,D){
m <- n*D
x <- matrix(rcharleyparabola(m),nrow=n)
fg <- apply(x,1,cofx,D=D) / (-3*(x-5)*(x+5)/500)
return(fg)
}
iscreate <- function(D){
n <- seq(1000,10000,by=1000)
means <- c()
sds <- c()
coefvars <- c()
for(i in n){
thetasample <- replicate(100,atfunction(i,D))
means <- c(means, mean(thetasample))
sds <- c(sds, sd(thetasample))
coefvars <- c(coefvars, mean(thetasample)/sd(thetasample))
}
table <- data.frame(n=n, means=means, sds=sds, coefvars=coefvars, D=D,
method="importancesampling")
return(table)
}
table <- crudecreate(1)
table <- rbind(table,crudecreate(2))
table <- rbind(table,sobolcreate(1))
table <- rbind(table,sobolcreate(2))
table <- rbind(table,atcreate(1))
table <- rbind(table,atcreate(2))
table <- rbind(table,lhcreate(1,10),lhcreate(2,10))
table <- rbind(table,iscreate(1),iscreate(2))
write.csv(table,"variancetable.csv")
viewwd
?setwd
getwd()
setwd("E:/Downloads/Courses/CUNY/SPS/Git/IS 604 Simulation and Modeling techniques/Homework 4")
table <- read.csv("variancetable.csv")
View(table)
setwd("E:/Downloads/Courses/CUNY/SPS/Git/IS 604 Simulation and Modeling techniques/Homework 4")
table <- read.csv("variancetable.csv")
View(table)
ggplot(data=table,aes(x=n,y=means,color=D)) + geom_line() +
geom_hline(yintercept=(1.10)^2)
ggplot(data=filter(table,method="Crude"),aes(x=n,y=means,color=as.factor(D))) +
geom_line() +
geom_hline(yintercept=(1.10)^2)
ggplot(data=filter(table,method="Crude"),aes(x=n,y=means,color=factor(D))) +
geom_line() +
geom_hline(yintercept=(1.10)^2)
filter(table,method="Crude")
ggplot(data=filter(table,method=="Crude"),aes(x=n,y=means,color=as.factor(D))) +
geom_line() +
geom_hline(yintercept=(1.10)^2)
ggplot(data=filter(table,method=="Crude"),aes(x=n,y=means,color=as.factor(D))) +
geom_line() +
geom_hline(yintercept=(1.10))
ggplot(data=filter(table,method=="Crude",D=1),
aes(x=n,y=means,color=as.factor(D))) +
geom_line() +
geom_hline(yintercept=(1.10))
ggplot(data=filter(table,method=="Crude",D==1),
aes(x=n,y=means,color=as.factor(D))) +
geom_line() +
geom_hline(yintercept=(1.10))
ggplot(data=filter(table,method=="Crude",D==1),
aes(x=n,y=means,color=as.factor(D))) +
geom_line() +
geom_hline(yintercept=(1/10))
ggplot(data=filter(table,method=="Crude",D==1),
aes(x=n,y=sds,coolor=as.factor(D))) +
geom_line()
ggplot(data=filter(table,method=="Crude",D==1),
aes(x=n,y=means,color=as.factor(D))) +
geom_line() +
geom_hline(yintercept=(1/10))
ggplot(data=filter(table,method=="Crude",D==2),
aes(x=n,y=means,color=as.factor(D))) +
geom_line() +
geom_hline(yintercept=(1/10))
ggplot(data=filter(table,method=="Crude",D==2),
aes(x=n,y=means,color=as.factor(D))) +
geom_line() +
geom_hline(yintercept=(1/10)^2)
ggplot(data=filter(table,method=="Crude",D==2),
aes(x=n,y=sds,coolor=as.factor(D))) +
geom_line()
ggplot(filter(table,method %in% c("Crude","Sobol"),D==1),
aes(x=n,y=means,color=method)) +
geom_hline(yintercept=(1/10)) +
geom_line()
ggplot(filter(table,method %in% c("Crude","Sobol"),D==1),
aes(x=n,y=sds,color=method)) + geom_line()
ggplot(filter(table,method %in% c("Crude","Sobol"),D==2),
aes(x=n,y=means,color=method)) +
geom_hline(yintercept=(1/10)) +
geom_line()
ggplot(filter(table,method %in% c("Crude","Sobol"),D==2),
aes(x=n,y=means,color=method)) +
geom_hline(yintercept=(1/10)^2) +
geom_line()
ggplot(filter(table,method %in% c("Crude","Sobol"),D==2),
aes(x=n,y=sds,color=method)) + geom_line()
ggplot(filter(table,method %in% c("Crude","Antithetic"),D==1),
aes(x=n,y=means,color=method)) +
geom_hline(yintercept=(1/10)) +
geom_line()
ggplot(filter(table,method %in% c("Crude","Antithetic"),D==1),
aes(x=n,y=sds,color=method)) + geom_line()
ggplot(filter(table,method %in% c("Crude","Antithetic"),D==2),
aes(x=n,y=means,color=method)) +
geom_hline(yintercept=(1/10)^2) +
geom_line()
ggplot(filter(table,method %in% c("Crude","Antithetic"),D==2),
aes(x=n,y=sds,color=method)) + geom_line()
ggplot(filter(table,method %in% c("Crude","LatinHypercube"),D==1),
aes(x=n,y=means,color=method)) +
geom_hline(yintercept=(1/10)) +
geom_line()
ggplot(filter(table,method %in% c("Crude","LatinHypercube"),D==1),
aes(x=n,y=sds,color=method)) + geom_line()
ggplot(filter(table,method %in% c("Crude","LatinHypercube"),D==2),
aes(x=n,y=means,color=method)) +
geom_hline(yintercept=(1/10)^2) +
geom_line()
ggplot(filter(table,method %in% c("Crude","LatinHypercube"),D==2),
aes(x=n,y=sds,color=method)) + geom_line()
ggplot(filter(table,method %in% c("Crude","ImportanceSampling"),D==1),
aes(x=n,y=means,color=method)) +
geom_hline(yintercept=(1/10)) +
geom_line()
ggplot(filter(table,method %in% c("Crude","ImportanceSampling"),D==1),
aes(x=n,y=sds,color=method)) + geom_line()
ggplot(filter(table,method %in% c("Crude","ImportanceSampling"),D==2),
aes(x=n,y=means,color=method)) +
geom_hline(yintercept=(1/10)^2) +
geom_line()
ggplot(filter(table,method %in% c("Crude","ImportanceSampling"),D==2),
aes(x=n,y=sds,color=method)) + geom_line()
ggplot(filter(table,D==1),aes(x=x,y=means,color=method)) + geom_line()
ggplot(filter(table,D==1),aes(x=x,y=means,color=method)) + geom_line()
ggplot(filter(table,D==1),aes(x=n,y=means,color=method)) + geom_line()
ggplot(filter(table,method %in% c("Sobol", "LatinHypercube"),D==1),
aes(x=n,y=means,color=method)) + geom_line()
ggplot(filter(table,D==1),aes(x=n,y=means,color=method)) + geom_line() +
geom_hline(yintercept=(1/10))
ggplot(filter(table,method %in% c("Sobol", "LatinHypercube"),D==1),
aes(x=n,y=means,color=method)) + geom_line() +
geom_hline(yintercept=(1/10))
ggplot(filter(table,D==1),aes(x=n,y=means,color=method)) + geom_line() +
geom_hline(yintercept=(1/10))
ggplot(filter(table,method %in% c("Sobol", "LatinHypercube"),D==1),
aes(x=n,y=means,color=method)) + geom_line() +
geom_hline(yintercept=(1/10))
ggplot(filter(table,D==2),aes(x=n,y=means,color=method)) + geom_line() +
geom_hline(yintercept=(1/10))
ggplot(filter(table,D==2),aes(x=n,y=means,color=method)) + geom_line() +
geom_hline(yintercept=(1/10)^2)
ggplot(filter(table,method %in% c("Sobol", "LatinHypercube"),D==2),
aes(x=n,y=means,color=method)) + geom_line() +
geom_hline(yintercept=(1/10)^2)
ggplot(filter(table,D==2),aes(x=n,y=means,color=method)) + geom_line() +
geom_hline(yintercept=(1/10)^2)
ggplot(filter(table,D==2),aes(x=n,y=means,color=method)) + geom_line() +
geom_hline(yintercept=(1/10)^2)
ggplot(filter(table,D==1),aes(x=n,y=sds,color=method)) + geom_line()
ggplot(filter(table,method %in% c("Sobol", "LatinHypercube"),D==1),
aes(x=n,y=sds,color=method)) + geom_line()
ggplot(filter(table,D==1),aes(x=n,y=sds,color=method)) + geom_line()
ggplot(filter(table,method %in% c("Antithetic", "Crude","ImportanceSampling"),
D==1),aes(x=n,y=sds,color=method)) + geom_line()
ggplot(filter(table,method %in% c("Antithetic","ImportanceSampling"),
D==1),aes(x=n,y=sds,color=method)) + geom_line()
ggplot(filter(table,D==1),aes(x=n,y=sds,color=method)) + geom_line()
ggplot(filter(table,method %in% c("Antithetic","ImportanceSampling"),
D==1),aes(x=n,y=sds,color=method)) + geom_line()
ggplot(filter(table,method %in% c("Sobol", "LatinHypercube"),D==1),
aes(x=n,y=sds,color=method)) + geom_line()
ggplot(filter(table,method %in% c("Crude"),D==1),
aes(x=n,y=sds,color=method)) + geom_line()
ggplot(filter(table,D==2),aes(x=n,y=sds,color=method)) + geom_line()
ggplot(filter(table,method %in% c("Sobol", "LatinHypercube"),D==2),
aes(x=n,y=sds,color=method)) + geom_line()
ggplot(filter(table,method %in% c("Crude"),D==2),
aes(x=n,y=sds,color=method)) + geom_line(
ggplot(filter(table,method %in% c("Crude"),D==2),
aes(x=n,y=sds,color=method)) + geom_line()
)
ggplot(filter(table,method %in% c("Crude"),D==2),
aes(x=n,y=sds,color=method)) + geom_line()
ggplot(filter(table,method %in% c("Sobol", "LatinHypercube"),D==2),
aes(x=n,y=sds,color=method)) + geom_line()
ggplot(filter(table,method %in% c("Antithetic","ImportanceSampling"),
D==1),aes(x=n,y=sds,color=method)) + geom_line()
ggplot(filter(table,method %in% c("Sobol", "LatinHypercube"),D==2),
aes(x=n,y=sds,color=method)) + geom_line()
ggplot(filter(table,method %in% c("Sobol", "LatinHypercube"),D==1),
aes(x=n,y=sds,color=method)) + geom_line()
ggplot(data=filter(table,method=="Crude",D==1),
aes(x=n,y=means,color=as.factor(D))) +
geom_line() +
geom_hline(yintercept=(1/10))
ggplot(data=filter(table,method=="Crude",D==1),
aes(x=n,y=means)) +
geom_line() +
geom_hline(yintercept=(1/10))
ggplot(data=filter(table,method=="Crude",D==1),
aes(x=n,y=sds,coolor=as.factor(D))) +
geom_line()
ggplot(data=filter(table,method=="Crude",D==2),
aes(x=n,y=means)) +
geom_line() +
geom_hline(yintercept=(1/10)^2)
ggplot(data=filter(table,method=="Crude",D==2),
aes(x=n,y=sds,coolor=as.factor(D))) +
geom_line()
ggplot(filter(table,method %in% c("Crude","Sobol"),D==1),
aes(x=n,y=means,color=method)) +
geom_hline(yintercept=(1/10)) +
geom_line()
ggplot(filter(table,method %in% c("Crude","Sobol"),D==1),
aes(x=n,y=means,color=method)) +
geom_hline(yintercept=(1/10)) +
geom_line()
ggplot(filter(table,method %in% c("Crude","Sobol"),D==1),
aes(x=n,y=sds,color=method)) + geom_line()
