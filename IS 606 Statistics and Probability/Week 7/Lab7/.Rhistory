n <- length(y) #length of the data
m <- 1000 #length of the chain
mu <- lambda <- k <- numeric(m)
L <- numeric(n)
k[1] <- sample(1:n, 1)
mu[1] <- 1
lambda[1] <- 1
b1 <- 1
b2 <- 1
for(i in 2:m){
kt <- k[i-1]
}
for (i in 2:m) {
kt <- k[i-1]
#generate mu
r <- .5 + sum(y[1:kt])
mu[i] <- rgamma(1, shape = r, rate = kt + b1)
#generate lambda
if (kt + 1 > n) r <- .5 + sum(y) else
r <- .5 + sum(y[(kt+1):n])
lambda[i] <- rgamma(1, shape = r, rate = n - kt + b2)
#generate b1 and b2
b1 <- rgamma(1, shape = .5, rate = mu[i]+1)
b2 <- rgamma(1, shape = .5, rate = lambda[i]+1)
for (j in 1:n) {
L[j] <- exp((lambda[i] - mu[i]) * j) *
(mu[i] / lambda[i])^sum(y[1:j])
}
L <- L / sum(L)
#generate k from discrete distribution L on 1:n
k[i] <- sample(1:n, prob=L, size=1)
}
library(ggplot2)
ggplot(aes(x=lambda)) + geom_histogram()
ggplot(lambda, aes(x=lambda)) + geom_histogram()
ggplot(lambda, aes(x=lambda)) + geom_histogram()
plot(lambda)
qplot(lambda)
qplot(lambda)
qplot(mu)
qplot(k)
ggplot(data.frame(x=lambda, y=phi), aes(x=x,y=y)) + geom_point()
ggplot(data.frame(x=mu, y=lambda), aes(x=x,y=y)) + geom_point()
ggplot(data.frame(x=mu, y=k), aes(x=x,y=y)) + geom_point(0)
ggplot(data.frame(x=mu, y=k), aes(x=x,y=y)) + geom_point()
ggplot(data.frame(lambda=mu, m=k), aes(x=lambda,y=m)) + geom_point()
ggplot(data.frame(lambda=mu, phi=lambda), aes(x=lambda,y=phi)) + geom_point()
ggplot(data.frame(lambda=mu, m=k), aes(x=lambda,y=m)) + geom_point()
library(boot)
data(coal)
year <- floor(coal)
y <- table(year)
plot(y)
y <- floor(coal[[1]])
y <- tabulate(y)
y <- y[1851:length(y)]
n <- length(y) #length of the data
m <- 1000 #length of the chain
mu <- lambda <- k <- numeric(m)
L <- numeric(n)
k[1] <- sample(1:n, 1)
mu[1] <- 1
lambda[1] <- 1
b1 <- numeric()
b2 <- numeric()
for(i in 2:m){
kt <- k[i-1]
}
for (i in 2:m) {
kt <- k[i-1]
#generate mu
r <- .5 + sum(y[1:kt])
mu[i] <- rgamma(1, shape = r, rate = kt + b1)
#generate lambda
if (kt + 1 > n) r <- .5 + sum(y) else
r <- .5 + sum(y[(kt+1):n])
lambda[i] <- rgamma(1, shape = r, rate = n - kt + b2)
#generate b1 and b2
b1 <- c(b1,rgamma(1, shape = .5, rate = mu[i]+1))
b2 <- c(b2,rgamma(1, shape = .5, rate = lambda[i]+1))
for (j in 1:n) {
L[j] <- exp((lambda[i] - mu[i]) * j) *
(mu[i] / lambda[i])^sum(y[1:j])
}
L <- L / sum(L)
#generate k from discrete distribution L on 1:n
k[i] <- sample(1:n, prob=L, size=1)
}
4[1]
library(boot)
data(coal)
year <- floor(coal)
y <- table(year)
plot(y)
y <- floor(coal[[1]])
y <- tabulate(y)
y <- y[1851:length(y)]
n <- length(y) #length of the data
m <- 1000 #length of the chain
mu <- lambda <- k <- numeric(m)
L <- numeric(n)
k[1] <- sample(1:n, 1)
mu[1] <- 1
lambda[1] <- 1
b1 <- 1
b2 <- 1
for(i in 2:m){
kt <- k[i-1]
}
for (i in 2:m) {
kt <- k[i-1]
#generate mu
r <- .5 + sum(y[1:kt])
mu[i] <- rgamma(1, shape = r, rate = kt + b1[i-1])
#generate lambda
if (kt + 1 > n) r <- .5 + sum(y) else
r <- .5 + sum(y[(kt+1):n])
lambda[i] <- rgamma(1, shape = r, rate = n - kt + b2[i-1])
#generate b1 and b2
b1 <- c(b1,rgamma(1, shape = .5, rate = mu[i]+1))
b2 <- c(b2,rgamma(1, shape = .5, rate = lambda[i]+1))
for (j in 1:n) {
L[j] <- exp((lambda[i] - mu[i]) * j) *
(mu[i] / lambda[i])^sum(y[1:j])
}
L <- L / sum(L)
#generate k from discrete distribution L on 1:n
k[i] <- sample(1:n, prob=L, size=1)
}
ggplot(data.frame(beta = b1, delta = b2),aes(x=beta, y=delta)) + geom_point()
qplot(k)
qplot(k, bins=100)
qplot(k, binwidth <- range/100)
qplot(k)
range(k)
qplot(k, binwidth=(range(k)[2]-range(k)[1])/100)
mean(k)
View(year)
View(coal)
averagebefore <- mean(y[1:40])
averageafter <- mean(y[41:length(y)])
plot(y)
library(boot)
data(coal)
year <- floor(coal)
y <- table(year)
plot(y)
y <- floor(coal[[1]])
y <- tabulate(y)
y <- y[1851:length(y)]
plot(table(year))
k <- c(0.25,0.25,0.25)
k <- c(0.25,0.25,0.25)
rwm <- function(x0,N,k){
x <- numeric(N)
x[1] <- x0
u <- runif(N)
count <- 0
for(i in 2:N){
y <- runif(1)
if(
u[i] <=
(((2+y)^k[1] * (1-y)^sum(k[2],k[3]) * y^(197-sum(k)))/
((2+x[i-1])^k[1] * (1-x[i-1])^sum(k[2],k[3]) * x[i-1]^(197-sum(k))))
){
x[i] <- y
}else{
x[i] <- x[i-1]
count <- count+1
}
}
return(list(x=x,count=count))
}
hist(rwm(0.9,10000,k)$x,breaks=100)
k <- c(0.25,0.25,0.25,0.25)
rwm <- function(x0,N,k){
x <- numeric(N)
x[1] <- x0
u <- runif(N)
count <- 0
for(i in 2:N){
y <- runif(1)
if(
u[i] <=
(((2+y)^k[1] * (1-y)^sum(k[2],k[3]) * y^(197-sum(k)))/
((2+x[i-1])^k[1] * (1-x[i-1])^sum(k[2],k[3]) * x[i-1]^(197-sum(k))))
){
x[i] <- y
}else{
x[i] <- x[i-1]
count <- count+1
}
}
return(list(x=x,count=count))
}
hist(rwm(0.9,10000,k)$x,breaks=100)
rwm(0.9,10000,k
)
rwm <- function(x0,N){
x <- numeric(N)
x[1] <- x0
u <- runif(N)
count <- 0
k <- c(0.5+(x0/4), (1-x0)/4, (1-x0)/4)
for(i in 2:N){
y <- runif(1)
if(
u[i] <=
(((2+y)^k[1] * (1-y)^sum(k[2],k[3]) * y^(197-sum(k)))/
((2+x[i-1])^k[1] * (1-x[i-1])^sum(k[2],k[3]) * x[i-1]^(197-sum(k))))
){
x[i] <- y
}else{
x[i] <- x[i-1]
count <- count+1
}
}
return(list(x=x,count=count))
}
hist(rwm(0.9,10000)$x,breaks=100)
rwm(0.2,10000)
x <- seq(0,1,by=0.01)
x <- seq(0,1,by=0.01)
y <- (125-(0.5+(x/4)))^2 + (18-((1-x)/4))^2 + (20-((1-x)/4))^2 +
(34-(x/4))^2
plot(x,y)
x <- seq(0,1,by=0.01)
y <- ((125/197)-(0.5+(x/4)))^2 + ((18/197)-((1-x)/4))^2 +
((20/197)-((1-x)/4))^2 + ((34/197)-(x/4))^2
plot(x,y)
rwm <- function(x0,N){
x <- numeric(N)
x[1] <- x0
u <- runif(N)
count <- 0
k <- c(0.5+(x0/4), (1-x0)/4, (1-x0)/4)
for(i in 2:N){
y <- runif(1)
if(
u[i] <=
(((2+y)^k[1] * (1-y)^sum(k[2],k[3]) * y^(197-sum(k)))/
((2+x[i-1])^k[1] * (1-x[i-1])^sum(k[2],k[3]) * x[i-1]^(197-sum(k))))
){
x[i] <- y
}else{
x[i] <- x[i-1]
count <- count+1
}
}
return(list(x=x,count=count))
}
rwm <- function(x0,N){
x <- numeric(N)
x[1] <- x0
u <- runif(N)
count <- 0
k <- c(125,18,20)
for(i in 2:N){
y <- runif(1)
if(
u[i] <=
(((2+y)^k[1] * (1-y)^sum(k[2],k[3]) * y^(197-sum(k)))/
((2+x[i-1])^k[1] * (1-x[i-1])^sum(k[2],k[3]) * x[i-1]^(197-sum(k))))
){
x[i] <- y
}else{
x[i] <- x[i-1]
count <- count+1
}
}
return(list(x=x,count=count))
}
hist(rwm(0.9,10000)$x,breaks=100)
rwmtest <- rwm(0.9,10000)
hist(rwmtest$x,breaks=100)
mean(rwmtest$x)
C <- matrix(c(0,633,257,91,412,150,80,134,259,505,353,324,70,211,268,246,121,
633,0,390,661,227,488,572,530,555,289,282,638,567,466,420,745,518,
257,390,0,228,169,112,196,154,372,262,110,437,191,74,53,472,142,
91,661,228,0,383,120,77,105,175,476,324,240,27,182,239,237,84,
412,227,169,383,0,267,351,309,338,196,61,421,346,243,199,528,297,
150,488,112,120,267,0,63,34,264,360,208,329,83,105,123,364,35,
80,572,196,77,351,63,0,29,232,444,292,297,47,150,207,332,29,
134,530,154,105,309,34,29,0,249,402,250,314,68,108,165,349,36,
259,555,372,175,338,264,232,249,0,495,352,95,189,326,383,202,236,
505,289,262,476,196,360,444,402,495,0,154,578,439,336,240,685,390,
353,282,110,324,61,208,292,250,352,154,0,435,287,184,140,542,238,
324,638,437,240,421,329,297,314,95,578,435,0,254,391,448,157,301,
70,567,191,27,346,83,47,68,189,439,287,254,0,145,202,289,55,
211,466,74,182,243,105,150,108,326,336,184,391,145,0,57,426,96,
268,420,53,239,199,123,207,165,383,240,140,448,202,57,0,483,153,
46,745,472,237,528,364,332,349,202,685,542,157,289,426,483,0,336,
121,518,142,84,297,35,29,36,236,390,238,301,55,96,153,336,0),
nrow=17)
costfun <- function(x,C){
cost <- 0
for(i in 1:(length(x)-1)){
cost <- cost + C[x[i],x[i+1]]
}
return(cost)
}
anneal <- function(T0, beta, N){
temp <- T0
C <- matrix(c(0,633,257,91,412,150,80,134,259,505,353,324,70,211,268,246,121,
633,0,390,661,227,488,572,530,555,289,282,638,567,466,420,745,518,
257,390,0,228,169,112,196,154,372,262,110,437,191,74,53,472,142,
91,661,228,0,383,120,77,105,175,476,324,240,27,182,239,237,84,
412,227,169,383,0,267,351,309,338,196,61,421,346,243,199,528,297,
150,488,112,120,267,0,63,34,264,360,208,329,83,105,123,364,35,
80,572,196,77,351,63,0,29,232,444,292,297,47,150,207,332,29,
134,530,154,105,309,34,29,0,249,402,250,314,68,108,165,349,36,
259,555,372,175,338,264,232,249,0,495,352,95,189,326,383,202,236,
505,289,262,476,196,360,444,402,495,0,154,578,439,336,240,685,390,
353,282,110,324,61,208,292,250,352,154,0,435,287,184,140,542,238,
324,638,437,240,421,329,297,314,95,578,435,0,254,391,448,157,301,
70,567,191,27,346,83,47,68,189,439,287,254,0,145,202,289,55,
211,466,74,182,243,105,150,108,326,336,184,391,145,0,57,426,96,
268,420,53,239,199,123,207,165,383,240,140,448,202,57,0,483,153,
46,745,472,237,528,364,332,349,202,685,542,157,289,426,483,0,336,
121,518,142,84,297,35,29,36,236,390,238,301,55,96,153,336,0),
nrow=17)
n <- dim(C)[1]
x <- sample(1:17,17)
sx <- costfun(x,C)
xbest <- x
sbest <- sx
results <- numeric(N)
for(i in 1:N){
x1 <- sample(1:17,17)
I <- sort(c(x1[1],x1[2]))
if(I[2] == 17){
y <- c(x[1:I[1]-1],x[I[2]:I[1]])
}else{
y <- c(x[1:I[1]-1],x[I[2]:I[1]],x[(I[2]+1):length(x)])
}
sx <- costfun(x,C)
sy <- costfun(y,C)
if(sy < sx){
alpha <- 1
}else{
alpha <- exp(-(sy-sx)/temp)
}
U <- runif(1)
if(U < alpha){
x <- y
sx <- sy
}
temp <- beta * temp
xbest <- x
sbest <- sx
results[i] <- sbest
}
return(list(x=xbest, costs = results))
}
T0 <- 1
beta <- 0.9999
n <- 10000
x0 <- sample(1:17,17)
testresult <- anneal(T0, beta, n)
plot(testresult$costs)
bests <- c()
for(i in 1:10000){
bests <- c(bests,anneal(T0, beta, n)$costs[n])
}
bests <- c()
for(i in 1:1000){
bests <- c(bests,anneal(T0, beta, n)$costs[n])
}
bests <- c()
for(i in 1:20){
bests <- c(bests,anneal(T0, beta, n)$costs[n])
}
plot(bests)
bests <- c()
for(i in 1:100){
bests <- c(bests,anneal(T0, beta, n)$costs[n])
}
bests <- c()
for(i in 1:20){
bests <- c(bests,anneal(T0, beta, n)$costs[n])
}
plot(bests)
costfun(sample(1:17,17),C)
randoms <- c()
for(i in 1:20){
randoms <- c(randoms,costfun(sample(1:17,17),C))
}
plot(randoms)
setwd("E:/Downloads/Courses/CUNY/SPS/Git/IS 606 Statistics and Probability/Week 7")
library(IS606)
getLabs()
startLab("Lab8")
startLab("Lab7")
load("more/mlb11.RData")
setwd("E:/Downloads/Courses/CUNY/SPS/Git/IS 606 Statistics and Probability/Week 7/Lab7")
load("more/mlb11.RData")
View(mlb11)
library(ggplot2)
ggplot(mlb11,aes(x=at_bats,y=runs)) + geom_point()
cor(mlb11$runs, mlb11$at_bats)
plot_ss(x = mlb11$at_bats, y = mlb11$runs)
plot_ss(x = mlb11$at_bats, y = mlb11$runs)
plot_ss(x = mlb11$at_bats, y = mlb11$runs)
plot_ss(x = mlb11$at_bats, y = mlb11$runs)
plot_ss(x = mlb11$at_bats, y = mlb11$runs, showSquares = TRUE)
plot_ss(x = mlb11$at_bats, y = mlb11$runs, showSquares = TRUE)
plot_ss(x = mlb11$at_bats, y = mlb11$runs, showSquares = TRUE)
plot_ss(x = mlb11$at_bats, y = mlb11$runs, showSquares = TRUE)
plot_ss(x = mlb11$at_bats, y = mlb11$runs, showSquares = TRUE)
plot_ss(x = mlb11$at_bats, y = mlb11$runs, showSquares = TRUE)
plot_ss(x = mlb11$at_bats, y = mlb11$runs, showSquares = TRUE)
m1 <- lm(runs ~ at_bats, data = mlb11)
summary(m1)
m2 <- lm(runs ~ homeruns, data = mlb11)
summary(m2)
ggplot(mlb11, aes(x=homeruns, y=runs)) + geom_point()
ggplot(mlb11, aes(x=homeruns, y=runs)) + geom_point() + stat_smooth()
?method
?stat_smooth
ggplot(mlb11, aes(x=homeruns, y=runs)) + geom_point() + stat_smooth(method="lm")
summary(m2)
plot(mlb11$runs ~ mlb11$at_bats)
abline(m1)
plot(m1$residuals ~ mlb11$at_bats)
abline(h = 0, lty = 3)
hist(m1$residuals)
qqnorm(m1$residuals)
qqline(m1$residuals)
ggplot(mlb11, aes(x=hits, y=runs)) + geom_point()
ggplot(mlb11, aes(x=hits, y=runs)) + geom_point() + stat_smooth(method="lm")
m3 <- lm(runs~hits, data=mlb11)
summary(m3)
m3$rank
m3$xlevels
summary(m3)
summary(m1)
ggplot(aes(x=mlb11$hits, y=m3$residuals)) + geom_point()
ggplot(data.frame(x=mlb11$hits,y=m3$residuals),aes(x=x, y=y)) +
geom_point()
?hline
?vline
?ggplot
?geom_hline
ggplot(data.frame(x=mlb11$hits,y=m3$residuals),aes(x=x, y=y)) +
geom_point() + geom_hline(0)
geom_point() + geom_hline(x=0)
ggplot(data.frame(x=mlb11$hits,y=m3$residuals),aes(x=x, y=y)) +
geom_point() + geom_hline(x=0)
summary(m3)
summary(m1)
library(GGally)
ggpairs(mlb11)
ggplot(mlb11, aes(x=hits,y=runs)) + geom_point() + stat_smooth(method="lm")
ggplot(mlb11, aes(x=hits,y=runs)) + geom_point() + stat_smooth(method="lm")
ggplot(mlb11, aes(x=bat_avg,y=runs)) + geom_point() + stat_smooth(method="lm")
ggplot(mlb11, aes(x=strikeouts,y=runs)) + geom_point() + stat_smooth(method="lm")
ggplot(mlb11, aes(x=stolen_bases,y=runs)) + geom_point() +
stat_smooth(method="lm")
ggplot(mlb11, aes(x=wins,y=runs)) + geom_point() + stat_smooth(method="lm")
mhits <- lm(runs~hits,data=mlb11)
mbatavg <- lm(runs~bat_avg,data=mlb11)
mhits <- lm(runs~hits,data=mlb11)
mbatavg <- lm(runs~bat_avg,data=mlb11)
mstrikeouts <- lm(runs~strikeouts,data=mlb11)
mstolenbases <- lm(runs~stolen_bases,data=mlb11)
mwins <- lm(runs~wins,data=mlb11)
sumarry(mhits)
summary(mhits)
summary(mhits)$R-squared
mhits$R
mhits$qr
summary(mhits)
summary(mhits)$r.squared
summary(mwins)$r.squared
summary(mhits)$r.squared
summary(mbatavg)$r.squared
summary(mstrikeouts)$r.squared
summary(mstolenbases)$r.squared
summary(mwins)$r.squared
summary(mhits)$r.squared
summary(mbatavg)$r.squared
summary(mstrikeouts)$r.squared
summary(mstolenbases)$r.squared
summary(mwins)$r.squared
mnewonbase <- lm(runs~new_onbase, data=mlb11)
mnewobs <- lm(runs~new_obs, data=mlb11)
mnewonbase <- lm(runs~new_onbase, data=mlb11)
mnewslug <- lm(runs~new_slug, data=mlb11)
mnewobs <- lm(runs~new_obs, data=mlb11)
summary(mnewonbase)$r.squared
summary(mnewslug)$r.squared
summary(mnewobs)$r.squared
ggplot(mlb11,aes(x=new_onbase,y=runs)) + geom_point() + stat_smooth(method="lml")
ggplot(mlb11,aes(x=new_onbase,y=runs)) + geom_point() + stat_smooth(method="lm")
ggplot(mlb11,aes(x=new_slug,y=runs)) + geom_point() + stat_smooth(method="lm")
ggplot(mlb11,aes(x=new_obs,y=runs)) + geom_point() + stat_smooth(method="lm")
m3 <- lm(runs~hits, data=mlb11)
summary(m3)
summary(m1)
cor(at_bats,runs,data=mlb11)
cor(mlb11$at_bats,mlb11$runs)
cor(mlb11$at_bats,mlb11$runs)^2
b1 <- 9.41/10.37
b1 <- (9.41/10.37)*0.67
.6*107.2
64.32+171.14
64.32-171.14
R2 <- 0.67^2
height = 0.6*100 + 106.82
height
0.6*(100-107.2)+171.14
R <- sqrt(0.6466)
