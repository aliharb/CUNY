install.packages("plyr")
install.packages("dplyr")
head(babynames)
devtools::install_github("hadley/babynames")
install.packages("devtools")
devtools::install_github("hadley/babynames")
head(babynames)
library(babynames)
head(babynames)
length(babynames)
length(babynames$name)
babynames$name
library(dplyr)
head(babynames)
babytest <- select(babynames,name=="Charley")
babynames <- babynames
babynames %>% select(name == "Charley")
babynames %>% select(name == "Mary")
"hello" == "hello"
babynames <- babynames %>% filter(name=="Charley")
View(babynames)
rm(babynames)
babynames <- babynames %>% filter(name=="Charley")
rm(babynames)
babytest <- babynames %>% filter(name=="Charley")
View(babytest)
plot(babytest$name)
library(ggplot2)
ggplot(babytest, aes(x=n, y=year))
ggplot(babytest, aes(x=n, y=year))  + geom_line()
ggplot(babytest, aes(x=year, y=n))  + geom_line()
babytest$n
name <- "Charles"
babytest <- babynames %>% filter(name==name)
ggplot(babytest, aes(x=year, y=n))  + geom_line()
name <- "Charles"
babytest <- babynames %>% filter(name==name)
View(babytest)
namefilter <- "Charles"
babytest <- babynames %>% filter(name==namefilter)
ggplot(babytest, aes(x=year, y=n))  + geom_line()
install.packages(zoo)
install.packages("zoo")
library(zoo)
vignette(zoo)
vignette("zoo")
head(babytest)
kings <- scan("http://robjhyndman.com/tsdldata/misc/kings.dat",skip=3)
births <- scan("http://robjhyndman.com/tsdldata/data/nybirths.dat")
nameseries <- ts(babytest$n, frequency = 1, start=1880)
nameseries
head(nameseries)
plot.ts(nameseries)
?sma
?SMA
library(TTR)
library(forecast)
install.packages("TTR")
install.packages("forecast")
library(TTR)
library(forecast)
library(TTR)
library(forecast)
plot.ts(SMA(nameseries,n=2))
namefilter <- "Charley"
babytest <- babynames %>% filter(name==namefilter)
nameseries <- ts(babytest$n, frequency = 1, start=1880)
plot.ts(SMA(nameseries,n=2))
babytest$year
2013-1880
tail(babytest$year,-1) - head(babytest$year,-1)
View(babytest)
namefilter <- "Charley"
babytest <- babynames %>% filter(name==namefilter, sex=="M")
nameseries <- ts(babytest$n, frequency = 1, start=1880)
plot.ts(nameseries)
namefilter <- "Jonah"
babytest <- babynames %>% filter(name==namefilter, sex=="M")
nameseries <- ts(babytest$n, frequency = 1, start=1880)
plot.ts(nameseries)
namefilter <- "Tyler"
babytest <- babynames %>% filter(name==namefilter, sex=="M")
nameseries <- ts(babytest$n, frequency = 1, start=1880)
plot.ts(nameseries)
namefilter <- "Bruce"
babytest <- babynames %>% filter(name==namefilter, sex=="M")
nameseries <- ts(babytest$n, frequency = 1, start=1880)
plot.ts(nameseries)
namefilter <- "Danny"
babytest <- babynames %>% filter(name==namefilter, sex=="M")
nameseries <- ts(babytest$n, frequency = 1, start=1880)
plot.ts(nameseries)
namefilter <- "Peter"
babytest <- babynames %>% filter(name==namefilter, sex=="M")
nameseries <- ts(babytest$n, frequency = 1, start=1880)
plot.ts(nameseries)
namefilter <- "Paul"
babytest <- babynames %>% filter(name==namefilter, sex=="M")
nameseries <- ts(babytest$n, frequency = 1, start=1880)
plot.ts(nameseries)
namefilter <- "Lucifer"
babytest <- babynames %>% filter(name==namefilter, sex=="M")
nameseries <- ts(babytest$n, frequency = 1, start=1880)
plot.ts(nameseries)
namefilter <- "Jacob"
babytest <- babynames %>% filter(name==namefilter, sex=="M")
nameseries <- ts(babytest$n, frequency = 1, start=1880)
plot.ts(nameseries)
namefilter <- "Scott"
babytest <- babynames %>% filter(name==namefilter, sex=="M")
nameseries <- ts(babytest$n, frequency = 1, start=1880)
plot.ts(nameseries)
source('~/.active-rstudio-document', echo=TRUE)
namefilter <- "toby"
babytest <- babynames %>% filter(name==namefilter, sex=="M")
nameseries <- ts(babytest$n, frequency = 1, start=1880)
plot.ts(nameseries)
namefilter <- "Toby"
babytest <- babynames %>% filter(name==namefilter, sex=="M")
nameseries <- ts(babytest$n, frequency = 1, start=1880)
plot.ts(nameseries)
namefilter <- "toby"
babytest <- babynames %>% filter(name==namefilter, sex=="M")
nameseries <- ts(babytest$n, frequency = 1, start=1880)
plot.ts(nameseries)
namefilter <- "Toby"
babytest <- babynames %>% filter(name==namefilter, sex=="M")
plot.ts(nameseries)
nameseries <- ts(babytest$n, frequency = 1, start=1880)
namefilter <- "Max"
babytest <- babynames %>% filter(name==namefilter, sex=="M")
nameseries <- ts(babytest$n, frequency = 1, start=1880)
plot.ts(nameseries)
namefilter <- "Carlo"
babytest <- babynames %>% filter(name==namefilter, sex=="M")
nameseries <- ts(babytest$n, frequency = 1, start=1880)
plot.ts(nameseries)
namefilter <- "DeShawn"
babytest <- babynames %>% filter(name==namefilter, sex=="M")
nameseries <- ts(babytest$n, frequency = 1, start=1880)
plot.ts(nameseries)
namefilter <- "Andre"
babytest <- babynames %>% filter(name==namefilter, sex=="M")
nameseries <- ts(babytest$n, frequency = 1, start=1880)
plot.ts(nameseries)
namefilter <- "gianni"
babytest <- babynames %>% filter(name==namefilter, sex=="M")
nameseries <- ts(babytest$n, frequency = 1, start=1880)
plot.ts(nameseries)
namefilter <- "Keith"
babytest <- babynames %>% filter(name==namefilter, sex=="M")
nameseries <- ts(babytest$n, frequency = 1, start=1880)
plot.ts(nameseries)
library(babynames)
install.packages(c('openintro','OIdata','devtools','ggplot2','psych','reshape2',
'knitr','markdown'))
devtools::install_github("jbryer/IS606")
install.packages(c('openintro','OIdata','devtools','ggplot2','psych','reshape2',
'knitr','markdown'))
devtools::install_github("jbryer/IS606")
install.packages("rtools")
devtools::install_github("jbryer/IS606")
library(rtools)
library(rTools)
library(RTools)
library(IS606)
devtools::install_github("jbryer/IS606")
Sys.getenv("PATH")
Sys.getenv("PATH")
devtools::install_github("jbryer/IS606")
library(IS606)
devtools::install_github("jbryer/IS606")
install.packages("shiny")
devtools::install_github("jbryer/IS606")
library(IS606)
library(IS606)
viewLabs()
viewLab()
?IS606
getLabs()
setwd("E:/Downloads/Courses/CUNY/SPS/Git/IS 606 Statistics and Probability/Week 4")
startLab("Lab4a")
setwd("E:/Downloads/Courses/CUNY/SPS/Git/IS 606 Statistics and Probability/Week 4/Lab4a")
load("more/ames.RData")
View(ames)
area <- ames$Gr.Liv.Area
price <- ames$SalePrice
summary(area)
hist(area)
summary(area)
samp1 <- sample(area, 50)
summary(samp1)
hist(samp1)
summary(area)
hist(area)
sd(samp1)
sd(area)
1385/1366
1500/1442
mean(samp1)
samp2 <- sample(area, 50)
summary(samp1)
summary(samp2)
summary(area)
hist(samp2)
samp2 <- sample(area, 50)
summary(samp1)
summary(samp2)
summary(area)
hist(samp2)
set.seed(10684)
samp1 <- sample(area, 50)
summary(samp1)
hist(samp1)
sd(samp1)
sd(area)
1500/1443
1470.1406
1470/1406
mean(samp1)
samp2 <- sample(area, 50)
summary(samp1)
summary(samp2)
summary(area)
hist(samp2)
1418/1356
sample(area, 50)
sample(area, 50)
sample_means50 <- rep(NA, 5000)
for(i in 1:5000){
samp <- sample(area, 50)
sample_means50[i] <- mean(samp)
}
hist(sample_means50)
hist(sample_means50, breaks = 25)
sample_means50 <- rep(NA, 5000)
for(i in 1:5000){
samp <- sample(area, 50)
sample_means50[i] <- mean(samp)
print(i)
}
rep(0,500)
sample_means_small <- rep(0,100)
sample_means_small <- rep(0,100)
for(i in 1:100){
sample_means_small[i] <- mean(sample(area,50))
}
sample_means_small
hist(sample_means50)
sample_means10 <- rep(NA, 5000)
sample_means100 <- rep(NA, 5000)
for(i in 1:5000){
samp <- sample(area, 10)
sample_means10[i] <- mean(samp)
samp <- sample(area, 100)
sample_means100[i] <- mean(samp)
}
par(mfrow = c(3, 1))
xlimits <- range(sample_means10)
hist(sample_means10, breaks = 20, xlim = xlimits)
hist(sample_means50, breaks = 20, xlim = xlimits)
hist(sample_means100, breaks = 20, xlim = xlimits)
sampoyo50 <- sample(price,50)
mean <- mean(sampoyo50)
mean
hist(sample_means_oyo50,breaks=20)
sample_means_oyo50 <- rep(0,5000)
for(i in 1:5000){
sample_means_oyo50[i] <- mean(sample(price,50))
}
hist(sample_means_oyo50,breaks=20)
par(mfrow=c(1,1))
hist(sample_means_oyo50,breaks=20)
price_avg_mean <- mean(sample_means_oyo50)
price_pop_mean <- mean(price)
sample_means_oyo150 <- rep(0,5000)
for(i in 1:5000){
sample_means_oyo150[i] <- mean(sample(price,150))
}
hist(sample_means_oyo50,breaks=20)
price_avg_mean150 <- mean(sample_means_oyo50)
price_pop_mean150 <- mean(price)
price_avg_mean150
price_pop_mean150
sample_means_oyo150 <- rep(0,5000)
for(i in 1:5000){
sample_means_oyo150[i] <- mean(sample(price,150))
}
hist(sample_means_oyo150,breaks=20)
price_avg_mean150 <- mean(sample_means_oyo50)
price_pop_mean150 <- mean(price)
price_avg_mean150
price_pop_mean150
sample_means_oyo150 <- rep(0,5000)
for(i in 1:5000){
sample_means_oyo150[i] <- mean(sample(price,150))
}
xlimits <- range(sample_means_oyo50)
par(mfrow=c(2,1))
hist(sample_means_oyo50,breaks=20,xlim=xlimits)
hist(sample_means_oyo150,breaks=20,xlim=xlimits)
price_avg_mean150 <- mean(sample_means_oyo50)
price_pop_mean150 <- mean(price)
price_avg_mean150
price_pop_mean150
par(mfrow=c(1,1))
hist(sample_means_oyo150,breaks=20)
xlimits <- range(sample_means_oyo50)
par(mfrow=c(2,1))
hist(sample_means_oyo50,breaks=20,xlim=xlimits)
hist(sample_means_oyo150,breaks=20,xlim=xlimits)
price_avg_mean150 <- mean(sample_means_oyo50)
price_pop_mean150 <- mean(price)
price_avg_mean150
price_pop_mean150
getLabs()
startLab("Lab4b")
setwd("E:/Downloads/Courses/CUNY/SPS/Git/IS 606 Statistics and Probability/Week 4/Lab4b")
load("more/ames.RData")
population <- ames$Gr.Liv.Area
samp <- sample(population, 60)
View(ames)
summary(population)
hist(population)
par(mfrow=c(1,1))
hist(population)
population <- ames$Gr.Liv.Area
samp <- sample(population, 60)
summary(population)
hist(population)
population <- ames$Gr.Liv.Area
samp <- sample(population, 60)
summary(population)
hist(population)
population <- ames$Gr.Liv.Area
samp <- sample(population, 60)
population <- ames$Gr.Liv.Area
samp <- sample(population, 60)
summary(samp)
hist(samp)
hist(samp,breaks=15)
summary(samp)
population <- ames$Gr.Liv.Area
samp <- sample(population, 60)
summary(samp)
hist(samp,breaks=15)
sample_mean <- mean(samp)
se <- sd(samp) / sqrt(60)
lower <- sample_mean - 1.96 * se
upper <- sample_mean + 1.96 * se
c(lower, upper)
mean(population)
samp_mean <- rep(NA, 50)
samp_sd <- rep(NA, 50)
n <- 60
for(i in 1:50){
samp <- sample(population, n) # obtain a sample of size n = 60 from the population
samp_mean[i] <- mean(samp)    # save sample mean in ith element of samp_mean
samp_sd[i] <- sd(samp)        # save sample sd in ith element of samp_sd
}
lower_vector <- samp_mean - 1.96 * samp_sd / sqrt(n)
upper_vector <- samp_mean + 1.96 * samp_sd / sqrt(n)
c(lower_vector[1], upper_vector[1])
plot_ci(lower_vector, upper_vector, mean(population))
pnorm(1.96)
pnorm(1.96) - pnorm(-1.96)
source('~/.active-rstudio-document', echo=TRUE)
dnorm(.95)
dnorm(0.95)
qnorm(0.95)
criticalvalue85 <- qnorm(1-0.075)
criticalvalue85
lower_vector <- samp_mean - criticalvalue85 * samp_sd / sqrt(n)
upper_vector <- samp_mean + criticalvalue85 * samp_sd / sqrt(n)
plot_ci(lower_vector, upper_vector, mean(population))
lower_vector <- samp_mean - criticalvalue85 * samp_sd / sqrt(n)
upper_vector <- samp_mean + criticalvalue85 * samp_sd / sqrt(n)
plot_ci(lower_vector, upper_vector, mean(population))
lower_vector <- samp_mean - 1.96 * samp_sd / sqrt(n)
upper_vector <- samp_mean + 1.96 * samp_sd / sqrt(n)
plot_ci(lower_vector, upper_vector, mean(population))
lower_vector <- samp_mean - criticalvalue85 * samp_sd / sqrt(n)
upper_vector <- samp_mean + criticalvalue85 * samp_sd / sqrt(n)
plot_ci(lower_vector, upper_vector, mean(population))
lower_vector <- samp_mean - 1.96 * samp_sd / sqrt(n)
upper_vector <- samp_mean + 1.96 * samp_sd / sqrt(n)
plot_ci(lower_vector, upper_vector, mean(population))
lower_vector <- samp_mean - criticalvalue85 * samp_sd / sqrt(n)
upper_vector <- samp_mean + criticalvalue85 * samp_sd / sqrt(n)
plot_ci(lower_vector, upper_vector, mean(population))
lower_vector <- samp_mean - 1.96 * samp_sd / sqrt(n)
upper_vector <- samp_mean + 1.96 * samp_sd / sqrt(n)
plot_ci(lower_vector, upper_vector, mean(population))
lower_vector <- samp_mean - criticalvalue85-.5 * samp_sd / sqrt(n)
upper_vector <- samp_mean + criticalvalue85-.5 * samp_sd / sqrt(n)
plot_ci(lower_vector, upper_vector, mean(population))
lower_vector <- samp_mean - criticalvalue85 * samp_sd / sqrt(n)
upper_vector <- samp_mean + criticalvalue85 * samp_sd / sqrt(n)
plot_ci(lower_vector, upper_vector, mean(population))
?pnorm
se <- 9.4/sqrt(507)
interval <- c(171.1-1.96*se, 171.1+1.96*se)
interval
