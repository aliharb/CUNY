}
return(array(V,dim=c(r,r,k)))
}
scramblevcalc <- function(r){
scrambleapply <- function(rownum,r){
samp <- sample(c(1,0),rownum-1,replace=TRUE)
return(c(samp,1,rep(0,r-rownum)))
}
t(sapply(1:r,scrambleapply, r=r))
}
```
The sobol function uses these helper functions to generate a sobol sequence.
It takes the number of dimensions (or components), n, and a bool of whether
or not to scramble the sequence.
```{r, eval=FALSE}
sobol <- function(d,n,scramble=FALSE){
b <- 2
N <- 0:(n-1)
r <- floor(log(n-1)/log(b))+1
bb <- 1/b^(1:r)
bitcreate <- function(N,r){
return(as.numeric(intToBits(N))[1:r])
}
a <- t(apply(as.matrix(N,ncol=1),1,bitcreate, r=r))
p <- matrix(nrow=n,ncol=d)
V <- vcalc(d, r)
for(i in 1:d){
Vtemp <- V[,,i]
atv <- (a%*%t(Vtemp))%%b
if(scramble){
scramblevec <- scramblevcalc(r)
atv <- (atv%*%t(scramblevec))%%b
}
p[,i] <- bb %*% t(atv)
}
return(p)
}
sobolfunction(1000,2)
library(abind)
sobolfunction(1000,2)
cofx <- function(x,D){
theta.hat <- (1/((2*pi)^(D/2)))*exp((-1/2)*(t(x) %*% x))
return(theta.hat)
}
sobolfunction(1000,2)
sobol(2,1000)
library(ggplot2)
data.frame(sobol(2,1000))
soboldata <- data.frame(sobol(2,10))
data.frame(sobol(2,10))
soboldata <- data.frame(sobol(2,1000))
runifdata <- data.frame(x=runif(1000),y=runif(1000))
ggplot(soboldata,aes(x=x1,y=x2))+geom_point()
View(soboldata)
ggplot(soboldata,aes(x=X1,y=X2))+geom_point()
ggplot(runifdata,aes(x=x,y=y))+geom_point()
install.packages("quandl")
install.packages("Quandl")
Quandl("BITCOIN/CBXUSD", trim_start="2011-06-27", trim_end="2015-06-01")
library(Quandl)
Quandl("BITCOIN/CBXUSD", trim_start="2011-06-27", trim_end="2015-06-01")
bcusd <- Quandl("BITCOIN/CBXUSD", trim_start="2011-06-27", trim_end="2015-06-01")
View(bcusd)
typeof(bcusd)
bcusd$Close
typeof(bcusd$Close)
tail(bcusd,-1)
pcbcusd <- (tail(bcusd,-1)-head(bcusd,-1))/head(bcusd,-1)
typeof(bcusd$Close)
pcbcusd <- (tail(bcusd$Close,-1)-head(bcusd$Close,-1))/head(bcusd$Close,-1)
pcbcusd
pcbcusd <- ((tail(bcusd$Close,-1)-head(bcusd$Close,-1))/head(bcusd$Close,-1))*100
pcbcusd
hist(pcbcusd)
hist(pcbcusd,breaks=50)
hist(pcbcusd,breaks=100)
hist(pcbcusd,breaks=1000)
mean(pcbcusd)
Quandl.auth("1Cx13bkj4vDb7E13GLD6")
Quandl.api_key("1Cx13bkj4vDb7E13GLD6")
invpcbcusd <- ((tail(1/bcusd$Close,-1)-head(1/bcusd$Close,-1))/head(1/bcusd$Close,-1))*100
pcbcusd
invpcbcusd
pcbcusd
1/pcbcusd
hist(invpcbcusd,breaks=1000)
1/bcusd$Close
gbpusd <- Quandl("CURRFX/USDGBP", trim_start="1990-01-01", trim_end="2015-10-21")
gbpusd <- Quandl("CURRFX/USDGBP", trim_start="2011-06-27", trim_end="2015-06-01")
pcgbpusd <- ((tail(gbpusd,-1)-head(gbpusd,-1))/head(gbpusd,-1))*100
hist(pcgbpusd,breaks=1000)
pcgbpusd <- ((tail(gbpusd$Rate,-1)-head(gbpusd$Rate,-1))/head(gbpusd$Rate,-1))*100
hist(pcgbpusd,breaks=1000)
gldusd <- Quandl("WGC/GOLD_DAILY_USD", authcode="1Cx13bkj4vDb7E13GLD6", trim_start="1970-01-01", trim_end="2015-10-20")
pcgldusd <- ((tail(gldusd$Value,-1)-head(gldusd$Value,-1))/head(gldusd$Value,-1))*100
hist(invpcbcusd,breaks=5000)
hist(pcgbpusd,breaks=5000)
length(gldusd)
length(pcgldusd)
length(pcgbpusd)
length(invpcbcusd)
length(gldusd$Value)
length(bcusd$Close)
bcusd$Date
bcusd <- Quandl("BITCOIN/CBXUSD", authcode="1Cx13bkj4vDb7E13GLD6", trim_start="2015-01-01", trim_end="2015-06-01")
invpcbcusd <- ((tail(1/bcusd$Close,-1)-head(1/bcusd$Close,-1))/head(1/bcusd$Close,-1))*100
gbpusd <- Quandl("CURRFX/USDGBP", authcode="1Cx13bkj4vDb7E13GLD6", trim_start="2015-01-01", trim_end="2015-06-01")
pcgbpusd <- ((tail(gbpusd$Rate,-1)-head(gbpusd$Rate,-1))/head(gbpusd$Rate,-1))*100
gldusd <- Quandl("WGC/GOLD_DAILY_USD", authcode="1Cx13bkj4vDb7E13GLD6", trim_start="2015-01-01", trim_end="2015-10-20")
pcgldusd <- ((tail(gldusd$Value,-1)-head(gldusd$Value,-1))/head(gldusd$Value,-1))*100
bcusd <- Quandl("BITCOIN/CBXUSD", authcode="1Cx13bkj4vDb7E13GLD6", trim_start="2015-01-01", trim_end="2015-06-01")
invpcbcusd <- ((tail(1/bcusd$Close,-1)-head(1/bcusd$Close,-1))/head(1/bcusd$Close,-1))*100
gbpusd <- Quandl("CURRFX/USDGBP", authcode="1Cx13bkj4vDb7E13GLD6", trim_start="2015-01-01", trim_end="2015-06-01")
pcgbpusd <- ((tail(gbpusd$Rate,-1)-head(gbpusd$Rate,-1))/head(gbpusd$Rate,-1))*100
gldusd <- Quandl("WGC/GOLD_DAILY_USD", authcode="1Cx13bkj4vDb7E13GLD6", trim_start="2015-01-01", trim_end="2015-10-20")
pcgldusd <- ((tail(gldusd$Value,-1)-head(gldusd$Value,-1))/head(gldusd$Value,-1))*100
bcusd <- Quandl("BITCOIN/CBXUSD", authcode="1Cx13bkj4vDb7E13GLD6", trim_start="2015-05-01", trim_end="2015-06-01")
invpcbcusd <- ((tail(1/bcusd$Close,-1)-head(1/bcusd$Close,-1))/head(1/bcusd$Close,-1))*100
gbpusd <- Quandl("CURRFX/USDGBP", authcode="1Cx13bkj4vDb7E13GLD6", trim_start="2015-05-01", trim_end="2015-06-01")
pcgbpusd <- ((tail(gbpusd$Rate,-1)-head(gbpusd$Rate,-1))/head(gbpusd$Rate,-1))*100
gldusd <- Quandl("WGC/GOLD_DAILY_USD", authcode="1Cx13bkj4vDb7E13GLD6", trim_start="2015-05-01", trim_end="2015-10-20")
pcgldusd <- ((tail(gldusd$Value,-1)-head(gldusd$Value,-1))/head(gldusd$Value,-1))*100
pcgldusd
gldusd$Value
View(gldusd)
bcusd <- Quandl("BITCOIN/CBXUSD", authcode="1Cx13bkj4vDb7E13GLD6", trim_start="2015-05-01", trim_end="2015-06-01")
invpcbcusd <- ((tail(1/bcusd$Close,-1)-head(1/bcusd$Close,-1))/head(1/bcusd$Close,-1))*100
gbpusd <- Quandl("CURRFX/USDGBP", authcode="1Cx13bkj4vDb7E13GLD6", trim_start="2015-05-01", trim_end="2015-06-01")
pcgbpusd <- ((tail(gbpusd$Rate,-1)-head(gbpusd$Rate,-1))/head(gbpusd$Rate,-1))*100
gldusd <- Quandl("WGC/GOLD_DAILY_USD", authcode="1Cx13bkj4vDb7E13GLD6", trim_start="2015-05-01", trim_end="2015-06-01")
pcgldusd <- ((tail(gldusd$Value,-1)-head(gldusd$Value,-1))/head(gldusd$Value,-1))*100
bcusd <- Quandl("BITCOIN/CBXUSD", authcode="1Cx13bkj4vDb7E13GLD6", trim_start="2015-01-01", trim_end="2015-06-01")
invpcbcusd <- ((tail(1/bcusd$Close,-1)-head(1/bcusd$Close,-1))/head(1/bcusd$Close,-1))*100
gbpusd <- Quandl("CURRFX/USDGBP", authcode="1Cx13bkj4vDb7E13GLD6", trim_start="2015-01-01", trim_end="2015-06-01")
pcgbpusd <- ((tail(gbpusd$Rate,-1)-head(gbpusd$Rate,-1))/head(gbpusd$Rate,-1))*100
gldusd <- Quandl("WGC/GOLD_DAILY_USD", authcode="1Cx13bkj4vDb7E13GLD6", trim_start="2015-01-01", trim_end="2015-06-01")
pcgldusd <- ((tail(gldusd$Value,-1)-head(gldusd$Value,-1))/head(gldusd$Value,-1))*100
hist(invpcbcusd,breaks=100)
hist(pcgbpusd,breaks=100)
hist(pcgldusd,breaks=100)
hist(invpcbcusd,breaks=100)
hist(pcgbpusd,breaks=100)
hist(pcgldusd,breaks=100)
install.packages("GGally")
library(GGally)
ggpairs(invpcbcusd,pcgbpusd,pcgldusd)
ggpairs(c(invpcbcusd,pcgbpusd,pcgldusd))
?ggpairs
var(c(1,2,3,4,5))
teststatpound <- (mean(pcgbpusd)-mean(invpcbcusd))/
sqrt((var(invpcbcusd)/length(invpcbcusd))+var(pcgbpusd)/length(pcgbpusd))
teststatgold <- (mean(pcgldusd)-mean(invpcbcusd))/
sqrt((var(invpcbcusd)/length(invpcbcusd))+var(pcgldusd)/length(pcgldusd))
library(Quandl)
bcusd <- Quandl("BITCOIN/CBXUSD", authcode="1Cx13bkj4vDb7E13GLD6", trim_start="2015-01-01", trim_end="2015-06-01")
invpcbcusd <- ((tail(1/bcusd$Close,-1)-head(1/bcusd$Close,-1))/head(1/bcusd$Close,-1))*100
gbpusd <- Quandl("CURRFX/USDGBP", authcode="1Cx13bkj4vDb7E13GLD6", trim_start="2015-01-01", trim_end="2015-06-01")
pcgbpusd <- ((tail(gbpusd$Rate,-1)-head(gbpusd$Rate,-1))/head(gbpusd$Rate,-1))*100
gldusd <- Quandl("WGC/GOLD_DAILY_USD", authcode="1Cx13bkj4vDb7E13GLD6", trim_start="2015-01-01", trim_end="2015-06-01")
pcgldusd <- ((tail(gldusd$Value,-1)-head(gldusd$Value,-1))/head(gldusd$Value,-1))*100
hist(invpcbcusd,breaks=100)
hist(pcgbpusd,breaks=100)
hist(pcgldusd,breaks=100)
library(Quandl)
bcusd <- Quandl("BITCOIN/CBXUSD", authcode="1Cx13bkj4vDb7E13GLD6", trim_start="2015-01-01", trim_end="2015-06-01")
invpcbcusd <- ((tail(1/bcusd$Close,-1)-head(1/bcusd$Close,-1))/head(1/bcusd$Close,-1))*100
gbpusd <- Quandl("CURRFX/USDGBP", authcode="1Cx13bkj4vDb7E13GLD6", trim_start="2015-01-01", trim_end="2015-06-01")
pcgbpusd <- ((tail(gbpusd$Rate,-1)-head(gbpusd$Rate,-1))/head(gbpusd$Rate,-1))*100
gldusd <- Quandl("WGC/GOLD_DAILY_USD", authcode="1Cx13bkj4vDb7E13GLD6", trim_start="2015-01-01", trim_end="2015-06-01")
pcgldusd <- ((tail(gldusd$Value,-1)-head(gldusd$Value,-1))/head(gldusd$Value,-1))*100
hist(invpcbcusd,breaks=100)
hist(pcgbpusd,breaks=100)
hist(pcgldusd,breaks=100)
teststatpound <- (mean(pcgbpusd)-mean(invpcbcusd))/
sqrt((var(invpcbcusd)/length(invpcbcusd))+var(pcgbpusd)/length(pcgbpusd))
teststatgold <- (mean(pcgldusd)-mean(invpcbcusd))/
sqrt((var(invpcbcusd)/length(invpcbcusd))+var(pcgldusd)/length(pcgldusd))
teststatpound
teststatgold
hist(invpcbcusd,breaks=100)
hist(pcgbpusd,breaks=100)
hist(pcgldusd,breaks=100)
bcusd <- Quandl("BITCOIN/CBXUSD", authcode="1Cx13bkj4vDb7E13GLD6", trim_start="2015-01-01", trim_end="2015-06-01")
invpcbcusd <- ((tail(1/bcusd$Close,-1)-head(1/bcusd$Close,-1))/head(1/bcusd$Close,-1))*100
save.image("E:/Downloads/Courses/CUNY/SPS/Git/IS 606 Statistics and Probability/Final Project/quandldata.RData")
1.6/1.4
0.4/0/6
0.4/0.6
0.3*0.5*10+(1-0.3*0.5)*-10
0.3*0.5*10+0.3*0.5*-10+0.7*-10
0.5*0.7*10+(1-0.5*0.7)*-10
0.8*0.4*10+(1-0.8*0.4)*-10
.6*.2*10+(1-.6*.2)*-10
library(IS606)
?IS606
setwd("E:/Downloads/Courses/CUNY/SPS/Git/IS 606 Statistics and Probability/Week 5")
getLabs()
startLab("Lab5")
load("more/nc.RData")
setwd("E:/Downloads/Courses/CUNY/SPS/Git/IS 606 Statistics and Probability/Week 5/Lab5")
load("more/nc.RData")
summary(nc)
summary(nc)
summary(nc)$habit
typeof(summary(nc))
sum <- summary(nc)
colnames(sum)
library(dplyr)
select(nc,habit,weight)
sample <- nc %>% select(habit,weight) %>%
filter(!is.na(habit))
ggplot(sample,aes(x=habit,y=weight)) + geom_boxplot()
library(ggplot2)
ggplot(sample,aes(x=habit,y=weight)) + geom_boxplot()
by(nc$weight, nc$habit, mean)
by(nc$weight, nc$habit, length)
inference(y = nc$weight, x = nc$habit, est = "mean", type = "ht", null = 0,
alternative = "twosided", method = "theoretical")
inference(y = nc$weight, x = nc$habit, est = "mean", type = "ci", null = 0,
alternative = "twosided", method = "theoretical")
inference(y = nc$weight, x = nc$habit, est = "mean", type = "ci", null = 0,
alternative = "twosided", method = "theoretical",
order = c("smoker","nonsmoker"))
inference(y=nc$weeks, est="mean", type="ci", null=0, alternative="twosided",
method="theoretical")
inference(y=nc$weeks, est="mean", type="ci", null=0, alternative="twosided",
method="theoretical", conflevel=0.90)
inference(y=nc$weeks, x=nc$mage est="mean", type="ci", null=0,
alternative="twosided", method="theoretical", conflevel=0.90)
inference(y=nc$weeks, x=nc$mage, est="mean", type="ci", null=0,
alternative="twosided", method="theoretical", conflevel=0.90)
cutoffage <- median(nc$mage)
length(nc$mage[nc$mage == 27])
nc$oldyoung <- ifelse(nc$mage<=27,"Young","Mature")
inference(y=nc$weeks, x=nc$oldyoung, est="mean", type="ci", null=0,
alternative="twosided", method="theoretical", conflevel=0.90)
inference(y=nc$weeks, x=nc$oldyoung, est="mean", type="ht", null=0,
alternative="twosided", method="theoretical", conflevel=0.90)
inference(y=nc$weeks, x=nc$oldyoung, est="mean", type="ci", null=0,
alternative="twosided", method="theoretical", conflevel=0.90)
inference(y=nc$weeks, x=nc$oldyoung, est="mean", type="ci", null=0,
alternative="twosided", method="theoretical")
inference(y=nc$weeks, x=nc$oldyoung, est="mean", type="ht", null=0,
alternative="twosided", method="theoretical")
inference(y=nc$mage, x=nc$premie est="mean", type="ht", null=0,
alternative="twosided", method="theoretical")
inference(y=nc$mage, x=nc$premie, est="mean", type="ht", null=0,
alternative="twosided", method="theoretical")
setwd("E:/Downloads/Courses/CUNY/SPS/Git/IS 606 Statistics and Probability/Week 6/")
setwd("E:/Downloads/Courses/CUNY/SPS/Git/IS 606 Statistics and Probability/Week 6/")
startLab("Lab6")
setwd("E:/Downloads/Courses/CUNY/SPS/Git/IS 606 Statistics and Probability/Week 6/Lab6")
load("more/atheism.RData")
View(inference)
load("more/atheism.RData")
View(inference)
View(atheism)
us12 <- subset(atheism, nationality == "United States" & year == "2012")
us12
propAth <- length(us12$response[us12$response=="atheist"])/length(us12$response)
inference(us12$response, est = "proportion", type = "ci",
method = "theoretical", success = "atheist")
propAth
moe <- z*sqrt((propAth*(1-propAth))/length(us12$response))
z <- 1.96
moe <- z*sqrt((propAth*(1-propAth))/length(us12$response))
moe
library(dplyr)
factor(atheism$nationality)
levels(atheism$nationality)
arg12 <- filter(atheism, nationality=="Argentina", year=="2012")
arg12 <- filter(atheism, nationality=="Argentina", year==2012)
saf12 <- filter(atheism, nationality=="South Africa", year==2012)
inference(arg12, est = "proportion", type = "ci", method = "theoretical",
success = "atheist")
inference(arg12$response, est = "proportion", type = "ci",
method = "theoretical", success = "atheist")
inference(saf12$response, est = "proportion", type = "ci",
method = "theoretical", success = "atheist")
length(saf$response)
length(saf12$response)
nir12 <- filter(atheism, nationality=="Nigeria", year==2012)
inference(nir12$response, est = "proportion", type = "ci",
method = "theoretical", success = "atheist")
n <- 1000
p <- seq(0, 1, 0.01)
me <- 2 * sqrt(p * (1 - p)/n)
plot(me ~ p, ylab = "Margin of Error", xlab = "Population Proportion")
p <- 0.1
n <- 1040
p_hats <- rep(0, 5000)
for(i in 1:5000){
samp <- sample(c("atheist", "non_atheist"), n, replace = TRUE, prob = c(p, 1-p))
p_hats[i] <- sum(samp == "atheist")/n
}
hist(p_hats, main = "p = 0.1, n = 1040", xlim = c(0, 0.18))
mean(p_hats)
summary(p_hats)
p <- 0.1
n <- 400
p_hats1 <- rep(0, 5000)
for(i in 1:5000){
samp <- sample(c("atheist", "non_atheist"), n, replace = TRUE, prob = c(p, 1-p))
p_hats1[i] <- sum(samp == "atheist")/n
}
hist(p_hats1, main = "p = 0.1, n = 1040", xlim = c(0, 0.18))
p <- 0.02
n <- 1040
p_hats2 <- rep(0, 5000)
for(i in 1:5000){
samp <- sample(c("atheist", "non_atheist"), n, replace = TRUE, prob = c(p, 1-p))
p_hats2[i] <- sum(samp == "atheist")/n
}
hist(p_hats2, main = "p = 0.1, n = 1040", xlim = c(0, 0.18))
p <- 0.02
n <- 400
p_hats3 <- rep(0, 5000)
for(i in 1:5000){
samp <- sample(c("atheist", "non_atheist"), n, replace = TRUE, prob = c(p, 1-p))
p_hats3[i] <- sum(samp == "atheist")/n
}
hist(p_hats3, main = "p = 0.1, n = 1040", xlim = c(0, 0.18))
par(mfrow = c(2, 2))
hist(p_hats1, main = "p = 0.1, n = 1040", xlim = c(0, 0.18))
hist(p_hats2, main = "p = 0.1, n = 1040", xlim = c(0, 0.18))
par(mfrow = c(2, 2))
hist(p_hats, main = "p = 0.1, n = 1040", xlim = c(0, 0.18))
p <- 0.1
n <- 400
p_hats1 <- rep(0, 5000)
for(i in 1:5000){
samp <- sample(c("atheist", "non_atheist"), n, replace = TRUE, prob = c(p, 1-p))
p_hats1[i] <- sum(samp == "atheist")/n
}
hist(p_hats1, main = "p = 0.1, n = 400", xlim = c(0, 0.18))
p <- 0.02
n <- 1040
p_hats2 <- rep(0, 5000)
for(i in 1:5000){
samp <- sample(c("atheist", "non_atheist"), n, replace = TRUE, prob = c(p, 1-p))
p_hats2[i] <- sum(samp == "atheist")/n
}
hist(p_hats2, main = "p = 0.02, n = 1040", xlim = c(0, 0.18))
p <- 0.02
n <- 400
p_hats3 <- rep(0, 5000)
for(i in 1:5000){
samp <- sample(c("atheist", "non_atheist"), n, replace = TRUE, prob = c(p, 1-p))
p_hats3[i] <- sum(samp == "atheist")/n
}
hist(p_hats3, main = "p = 0.02, n = 400", xlim = c(0, 0.18))
aus12 <- select(atheism, nationality=="Australia", year==2012)
aus12 <- filter(atheism, nationality=="Australia", year==2012)
aus12 <- filter(atheism, nationality=="Australia")
ecd12 <- filter(atheism, nationality=="Ecuador", year==2012)
z <- 1.96
paus <- length(aus12$response[aus12$response=="atheist"])/length(aus12$response)
moeaus <- 1.96*sqrt(paus*(1-paus)/length(aus12$response))
z <- 1.96
moeaus <- z*sqrt(paus*(1-paus)/length(aus12$response))
moeecd <- z*sqrt(pecd*(1-pecd)/length(ecd12$response))
pecd <- length(ecd12$response[ecd12$response=="atheist"])/length(ecd12$response)
moeaus <- z*sqrt(paus*(1-paus)/length(aus12$response))
moeecd <- z*sqrt(pecd*(1-pecd)/length(ecd12$response))
paus
aus12
paus
pecd
pecd
esp <- filter(atheism,nationality=="Spain")
length(esp$year[esp$year==2012])
esp05 <- filter(atheism, nationality=="Spain", year==2005)
esp12 <- filter(atheism, nationality=="Spain", year==2012)
pesp05 <- length(esp05$response[esp05$response=="atheist"])/
length(esp05$response)
inference(esp05$response, est = "proportion", type = "ci",
method = "theoretical", success = "atheist")
pesp12
pesp05 <- length(esp05$response[esp05$response=="atheist"])/
length(esp05$response)
pesp12 <- length(esp12$response[esp12$response=="atheist"])/
length(esp12$response)
pesp12
inference(esp12$response, est = "proportion", type = "ci",
method = "theoretical", success = "atheist")
inference(esp05$response, est = "proportion", type = "ci",
method = "theoretical", success = "atheist")
inference(esp12$response, est = "proportion", type = "ci",
method = "theoretical", success = "atheist")
us05 <- filter(atheism, nationality=="United States", year==2005)
us12 <- filter(atheism, nationality=="United States", year==2012)
pus05 <- length(us05$response[us05$response=="atheist"])/
length(us05$response)
pus12 <- length(us12$response[us12$response=="atheist"])/
length(us12$response)
inference(us05$response, est = "proportion", type = "ci",
method = "theoretical", success = "atheist")
inference(us12$response, est = "proportion", type = "ci",
method = "theoretical", success = "atheist")
.05*39
.01^2
1.96^2
n <- ((1.96^2)*0.01*0.99)/0.0001
pnorm(0)
qnorm(0.975)
?qt
qt(0.975,24)
xbar <- mean(65,77)
SE <- (xbar-65)/t
xbar <- mean(65,77)
t <- qt(0.975,24)
SE <- (xbar-65)/t
moe <- xbar-65
n <- 25
sd <- n*SE^2
qnorm(0.95)
z <- qnorm(0.95)
sd <- 250
moe <- 25
n <- sd*(z/moe)^2
sd*(z/moe)^2
z/moe
qnorm(0.95)
z*sqrt(250/10)
z*sqrt(250/5)
z*sqrt(250/1)
n <- seq(5,25,by=1)
t <- qt(0.95,n)
se <- sqrt(sd/n)
moe <- t*se
moe
n <- seq(2,25,by=1)
t <- qt(0.95,n)
sd <- 250
se <- sqrt(sd/n)
moe <- t*se
moe
z <- qnorm(0.95)
sd <- 250
moe <- 25
sd*(z/moe)^2
qnorm(0.95)
z*sqrt(250/10)
z*sqrt(250/100)
z*sqrt(250/5)
n <- seq(2,25,by=1)
t <- qt(0.95,n)
sd <- 250
se <- sqrt(sd/n)
moe <- t*se
moe
qt(0.975,75)
qnorm(0.975)
qt(0.975,108)
qt(0.975,1000)
qnorm(0.975)
qt(0.975,10000)
qt(0.975,10000000)
qnorm(0.975)
qt(0.975,100)
qnorm(0.975)
qt(0.975,100)
n <- seq(2,25,by=1)
t <- qt(0.95,n-1)
sd <- 250
se <- sqrt(sd/n)
moe <- t*se
moe
T <- 12.76/1.67
xbar <- -0.545
sd <- 8.887
n <- 200
z <- xbar/(sd/sqrt(n))
z
qnorm(z)
z
pnorm(z)
pnorm(0)
pnorm(3)
pnorm(4)
pnorm(5)
pnorm(z)
pnorm(0.975)
qnorm(0.975)
z <- qnorm(0.975)
sdauto^2/nauto
2^2/2
2^3/1
2^3/2
2^1.5
xbarauto <- 16.12
xbarman <- 19.85
sdauto <- 3.58
sdman <- 4.51
nauto <- 26
nman <- 26
z <- qnorm(0.975)
se <- sqrt(sdauto^2/nauto + sdman^2/nman)
(xbarauto)-(xbarman)
((xbarauto)-(xbarman))/se
((xbarauto)-(xbarman))+z*se
xbarauto-xbarman
(xbarauto-xbarman)/se
tstat <- (xbarauto-xbarman)/se
pt(tstat,n-1)
pt(0,n-1)
(xbarauto-xbarman)/se
pt(tstat,n-1)
pt(tstat,n-1)*2
pt(tstat,nauto-1)*2
qt(0.975,25)
qt(0.975,25)*se
