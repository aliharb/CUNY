3^3
cofactorize <- function(M, i, j){
return(((-1)^(i+j)) * det(M[-i,-j]))
}
cofactorize(M, 1:3, 1:3)
3:1
aaply(M, 1, .fun(cofactorize), row(M), col(M))
aaply(M, 1, .fun=cofactorize, row(M), col(M))
aaply(M, 1, .fun=cofactorize, M, row(M), col(M))
row(M)
?outer
outer(1:3, 1:3, FUN=cofactorize, M)
outer(1:3, 1:3, FUN=cofactorize, M, row(M), col(M))
outer(1:3, 1:3, FUN="sum")
sum(1:3)
outer(1:3, 1:3)
outer(1:3, 1:3, FUN=sum)
outer(1:3, 1:3, FUN="sum")
outer(1:3, 1:3, FUN="+")
?match.fun
type(1:3)
typeof(1:3)
C <- matrix(nrow=nrow(M), ncol=ncol(M))
for(i in 1:nrow(M)){
for(j in 1:ncol(M)){
C[i,j] <- cofactorize(M, i, j)
}
}
C
?vectorize
?sapply
aaply(M, FUN=cofactorize, M, 1:3, 1:3)
aaply(M, c(1,2), FUN=cofactorize, M, 1:3, 1:3)
aaply(M, c(1,2), .fun=cofactorize, M, 1:3, 1:3)
aaply(M, c(1,2), .fun=cofactorize, M, 1:3, 1:3)
MInv <- C/det(M)
MInv
solve(M)
M <- matrix(c(1,2,3,4,9,6,7,8,9),nrow=3)
cofactorize <- function(M, i, j){
return(((-1)^(i+j)) * det(M[-i,-j]))
}
C <- matrix(nrow=nrow(M), ncol=ncol(M))
for(i in 1:nrow(M)){
for(j in 1:ncol(M)){
C[i,j] <- cofactorize(M, i, j)
}
}
MInv <- C/det(M)
MInv == solve(M)
MInv
solve(M)
MInv <- t(C)/det(M)
MInv
solve(M)
MInv == solve(M)
myinverse <- function(M){
C <- matrix(nrow=nrow(M), ncol=ncol(M))
for(i in 1:nrow(M)){
for(j in 1:ncol(M)){
C[i,j] <- cofactorize(M, i, j)
}
}
return(t(C)/det(M))
}
M <- matrix(c(1,2,3,4,9,6,7,8,9),nrow=3)
A <- matrix(c(1,1,1,1,0,1,3,4),nrow=4)
A
AtA <- t(A) %*% A
b <- matrix(c(0,8,8,19), nrow=4)
b
Atb <- t(A) %*% b
b <- matrix(c(0,8,8,20), nrow=4)
A <- matrix(c(1,1,1,1,0,1,3,4),nrow=4)
b <- matrix(c(0,8,8,20), nrow=4)
AtA <- t(A) %*% A
Atb <- t(A) %*% b
A <- matrix(c(1,1,1,1,0,1,3,4),nrow=4)
b <- matrix(c(0,8,8,20), nrow=4)
AtA <- t(A) %*% A
Atb <- t(A) %*% b
solve(AtA) %*% Atb
library(pracma)
rref(AtA)
Atb <- t(A) %*% b
Atb
cbind(AtA,Atb)
rref(cbind(AtA,Atb))
solve(AtA) %*% Atb
xhat <- solve(AtA) %*% Atb
e <- A %*% xhat - b
e
A %*% xhat - b
(A %*% xhat) - b
A <- matrix(c(1,1,1,1,0,1,3,4),nrow=4)
b <- matrix(c(0,8,8,19), nrow=4)
A <- matrix(c(1,1,1,1,0,1,3,4),nrow=4)
b <- matrix(c(0,8,8,19), nrow=4)
AtA <- t(A) %*% A
Atb <- t(A) %*% b
AtA
Atb
xhat <- solve(AtA) %*% Atb
xhat
e <- (A %*% xhat) - b
e
A <- matrix(c(1,1,1,1,0,1,3,4),nrow=4)
b <- matrix(c(0,8,8,20), nrow=4)
AtA <- t(A) %*% A
Atb <- t(A) %*% b
xhat <- solve(AtA) %*% Atb
e <- (A %*% xhat) - b
e
p <- matrix(c(1,5,13,17),nrow=4)
rref(cbind(A,p))
solve(A) %*% p
solve(A)
A
rref(cbind(A,b))
cbind(A,b)
rref(cbind(A,b))
rref(cbind(A,p))
rref(cbind(A,p))
rref(cbind(A,p))
((A %*% xhat) - b) * ((A %*% xhat) - b)
c(1,2,3,4) * c(1,2,3,4)
c(1,2,3,4) %*% c(1,2,3,4)
((A %*% xhat) - b) %*% ((A %*% xhat) - b)
((A %*% xhat) - b)
((A %*% xhat) - b)
((A %*% xhat) - b) %*% t((A %*% xhat) - b)
t((A %*% xhat) - b) %*% ((A %*% xhat) - b)
esquared <- t((A %*% xhat) - b) %*% ((A %*% xhat) - b)
esquared
p <- matrix(c(1,5,13,17),nrow=4)
rref(cbind(A,p))
e <- b - p
e <- b - p
t(e) %*% p
A
t(e) %*% A[,1]
t(e) %*% A[,2]
library(stringr)
setwd("E:/Downloads/Courses/CUNY/SPS/Git/IS 605 Fundamentals of Computational Mathematics/Assignment 6")
testword <- "this."
x <- "a1~!@#$%^&*(){}_+:\"<>?,./;'[]-="
str_replace_all(x, "[[:punct:]]", " ")
x <- "a1~!@#$%^&*(){}_+:\"<>?,./;'[]-="
str_replace_all(x, "[[:punct:]]", "")
[[:punct:]]
[[:punct:]]
testword <- c("this.", "that,")"
asdf
asd
fas
df
das
fas
d
)
dpsafs
asdf
as
df
asdf
w2
e
2r
00)))))))
""
testword <- c("this.", "that,")
str_replace_all(testword, "[[:punct:]]", "")
"." in [[:punct:]]
"."
"[[:punct:]]"
"." in "[[:punct:]]"
?grep
grep('[ABC]', 'ADE')
grep('[ABC]', 'TDE')
grep('[ABC]', 'ABE')
grep('[ABC]', c('ABE', 'TYU', 'IOP'))
?str_replace
str_replace("this.", "[.,/]", "")
str_replace(c("this.", "that", "the. other"), "[.,/]", "")
textlist <- scan("assign6.sample.txt", character(0), encoding = "UTF-8", quote=NULL)
textlist
textlist <- str_replace(textlist, "[,.]", "")
textlist
textlist <- str_replace(textlist, "[,.\"]", "")
textlist
"change”"
textlist <- scan("assign6.sample.txt", character(0), encoding = "UTF-8", quote=NULL)
textlist <- str_replace(textlist, "[,.\"]", "")
textlist
x <- "char\"dsf"
x
x <- "char\"dsf"
x
x <- "Learning \"R\" is fun!"
x
textlist[1357]
str_replace_all(textlist[1357], '"', "")
textlist[1357][1]
str_replace_all(textlist[1357], "[^A-Za-z\']", )
str_replace_all(textlist[1357], "[^A-Za-z\']", "")
textlist <- scan("assign6.sample.txt", character(0), encoding = "UTF-8", quote=NULL)
textlist
str_replace_all(textlist, "[^A-Za-z\']", "")
textlist <- str_replace_all(textlist, "[^A-Za-z\']", "")
tolower(c("HI", "THERE"))
textlist <- tolower(str_replace_all(textlist, "[^A-Za-z\']", ""))
length(textlist)
textlist <- textlist[textlist != ""]
length(textlist)
textlist
aggregate("for", by=list("for"), FUN=length)
aggregate("of", by=list("of"), FUN=length)
x <- "of"
aggregate(x, by=list(x), FUN=length)
textlist[textlist == "the"]
data.frame(a = c(1,2,3), b = c(4,5,6))
textlistDF <- data.frame(Word = textlist)
textlistDF$Count <- length(textlist[textlist == textlistDF$Word])
View(textlistDF)
?aggregate
library(dplyr)
?summarize
textlistDFS <- textlistDF %>%
group_by(Word) %>%
summarize()
View(textlistDFS)
textlistDFS <- textlistDF %>%
group_by(Word) %>%
summarize(Count = n())
View(textlistDFS)
library(stringr)
library(dplyr)
setwd("E:/Downloads/Courses/CUNY/SPS/Git/IS 605 Fundamentals of Computational Mathematics/Assignment 6")
textlist <- tolower(str_replace_all(textlist, "[^A-Za-z\']", ""))
textlist <- textlist[textlist != ""]
library(stringr)
library(dplyr)
setwd("E:/Downloads/Courses/CUNY/SPS/Git/IS 605 Fundamentals of Computational Mathematics/Assignment 6")
textlist <- tolower(str_replace_all(textlist, "[^A-Za-z\']", ""))
library(stringr)
library(dplyr)
setwd("E:/Downloads/Courses/CUNY/SPS/Git/IS 605 Fundamentals of Computational Mathematics/Assignment 6")
textlist <- scan("assign6.sample.txt", character(0), encoding = "UTF-8", quote=NULL)
textlist <- tolower(str_replace_all(textlist, "[^A-Za-z\']", ""))
textlist <- textlist[textlist != ""]
textlist
testlist <- c("Hello", "Hello's", "H'ello")
str_replace(testlist, "/'", "")
str_replace(testlist, "\'", "")
textlist <- scan("assign6.sample.txt", character(0), encoding = "UTF-8", quote=NULL)
textlist <- tolower(str_replace_all(textlist, "[^A-Za-z/']", ""))
textlist
textlist <- str_replace_all(textlist,"/'s$", "")
textlist <- scan("assign6.sample.txt", character(0), encoding = "UTF-8", quote=NULL)
textlist <- tolower(str_replace_all(textlist, "[^A-Za-z/']", ""))
textlist <- str_replace_all(textlist,"/'s$", "")
textlist
textlist <- textlist[textlist != ""]
textlist
unique(textlist)
textlistDFS <- textlistDF %>%
group_by(Word) %>%
summarize(Count = n())
textlistDF <- data.frame(Word = textlist)
textlistDFS <- textlistDF %>%
group_by(Word) %>%
summarize(Count = n())
View(textlistDFS)
textlistDFS <- textlistDF %>%
group_by(Word) %>%
summarize(Count = n()) %>%
mutate(Probability = Count / sum(textlistDFS$Count))
filename <- "assign6.sample.txt"
textlistorig <- scan(filename, character(0), encoding = "UTF-8", quote=NULL)
textlist <- tolower(str_replace_all(textlistorig, "[^A-Za-z/']", ""))
textlist <- str_replace_all(textlist,"/'s$", "")
textlist <- textlist[textlist != ""]
textlistDF <- data.frame(Word = textlist)
textlistDFS <- textlistDF %>%
group_by(Word) %>%
summarize(Count = n()) %>%
mutate(Probability = Count / sum(textlistDFS$Count))
setwd("E:/Downloads/Courses/CUNY/SPS/Git/IS 605 Fundamentals of Computational Mathematics/Assignment 6")
filename <- "assign6.sample.txt"
textlistorig <- scan(filename, character(0), encoding = "UTF-8", quote=NULL)
textlist <- tolower(str_replace_all(textlistorig, "[^A-Za-z/']", ""))
textlist <- str_replace_all(textlist,"/'s$", "")
textlist <- textlist[textlist != ""]
textlistDF <- data.frame(Word = textlist)
textlistDFS <- textlistDF %>%
group_by(Word) %>%
summarize(Count = n()) %>%
mutate(Probability = Count / sum(textlistDFS$Count))
head(textlistorig, -1)
textlistorig
textlist
head(textlist, -1)
textlistDF$Preceding <- c(NA, head(textlist, -1))
textlistDF$Following <- c(tail(textlist, -1), NA)
View(textlistDF)
textlistDF <- data.frame(Word = textlist)
textlistDF$Preceding <- c(NA, head(textlist, -1))
View(textlistDF)
textlistDF$Following <- c(tail(textlist, -1), NA)
setwd("E:/Downloads/Courses/CUNY/SPS/Git/IS 605 Fundamentals of Computational Mathematics/Assignment 6")
textlistorig <- scan(filename, character(0), encoding = "UTF-8", quote=NULL)
textlist <- tolower(str_replace_all(textlistorig, "[^A-Za-z/']", ""))
textlist <- str_replace_all(textlist,"/'s$", "")
textlist <- textlist[textlist != ""]
textlistDF <- data.frame(Word = textlist)
textlistDFS <- textlistDF %>%
group_by(Word) %>%
summarize(Count = n()) %>%
mutate(Probability = Count / sum(textlistDFS$Count))
textlistDF$Preceding <- c(NA, head(textlist, -1))
filename <- "assign6.sample.txt"
textlist <- tolower(str_replace_all(textlistorig, "[^A-Za-z/']", ""))
textlist <- str_replace_all(textlist,"/'s$", "")
textlist <- textlist[textlist != ""]
textlistDF <- data.frame(Word = textlist)
textlistDFS <- textlistDF %>%
group_by(Word) %>%
summarize(Count = n()) %>%
mutate(Probability = Count / sum(textlistDFS$Count))
textlistDF$Preceding <- c(NA, head(textlist, -1))
textlistorig <- scan(filename, character(0), encoding = "UTF-8", quote=NULL)
textlist <- tolower(str_replace_all(textlistorig, "[^A-Za-z/']", ""))
textlist <- str_replace_all(textlist,"/'s$", "")
textlist <- textlist[textlist != ""]
textlistDF <- data.frame(Word = textlist)
textlistDFS <- textlistDF %>%
group_by(Word) %>%
summarize(Count = n()) %>%
mutate(Probability = Count / sum(textlistDFS$Count))
textlistDF$Preceding <- c(NA, head(textlist, -1))
textlistDFS <- textlistDF %>%
group_by(Word) %>%
summarize(Count = n()) %>%
mutate(Probability = Count / sum(textlistDFS$Count))
textlistDFS <- textlistDF %>%
group_by(Word) %>%
summarize(Count = n())
testlistDFS <- testlistDFS %>%
mutate(Probability = Count / sum(textlistDFS$Count))
textlistDFS <- textlistDF %>%
group_by(Word) %>%
summarize(Count = n())
textlistDFS <- textlistDFS %>%
mutate(Probability = Count / sum(textlistDFS$Count))
textlistDF$Preceding <- c(NA, head(textlist, -1))
textlistDF$Following <- c(tail(textlist, -1), NA)
setwd("E:/Downloads/Courses/CUNY/SPS/Git/IS 605 Fundamentals of Computational Mathematics/Assignment 6")
filename <- "assign6.sample.txt"
textlistorig <- scan(filename, character(0), encoding = "UTF-8", quote=NULL)
textlist <- tolower(str_replace_all(textlistorig, "[^A-Za-z/']", ""))
textlist <- str_replace_all(textlist,"/'s$", "")
textlist <- textlist[textlist != ""]
textlistDF <- data.frame(Word = textlist)
textlistDFS <- textlistDF %>%
group_by(Word) %>%
summarize(Count = n())
textlistDFS <- textlistDFS %>%
mutate(Probability = Count / sum(textlistDFS$Count))
textlistDF$Preceding <- c(NA, head(textlist, -1))
duplicated(textlistDF)
duplicated(ata.frame(a = c(1,2,3,4,5,1), b = c(2,3,4,5,6,2)))
duplicated(data.frame(a = c(1,2,3,4,5,1), b = c(2,3,4,5,6,2)))
textlistDF$Following <- c(tail(textlist, -1), NA)
View(textlistDF)
length(textlistDF)
pairs <- c()
for(i in 1:(length(textlist)-1)){
temp <- paste(words[i],words[i+1], sep = ":")
temp <- sort(strsplit(temp, ":")[[1]])
pairs[i] <- paste(temp[1], temp[2], sep=":")
}
pairs <- c()
for(i in 1:(length(textlist)-1)){
temp <- paste(textlist[i],textlist[i+1], sep = ":")
temp <- sort(strsplit(temp, ":")[[1]])
pairs[i] <- paste(temp[1], temp[2], sep=":")
}
pairs
i <- 1
temp <- paste(textlist[i],textlist[i+1], sep = ":")
temp
sort(strsplit(temp, ":")[[1]])
pairs <- paste(head(textlist, -1), tail(textlist, -1), sep=":")
pairs
setwd("E:/Downloads/Courses/CUNY/SPS/Git/IS 605 Fundamentals of Computational Mathematics/Assignment 6")
filename <- "assign6.sample.txt"
textlistorig <- scan(filename, character(0), encoding = "UTF-8", quote=NULL)
textlist <- tolower(str_replace_all(textlistorig, "[^A-Za-z/']", ""))
textlist <- str_replace_all(textlist,"/'s$", "")
textlist <- textlist[textlist != ""]
textlistDF <- data.frame(Word = textlist)
textlistDFS <- textlistDF %>%
group_by(Word) %>%
summarize(Count = n())
textlistDFS <- textlistDFS %>%
mutate(Probability = Count / sum(textlistDFS$Count))
textlistDF$NextTo <- c(NA, head(textlist, -1))
View(textlistDF)
textlistDF <- textlistDF[2:,]
textlistDF <- textlistDF[2:nrow(textlistDF),]
View(textlistDF)
textlistDF$Word
textlistDF$Word == "can"
"can" == textlistDF$Word
textlistDF$Flag <- ifelse((textlistDF$Word == word1 & textlistDF$NextTo == word2) |
(textlistDF$Word == word2 & textlistDF$NextTo == word1),1,0)
word1 <- "the"
word2 <- "julia"
textlistDF$Flag <- ifelse((textlistDF$Word == word1 & textlistDF$NextTo == word2) |
(textlistDF$Word == word2 & textlistDF$NextTo == word1),1,0)
View(textlistDF)
sum(textlistDF$Flag) / nrow(textlistDF)
word1 <- "the"
word2 <- "of"
textlistorig <- scan(filename, character(0), encoding = "UTF-8", quote=NULL)
textlist <- tolower(str_replace_all(textlistorig, "[^A-Za-z/']", ""))
textlist <- str_replace_all(textlist,"/'s$", "")
textlist <- textlist[textlist != ""]
textlistDF <- data.frame(Word = textlist)
textlistDFS <- textlistDF %>%
group_by(Word) %>%
summarize(Count = n())
textlistDFS <- textlistDFS %>%
mutate(Probability = Count / sum(textlistDFS$Count))
textlistDF$NextTo <- c(NA, head(textlist, -1))
textlistDF <- textlistDF[2:nrow(textlistDF),]
textlistDF$Flag <- ifelse((textlistDF$Word == word1 & textlistDF$NextTo == word2) |
(textlistDF$Word == word2 & textlistDF$NextTo == word1),1,0)
sum(textlistDF$Flag) / nrow(textlistDF)
singleword <- function(filename){
textlistorig <- scan(filename, character(0), encoding = "UTF-8", quote=NULL)
textlist <- tolower(str_replace_all(textlistorig, "[^A-Za-z/']", ""))
textlist <- str_replace_all(textlist,"/'s$", "")
textlist <- textlist[textlist != ""]
textlistDF <- data.frame(Word = textlist)
textlistDFS <- textlistDF %>%
group_by(Word) %>%
summarize(Count = n()) %>%
mutate(Probability = Count / sum(textlistDFS$Count))
return(textlistDFS)
}
bigramtest <- function(filename, word1, word2){
textlistorig <- scan(filename, character(0), encoding = "UTF-8", quote=NULL)
textlist <- tolower(str_replace_all(textlistorig, "[^A-Za-z/']", ""))
textlist <- str_replace_all(textlist,"/'s$", "")
textlist <- textlist[textlist != ""]
textlistDF <- data.frame(Word = textlist)
textlistDFS <- textlistDF %>%
group_by(Word) %>%
summarize(Count = n())
textlistDFS <- textlistDFS %>%
mutate(Probability = Count / sum(textlistDFS$Count))
textlistDF$NextTo <- c(NA, head(textlist, -1))
textlistDF <- textlistDF[2:nrow(textlistDF),]
textlistDF$Flag <- ifelse((textlistDF$Word == word1 & textlistDF$NextTo == word2) |
(textlistDF$Word == word2 & textlistDF$NextTo == word1),1,0)
return(sum(textlistDF$Flag) / nrow(textlistDF))
}
singleword <- function(filename){
textlistorig <- scan(filename, character(0), encoding = "UTF-8", quote=NULL)
textlist <- tolower(str_replace_all(textlistorig, "[^A-Za-z/']", ""))
textlist <- str_replace_all(textlist,"/'s$", "")
textlist <- textlist[textlist != ""]
textlistDF <- data.frame(Word = textlist)
textlistDFS <- textlistDF %>%
group_by(Word) %>%
summarize(Count = n()) %>%
mutate(Probability = Count / sum(textlistDFS$Count))
return(textlistDFS)
}
bigramtest <- function(filename, word1, word2){
textlistorig <- scan(filename, character(0), encoding = "UTF-8", quote=NULL)
textlist <- tolower(str_replace_all(textlistorig, "[^A-Za-z/']", ""))
textlist <- str_replace_all(textlist,"/'s$", "")
textlist <- textlist[textlist != ""]
textlistDF <- data.frame(Word = textlist)
textlistDFS <- textlistDF %>%
group_by(Word) %>%
summarize(Count = n())
textlistDFS <- textlistDFS %>%
mutate(Probability = Count / sum(textlistDFS$Count))
textlistDF$NextTo <- c(NA, head(textlist, -1))
textlistDF <- textlistDF[2:nrow(textlistDF),]
textlistDF$Flag <- ifelse((textlistDF$Word == word1 & textlistDF$NextTo == word2) |
(textlistDF$Word == word2 & textlistDF$NextTo == word1),1,0)
return(sum(textlistDF$Flag) / nrow(textlistDF))
}
word1 <- "the"
word2 <- "of"
filename <- "assign6.sample.txt"
bigramtest(filename, word1, word2)
x <- bigramtest(filename, word1, wod2)
x <- bigramtest(filename, word1, word2)
outcomes <- 6 * 6 * 6
outcomes
rep(1,6)
die1 = c(rep(1,6),rep(2,6),rep(3,6),rep(4,6),rep(5,6),rep(6,6))
die2 <- rep(1:6,6)
Samplespace <- data.frame(die1 = die1, die2 = die2, sum = die1 + die2)
View(Samplespace)
nrow(Samplespace[Samplespace$sum == 3,])
nrow(Samplespace[Samplespace$sum == 3,]) / nrow(Samplespace)
