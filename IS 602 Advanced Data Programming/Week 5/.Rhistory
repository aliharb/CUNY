nchar(str)
substr(str, nchar(str), nchar(str))
vec <- c("hello", "goodbye")
vec <- c("hello", "goodbye", "hello")
vec2 <- substr(vec, 1, nchar(vec)-1)
vec2 <- substr(vec[vec == "hello"], 1, nchar(vec)-1)
vec2 <- vec
vec2[vec2 == "hello"] <- substr(vec[vec == "hello"], 1, nchar(vec)-1)
vec2 <- vec
vec2[vec2 == "hello"] <- substr(vec2[vec2 == "hello"], 1, nchar(vec2)-1)
vec2 <- vec
vec2[vec2=="hello"]
vec2[vec2=="hello"] <- "goodbye"
vec2 <- vec
vec2 <- substr(vec, 1, nchar(vec)-1)
vec2 <- vec
vec2[vec2=="hello"] <- substr(vec2[vec2 == "hello"], 1, nchar(vec2[vec2 == "hello"])-1)
wvaluetable %>%
filter(substr(Area, nchar(Area), nchar(Area)) == "]") %>%
select(Area)
wvaluetable %>%
select(Area)
colnames(wvaluetable)
colnames(wvaluetable) <- c("Island", "Location", "Area", "Population")
wvaluetable %>%
filter(substr(Area, nchar(Area), nchar(Area)) == "]") %>%
select(Area)
wvaluetable$Area[substr(wvaluetable$Area, nchar(wvaluetable$Area), nchar(wvaluetable$Area)) ==
"]"] <-
substr(wvaluetable$Area[substr(wvaluetable$Area, nchar(wvaluetable$Area), nchar(wvaluetable$Area)) ==
"]"], 1.
nchar(wvaluetable$Area[substr(wvaluetable$Area, nchar(wvaluetable$Area), nchar(wvaluetable$Area)) ==
"]"])-3)
minus3 <- function(str){
return(substr(str, 1, nchar(substr)-3))
}
minus1 <- function(str){
return(substr(str, nchar(str), nchar(str)))
}
minus3 <- function(str){
}
return(substr(str, 1, nchar(str)-3))
wvaluetable$Area[minus1(wvaluetabl$Area) == "]"] <-
minus3(wvaluetable$Area[minus1(wvaluetabl$Area) == "]"])
wvaluetable$Area[minus1(wvaluetabl$Area) == "]"] <-
minus3(wvaluetable$Area[minus1(wvaluetable$Area) == "]"])
?as.string
?as.char
?aschar
wvalutable$Area
wvalutable$Area
wvalutable
wvaluetable
wvaluetable$Area
minus1(wvaluetable$Area)
minus1(character(wvaluetable$Area))
character(wvaluetable$Area)
?character
as.character(wvaluetable$Area)
minus1(as.character(wvaluetable$Area))
wvaluetable$Area[minus1(wvaluetable$Area) == "]"]
for(item in wvaluetable$Area){
item <- as.character(item)
if(substr(item, nchar(item), nchar(item)) == "]"){
item <- substr(item, nchar(item)-3, nchar(item))
}
}
theURL <- "http://en.wikipedia.org/wiki/List_of_freshwater_islands_in_Scotland"
wvalues.6 <- readHTMLTable(theURL)
wvaluetable <- wvalues.6[[1]]
for(item in wvaluetable$Area){
item <- as.character(item)
if(substr(item, nchar(item), nchar(item)) == "]"){
item <- substr(item, nchar(item)-3, nchar(item))
}
item <- as.numeric(item)
}
theURL <- "http://en.wikipedia.org/wiki/List_of_freshwater_islands_in_Scotland"
wvalues.6 <- readHTMLTable(theURL)
wvaluetable <- wvalues.6[[1]]
#Now to format the tables:
for(item in wvaluetable$Area){
if(substr(item, nchar(item), nchar(item)) == "]"){
item <- as.character(item)
item <- substr(item, nchar(item)-3, nchar(item))
}
#item <- as.numeric(item)
}
wvaluetable$Area
theURL <- "http://en.wikipedia.org/wiki/List_of_freshwater_islands_in_Scotland"
wvalues.6 <- readHTMLTable(theURL)
wvaluetable <- wvalues.6[[1]]
#Now to format the tables:
for(item in wvaluetable$Area){
item <- as.character(item)
if(substr(item, nchar(item), nchar(item)) == "]"){
}
item <- substr(item, 1, nchar(item)-3)
#item <- as.numeric(item)
}
wvaluetable$Area
wvaluetable$Area[3]
as.character(wvaluetable$Area[3])
substr(as.character(wvaluetable$Area[3]), 1, nchar(as.character(wvaluetable$Area[3]))-3)
substr(as.character(wvaluetable$Area[3]), 1, nchar(as.character(wvaluetable$Area[3]))-4)
theURL <- "http://en.wikipedia.org/wiki/List_of_freshwater_islands_in_Scotland"
wvalues.6 <- readHTMLTable(theURL)
wvaluetable <- wvalues.6[[1]]
#Now to format the tables:
wvaluetable$Area <- as.character(wvaluetable$Area)
for(item in wvaluetable$Area){
if(substr(item, nchar(item), nchar(item)) == "]"){
item <- substr(item, 1, nchar(item)-4)
}
#item <- as.numeric(item)
}
wvaluetable$Area
item <- wvaluetable$Area[3]
substr(item, nchar(item), nchar(item)) == "]"
item <- substr(item, 1, nchar(item)-4)
item
item <- wvaluetable$Area[5]
item
if(substr(item, nchar(item), nchar(item)) == "]"){
item <- substr(item, 1, nchar(item)-4)
}
item
theURL <- "http://en.wikipedia.org/wiki/List_of_freshwater_islands_in_Scotland"
wvalues.6 <- readHTMLTable(theURL)
wvaluetable <- wvalues.6[[1]]
#Now to format the tables:
wvaluetable$Area <- as.character(wvaluetable$Area)
for(item in wvaluetable$Area){
if(substr(item, nchar(item), nchar(item)) == "]"){
item <- substr(item, 1, nchar(item)-4)
}
#item <- as.numeric(item)
}
theURL <- "http://en.wikipedia.org/wiki/List_of_freshwater_islands_in_Scotland"
wvalues.6 <- readHTMLTable(theURL)
wvaluetable <- wvalues.6[[1]]
#Now to format the tables:
colname(wvaluetable)
colnames(wvaluetable)
colnames(wvaluetable) <- c("Island", "Location", "Area", "Population")
wvaluetable$Area <- as.character(wvaluetable$Area)
for(item in wvaluetable$Area){
if(substr(item, nchar(item), nchar(item)) == "]"){
item <- substr(item, 1, nchar(item)-4)
}
#item <- as.numeric(item)
}
wvaluetable$Area
theURL <- "http://en.wikipedia.org/wiki/List_of_freshwater_islands_in_Scotland"
wvalues.6 <- readHTMLTable(theURL)
wvaluetable <- wvalues.6[[1]]
#Now to format the tables:
colnames(wvaluetable) <- c("Island", "Location", "Area", "Population")
wvaluetable$Area <- as.character(wvaluetable$Area)
wvaluetable$Area
for(item in wvaluetable$Area){
if(substr(item, nchar(item), nchar(item)) == "]"){
item <- substr(item, 1, nchar(item)-4)
}
#item <- as.numeric(item)
}
wvaluetable$Area
for(item in wvaluetable$Area){
if(substr(item, nchar(item), nchar(item)) == "]"){
print("Hello")
item <- substr(item, 1, nchar(item)-4)
}
#item <- as.numeric(item)
}
wvaluetable$Area
item <- wvaluetable$Area[5]
if(substr(item, nchar(item), nchar(item)) == "]"){
print("Hello")
item <- substr(item, 1, nchar(item)-4)
}
wvaluetable$Area
item
if(substr(item, nchar(item), nchar(item)) == "]"){
print("Hello")
item <- substr(item, 1, nchar(item)-4)
}
item
vec <- c("Hello", "goodbye", "Hello")
for(item in vec){
if(item == "Hello"){
item <- "Goodbye"
}
}
theURL <- "http://en.wikipedia.org/wiki/List_of_freshwater_islands_in_Scotland"
wvalues.6 <- readHTMLTable(theURL)
wvaluetable <- wvalues.6[[1]]
#Now to format the tables:
colnames(wvaluetable) <- c("Island", "Location", "Area", "Population")
wvaluetable$Area <- as.character(wvaluetable$Area)
wvaluetable$Area[minus1(wvaluetable$Area) == "]"]
wvaluetable$Area[minus1(wvaluetable$Area) == "]"] <-
minus3(wvaluetable$Area[minus1(wvaluetable$Area) == "]"])
minus3(wvaluetable$Area[minus1(wvaluetable$Area) == "]"])
vec
substr(vec, 1, 2)
minus1 <- function(str){
return(substr(str, nchar(str), nchar(str)))
}
minus3 <- function(str){
}
return(substr(str, 1, nchar(str)-4))
colnames(wvaluetable) <- c("Island", "Location", "Area", "Population")
minus3 <- function(str){
return(substr(str, 1, nchar(str)-4))
}
wvaluetable$Area[minus1(wvaluetable$Area) == "]"]
minus3(wvaluetable$Area[minus1(wvaluetable$Area) == "]"])
wvaluetable$Area[minus1(wvaluetable$Area) == "]"] <-
minus3(wvaluetable$Area[minus1(wvaluetable$Area) == "]"])
wvaluetable$Area
theURL <- "http://en.wikipedia.org/wiki/List_of_freshwater_islands_in_Scotland"
wvalues.6 <- readHTMLTable(theURL)
wvaluetable <- wvalues.6[[1]]
#Now to format the tables:
minus1 <- function(str){
return(substr(str, nchar(str), nchar(str)))
}
minus3 <- function(str){
return(substr(str, 1, nchar(str)-4))
}
colnames(wvaluetable) <- c("Island", "Location", "Area", "Population")
wvaluetable$Area <- as.character(wvaluetable$Area)
wvaluetable$Area[minus1(wvaluetable$Area) == "]"] <-
minus3(wvaluetable$Area[minus1(wvaluetable$Area) == "]"])
wvaluetable$Area <- as.numeric(wvaluetable$Area)
wvaluetable$Population
wvaluetable$Population <- as.numeric(wvaluetable$Population)
View(wvaluetable)
c <- 0
c <- as.numeric(c)
theURL <- "http://en.wikipedia.org/wiki/List_of_freshwater_islands_in_Scotland"
wvalues.6 <- readHTMLTable(theURL)
wvaluetable <- wvalues.6[[1]]
#Now to format the tables:
minus1 <- function(str){
return(substr(str, nchar(str), nchar(str)))
}
minus3 <- function(str){
return(substr(str, 1, nchar(str)-4))
}
colnames(wvaluetable) <- c("Island", "Location", "Area", "Population")
wvaluetable$Area <- as.character(wvaluetable$Area)
wvaluetable$Area[minus1(wvaluetable$Area) == "]"] <-
minus3(wvaluetable$Area[minus1(wvaluetable$Area) == "]"])
wvaluetable$Area <- as.numeric(wvaluetable$Area)
View(wvaluetable)
vec <- wvaluetable$Population
vec
as.numeric(vec)
as.numeric(as.character(vec))
wvaluetable$Population <- as.numeric(as.character(wvaluetable$Population))
View(wvaluetable)
library(dplyr)
require(XML)
theURL <- "http://en.wikipedia.org/wiki/List_of_freshwater_islands_in_Scotland"
wvalues.6 <- readHTMLTable(theURL)
wvaluetable <- wvalues.6[[1]]
#Now to format the tables:
minus1 <- function(str){
return(substr(str, nchar(str), nchar(str)))
}
minus3 <- function(str){
return(substr(str, 1, nchar(str)-4))
}
colnames(wvaluetable) <- c("Island", "Location", "Area", "Population")
wvaluetable$Area <- as.character(wvaluetable$Area)
wvaluetable$Area[minus1(wvaluetable$Area) == "]"] <-
minus3(wvaluetable$Area[minus1(wvaluetable$Area) == "]"])
wvaluetable$Area <- as.numeric(wvaluetable$Area)
wvaluetable$Population <- as.numeric(as.character(wvaluetable$Population))
View(wvaluetable)
install.packages("devtools")
install_github("hadley/rvest")
library(devtools)
install_github("hadley/rvest")
library(rvest)
theURL <-"http://en.wikipedia.org/wiki/List_of_cocktails"
theSource <- html(theURL)
theSource
html_text(theURL, h2)
theURL <-"http://en.wikipedia.org/wiki/Largest_organisms"
theSource <- html(theURL)
library(rvest)
lego_movie <- html("http://www.imdb.com/title/tt1490017/")
rating <- lego_movie %>%
html_nodes("strong span") %>%
html_text() %>%
as.numeric()
theURL <-"http://en.wikipedia.org/wiki/Largest_organisms"
theSource <- html(theURL)
cocktailList <- theSource %>%
html_notes("li a") %>%
html_text()
cocktailList <- theSource %>%
html_nodes("li a") %>%
html_text()
theURL <-"http://en.wikipedia.org/wiki/List_of_cocktails"
theSource <- html(theURL)
cocktailList <- theSource %>%
html_nodes("li a") %>%
html_text()
cocktailList
cocktailList <- theSource %>%
html_nodes("ul li a") %>%
html_text()
cocktailList <- theSource %>%
html_nodes("#Absinthe ul li a") %>%
html_text()
cocktailList
cocktailList <- theSource %>%
html_nodes("#Absinthe ul li a") %>%
html_text()
cocktailList <- theSource %>%
html_nodes("#Absinthe .itemprop ul li a") %>%
html_text()
cocktailList <- theSource %>%
html_nodes("#Absinthe .itemprop li") %>%
html_text()
html_nodes("#Absinthe .itemprop") %>%
cocktailList <- theSource %>%
html_nodes("#Absinthe .itemprop") %>%
html_text()
cocktailList
cocktailList <- theSource %>%
html_nodes("#Absinthe .itemprop a") %>%
html_text()
theSource <- html(theURL)
cocktailList <- theSource %>%
html_nodes("a") %>%
html_text()
cocktailList <- theSource %>%
html_nodes("h2 span") %>%
html_text()
cocktailList
cocktailList <- theSource %>%
html_nodes("#mw-headline .itemprop h2 span") %>%
html_text()
cast <- lego_movie %>%
html_nodes("#titleCast .itemprop span") %>%
html_text()
cast
cocktailList <- theSource %>%
html_nodes("ul li a") %>%
html_text()
cocktailList <- theSource %>%
html_nodes("div ul li a") %>%
html_text()
cocktailList <- theSource %>%
html_nodes("div div ul li a") %>%
html_text()
cocktailList <- theSource %>%
html_nodes("#Absinthe div div ul li a") %>%
html_text()
cocktailList <- theSource %>%
html_nodes("#Absinthe .id div div ul li a") %>%
html_text()
cocktailList <- theSource %>%
html_nodes("#Absinthe .class div div ul li a") %>%
html_text()
cocktailList <- theSource %>%
html_text()
html_nodes("#Absinthe .class li a") %>%
cocktailList <- theSource %>%
html_nodes("#Absinthe .class") %>%
html_text()
cocktailList <- theSource %>%
html_nodes("#Absinthe .class span") %>%
html_text()
vignette("selectorgadget")
cocktailList <- theSource %>%
html_text()
html_nodes("#Absinthe .div-col ul li a") %>%
cocktailList <- theSource %>%
html_nodes("#Absinthe ul li a") %>%
html_text()
html_nodes("div ul li a") %>%
cocktailList <- theSource %>%
html_nodes("div ul li a") %>%
html_text()
cocktailList <- theSource %>%
html_nodes("div ul li a") %>%
html_text()
cocktailList <- theSource %>%
html_nodes("div div ul li a") %>%
html_text()
cocktailList <- theSource %>%
html_nodes("h2 div div ul li a") %>%
html_text()
html_nodes("div div ul li a") %>%
cocktailList <- theSource %>%
html_nodes("div div ul li a") %>%
html_text()
cocktailList <- theSource %>%
html_nodes("div div ul li a") %>%
html_text()
cocktailList
cocktailList <- theSource %>%
html_nodes("#Absinthe") %>%
html_text()
cocktailList
cocktailList <- theSource %>%
html_nodes("#corpse #reviver") %>%
html_text()
cocktailList <- theSource %>%
html_nodes("#corpse") %>%
html_text()
cocktailList <- theSource %>%
html_nodes(".Absinthe div ul li a") %>%
html_text()
cocktailList <- theSource %>%
html_nodes("#Absinthe .div-col div ul li a") %>%
html_text()
cocktailList <- theSource %>%
html_nodes(".div-col div ul li a") %>%
html_text()
cocktailList <- theSource %>%
html_nodes("#Absinthe a") %>%
html_text()
cocktailList <- theSource %>%
html_nodes("#Absinthe") %>%
html_text()
cocktailList <- theSource %>%
html_nodes("#Absinthe .id") %>%
html_text()
cocktailList <- theSource %>%
html_nodes(".(div-col columns column-count column-count-2)") %>%
html_text()
cocktailList <- theSource %>%
html_nodes(".div-col columns column-count column-count-2") %>%
html_text()
cocktailList <- theSource %>%
html_nodes(".div-col") %>%
html_text()
cocktailList
cocktailList <- theSource %>%
html_nodes(".div-col ul li a") %>%
html_text()
cocktailList
cocktailList <- theSource %>%
html_nodes("#Absinthe .div-col ul li a") %>%
html_text()
cocktailList <- theSource %>%
html_nodes(".div-col ul li a") %>%
html_text()
cocktailList <- theSource %>%
html_nodes(".div-col .columns ul li a") %>%
html_text()
cocktailList <- theSource %>%
html_nodes(".columns ul li a") %>%
html_text()
cocktailList <- theSource %>%
html_nodes(".column-count-2 ul li a") %>%
html_text()
cocktailList
cocktailList <- theSource %>%
html_nodes(".Absinthe ul li a") %>%
html_text()
cocktailList <- theSource %>%
html_nodes(".column-count-2 .boilerplate ul li a") %>%
html_text()
cocktailList <- theSource %>%
html_nodes(".boilerplate ul li a") %>%
html_text()
cocktailList <- theSource %>%
html_nodes(".column-count-2 ul li a") %>%
html_text()
cocktailList
cocktailList <- cocktailList[cocktailList != "IBA"]
cocktailList
cocktailList <- theSource %>%
html_notes("dl~ ul a , .tright+ ul a , h4+ ul a , .column-count-3 li > a , .seealso+ ul a , .column-count-2 li > a") %>%
html_text()
cocktailList <- theSource %>%
html_nodes("dl~ ul a , .tright+ ul a , h4+ ul a , .column-count-3 li > a , .seealso+ ul a , .column-count-2 li > a") %>%
html_text()
cocktailList
cocktailList <- cocktailList[cocktailList != "IBA"]
vignette("selectorgadget")
?selectorgadget
cocktailList <- theSource %>%
html_nodes("p+ ul b , dd b , .thumb+ ul b , h3+ ul b , .seealso+ ul a b , h2+ ul a:nth-child(1) b") %>%
html_text()
cocktailList
cocktailList <- theSource %>%
html_nodes("p+ ul b , dd b , .thumb+ ul b , h3+ ul b , .seealso+ ul a b , h2+ ul a:nth-child(1) b") %>%
html_text()
theURL <-"http://en.wikipedia.org/wiki/List_of_paradoxes"
theSource <- html(theURL)
cocktailList <- theSource %>%
html_nodes("p+ ul b , dd b , .thumb+ ul b , h3+ ul b , .seealso+ ul a b , h2+ ul a:nth-child(1) b") %>%
html_text()
cocktailList
library(rvest)
theURL <-"http://en.wikipedia.org/wiki/List_of_paradoxes"
theSource <- html(theURL)
paradoxList <- theSource %>%
html_nodes("p+ ul b , dd b , .thumb+ ul b , h3+ ul b , .seealso+ ul a b , h2+ ul a:nth-child(1) b") %>%
html_text()
paradoxList
setwd("C:/Users/Charley/Downloads/Courses/CUNY/SPS/IS 602 Advanced Data Programming/Week 5")
df <- read.csv("brainandbody.csv")
summary(lm(brain ~ body, data=df))
